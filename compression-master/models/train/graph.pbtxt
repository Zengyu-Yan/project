node {
  name: "normalize_element/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "images/Page3 2.png"
      }
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "normalize_element/component_0"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "TensorSliceDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "ShuffleDataset"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "ParallelMapDataset"
  op: "ParallelMapDataset"
  input: "RepeatDataset"
  input: "num_parallel_calls"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_map_read_png_99"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: false
    }
  }
  attr {
    key: "sloppy"
    value {
      b: false
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "MapDataset"
  op: "MapDataset"
  input: "ParallelMapDataset"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_map_<lambda>_122"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: false
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 8
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "BatchDatasetV2"
  op: "BatchDatasetV2"
  input: "MapDataset"
  input: "batch_size"
  input: "drop_remainder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "parallel_copy"
    value {
      b: false
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "PrefetchDataset"
  op: "PrefetchDataset"
  input: "BatchDatasetV2"
  input: "buffer_size_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "legacy_autotune"
    value {
      b: true
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_EmadYl1Fqfs"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\t\000\000\000\t\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072928786277771
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  input: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal"
  op: "Add"
  input: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/mul"
  input: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\001\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Initializer/Reshape"
  op: "Reshape"
  input: "analysis_transform/layer_0/kernel_rdft/Initializer/truncated_normal"
  input: "analysis_transform/layer_0/kernel_rdft/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Initializer/irdft_9x9"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
        tensor_content: "9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\275D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\276\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\276D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\2759\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{nv\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\276\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\2759\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\275D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276l\225R>\332J\231\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\2749\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\276\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\2759\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\276\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\275\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{n\275\347\033H=<\250\033=\225\315\206\275\226<X\274\332J\231=\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\276\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\275\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316=\030E\222\275\315X\375=\030E\222\275\315X\375\275\030E\022>\000\000\000\000\030E\222\275\315X\375=9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276l\225R>\332J\231\275\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\274\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\tc>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013\276\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\2769\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\2759\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\3073\027\276\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\352!\\\275<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316=\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013\276\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\275\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\275\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\2769\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\275\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{n\275\347\033H=<\250\033=\225\315\206\275\226<X\274\332J\231=\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\275\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316=\030E\222\275\315X\375=\030E\222\275\315X\375\275\030E\022>\000\000\000\000\030E\222\275\315X\375=\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\2769\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\274\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\t\276\347\033H=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\3073\027\276\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\352!\\=<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316\275\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013>\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\274\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\2769\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\275\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{n=\347\033H\275<\250\033\275\225\315\206=\226<X<\332J\231\275\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316\275\030E\222=\315X\375\275\030E\222=\315X\375=\030E\022\276\000\000\000\000\030E\222=\315X\375\275\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\2769\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276lc>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013>\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\2769\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\274\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\275\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{n=\347\033H\275<\250\033\275\225\315\206=\226<X<\332J\231\275\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316\275\030E\222=\315X\375\275\030E\222=\315X\375=\030E\022\276\000\000\000\000\030E\222=\315X\375\2759\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\276\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\2759\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316=\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\2749\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\275D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\2759\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{nv\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\276\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\t\276\347\033H=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Initializer/MatMul"
  op: "MatMul"
  input: "analysis_transform/layer_0/kernel_rdft/Initializer/irdft_9x9"
  input: "analysis_transform/layer_0/kernel_rdft/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 81
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/kernel_rdft"
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft"
  input: "analysis_transform/layer_0/kernel_rdft/Initializer/MatMul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/irdft_9x9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
        tensor_content: "9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\275D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\276\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\276D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\2759\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{nv\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\276\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\2759\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\275D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276l\225R>\332J\231\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\2749\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\276\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\2759\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\276\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\275\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{n\275\347\033H=<\250\033=\225\315\206\275\226<X\274\332J\231=\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\276\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\275\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316=\030E\222\275\315X\375=\030E\222\275\315X\375\275\030E\022>\000\000\000\000\030E\222\275\315X\375=9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276l\225R>\332J\231\275\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\274\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\tc>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013\276\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\2769\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\2759\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\3073\027\276\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\352!\\\275<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316=\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013\276\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\275\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\275\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\2769\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\275\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{n\275\347\033H=<\250\033=\225\315\206\275\226<X\274\332J\231=\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\275\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316=\030E\222\275\315X\375=\030E\222\275\315X\375\275\030E\022>\000\000\000\000\030E\222\275\315X\375=\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\2769\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\274\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\t\276\347\033H=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\3073\027\276\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\352!\\=<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316\275\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013>\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\274\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\2769\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\275\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{n=\347\033H\275<\250\033\275\225\315\206=\226<X<\332J\231\275\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316\275\030E\222=\315X\375\275\030E\222=\315X\375=\030E\022\276\000\000\000\000\030E\222=\315X\375\275\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\2769\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276lc>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013>\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\2769\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\000\3073\027\276\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\352!\\=<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013\276\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316\275\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\274\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\275\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{n=\347\033H\275<\250\033\275\225\315\206=\226<X<\332J\231\275\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316\275\030E\222=\315X\375\275\030E\222=\315X\375=\030E\022\276\000\000\000\000\030E\222=\315X\375\2759\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\276\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\2759\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316=\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\2749\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\275D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\2759\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{nv\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\276\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\t\276\347\033H=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/MatMul"
  op: "MatMul"
  input: "analysis_transform/layer_0/irdft_9x9"
  input: "analysis_transform/layer_0/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "analysis_transform/layer_0/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\t\000\000\000\t\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/Reshape"
  op: "Reshape"
  input: "analysis_transform/layer_0/MatMul"
  input: "analysis_transform/layer_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/bias"
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/bias"
  input: "analysis_transform/layer_0/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/Conv2D"
  op: "Conv2D"
  input: "IteratorGetNext"
  input: "analysis_transform/layer_0/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 4
        i: 4
        i: 4
        i: 4
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "analysis_transform/layer_0/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/BiasAdd"
  op: "BiasAdd"
  input: "analysis_transform/layer_0/Conv2D"
  input: "analysis_transform/layer_0/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000072652474046
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Initializer/add"
  op: "AddV2"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Initializer/ones"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Initializer/Maximum"
  op: "Maximum"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Initializer/add"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Initializer/Sqrt"
  op: "Sqrt"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Initializer/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/gdn_0/reparam_beta"
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Initializer/Sqrt"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/LowerBound/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/LowerBound"
  op: "Maximum"
  input: "analysis_transform/layer_0/gdn_0/LowerBound/ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "LowerBound"
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/Square"
  op: "Square"
  input: "analysis_transform/layer_0/gdn_0/LowerBound"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/sub"
  op: "Sub"
  input: "analysis_transform/layer_0/gdn_0/Square"
  input: "analysis_transform/layer_0/gdn_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.814697265625e-06
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/eye/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/eye/diag"
  op: "MatrixDiag"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/eye/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/mul/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/mul"
  op: "Mul"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/mul/x"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/eye/diag"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/add"
  op: "AddV2"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/mul"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/Maximum"
  op: "Maximum"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/add"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/Sqrt"
  op: "Sqrt"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/gdn_0/reparam_gamma"
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Initializer/Sqrt"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/LowerBound_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/LowerBound_1"
  op: "Maximum"
  input: "analysis_transform/layer_0/gdn_0/LowerBound_1/ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "LowerBound"
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/Square_1"
  op: "Square"
  input: "analysis_transform/layer_0/gdn_0/LowerBound_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/sub_1"
  op: "Sub"
  input: "analysis_transform/layer_0/gdn_0/Square_1"
  input: "analysis_transform/layer_0/gdn_0/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/Reshape"
  op: "Reshape"
  input: "analysis_transform/layer_0/gdn_0/sub_1"
  input: "analysis_transform/layer_0/gdn_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/Square_2"
  op: "Square"
  input: "analysis_transform/layer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/convolution"
  op: "Conv2D"
  input: "analysis_transform/layer_0/gdn_0/Square_2"
  input: "analysis_transform/layer_0/gdn_0/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/BiasAdd"
  op: "BiasAdd"
  input: "analysis_transform/layer_0/gdn_0/convolution"
  input: "analysis_transform/layer_0/gdn_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/Rsqrt"
  op: "Rsqrt"
  input: "analysis_transform/layer_0/gdn_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/mul"
  op: "Mul"
  input: "analysis_transform/layer_0/BiasAdd"
  input: "analysis_transform/layer_0/gdn_0/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.020096810534596443
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  input: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal"
  op: "Add"
  input: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/mul"
  input: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000@\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Initializer/Reshape"
  op: "Reshape"
  input: "analysis_transform/layer_1/kernel_rdft/Initializer/truncated_normal"
  input: "analysis_transform/layer_1/kernel_rdft/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Initializer/irdft_5x5"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
        tensor_content: "\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Initializer/MatMul"
  op: "MatMul"
  input: "analysis_transform/layer_1/kernel_rdft/Initializer/irdft_5x5"
  input: "analysis_transform/layer_1/kernel_rdft/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/kernel_rdft"
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft"
  input: "analysis_transform/layer_1/kernel_rdft/Initializer/MatMul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/irdft_5x5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
        tensor_content: "\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/MatMul"
  op: "MatMul"
  input: "analysis_transform/layer_1/irdft_5x5"
  input: "analysis_transform/layer_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "analysis_transform/layer_1/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/Reshape"
  op: "Reshape"
  input: "analysis_transform/layer_1/MatMul"
  input: "analysis_transform/layer_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/bias"
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/bias"
  input: "analysis_transform/layer_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/Conv2D"
  op: "Conv2D"
  input: "analysis_transform/layer_0/gdn_0/mul"
  input: "analysis_transform/layer_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "analysis_transform/layer_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/BiasAdd"
  op: "BiasAdd"
  input: "analysis_transform/layer_1/Conv2D"
  input: "analysis_transform/layer_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000072652474046
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Initializer/add"
  op: "AddV2"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Initializer/ones"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Initializer/Maximum"
  op: "Maximum"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Initializer/add"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Initializer/Sqrt"
  op: "Sqrt"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Initializer/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/gdn_1/reparam_beta"
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Initializer/Sqrt"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/LowerBound/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/LowerBound"
  op: "Maximum"
  input: "analysis_transform/layer_1/gdn_1/LowerBound/ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "LowerBound"
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/Square"
  op: "Square"
  input: "analysis_transform/layer_1/gdn_1/LowerBound"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/sub"
  op: "Sub"
  input: "analysis_transform/layer_1/gdn_1/Square"
  input: "analysis_transform/layer_1/gdn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.814697265625e-06
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/eye/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/eye/diag"
  op: "MatrixDiag"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/eye/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/mul/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/mul"
  op: "Mul"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/mul/x"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/eye/diag"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/add"
  op: "AddV2"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/mul"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/Maximum"
  op: "Maximum"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/add"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/Sqrt"
  op: "Sqrt"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/gdn_1/reparam_gamma"
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Initializer/Sqrt"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/LowerBound_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/LowerBound_1"
  op: "Maximum"
  input: "analysis_transform/layer_1/gdn_1/LowerBound_1/ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "LowerBound"
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/Square_1"
  op: "Square"
  input: "analysis_transform/layer_1/gdn_1/LowerBound_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/sub_1"
  op: "Sub"
  input: "analysis_transform/layer_1/gdn_1/Square_1"
  input: "analysis_transform/layer_1/gdn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/Reshape"
  op: "Reshape"
  input: "analysis_transform/layer_1/gdn_1/sub_1"
  input: "analysis_transform/layer_1/gdn_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/Square_2"
  op: "Square"
  input: "analysis_transform/layer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/convolution"
  op: "Conv2D"
  input: "analysis_transform/layer_1/gdn_1/Square_2"
  input: "analysis_transform/layer_1/gdn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/BiasAdd"
  op: "BiasAdd"
  input: "analysis_transform/layer_1/gdn_1/convolution"
  input: "analysis_transform/layer_1/gdn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/Rsqrt"
  op: "Rsqrt"
  input: "analysis_transform/layer_1/gdn_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/mul"
  op: "Mul"
  input: "analysis_transform/layer_1/BiasAdd"
  input: "analysis_transform/layer_1/gdn_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.020096810534596443
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  input: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal"
  op: "Add"
  input: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/mul"
  input: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000@\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Initializer/Reshape"
  op: "Reshape"
  input: "analysis_transform/layer_2/kernel_rdft/Initializer/truncated_normal"
  input: "analysis_transform/layer_2/kernel_rdft/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Initializer/irdft_5x5"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
        tensor_content: "\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Initializer/MatMul"
  op: "MatMul"
  input: "analysis_transform/layer_2/kernel_rdft/Initializer/irdft_5x5"
  input: "analysis_transform/layer_2/kernel_rdft/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_2/kernel_rdft"
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_2/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft"
  input: "analysis_transform/layer_2/kernel_rdft/Initializer/MatMul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_2/irdft_5x5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
        tensor_content: "\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_2/MatMul"
  op: "MatMul"
  input: "analysis_transform/layer_2/irdft_5x5"
  input: "analysis_transform/layer_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "analysis_transform/layer_2/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/Reshape"
  op: "Reshape"
  input: "analysis_transform/layer_2/MatMul"
  input: "analysis_transform/layer_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/Conv2D"
  op: "Conv2D"
  input: "analysis_transform/layer_1/gdn_1/mul"
  input: "analysis_transform/layer_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: -1.5790714025497437
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_0"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_0"
  input: "entropy_bottleneck/matrix_0/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Softplus/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Softplus"
  op: "Softplus"
  input: "entropy_bottleneck/Softplus/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "entropy_bottleneck/bias_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "entropy_bottleneck/bias_0/Initializer/random_uniform/max"
  input: "entropy_bottleneck/bias_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "entropy_bottleneck/bias_0/Initializer/random_uniform/RandomUniform"
  input: "entropy_bottleneck/bias_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Initializer/random_uniform"
  op: "Add"
  input: "entropy_bottleneck/bias_0/Initializer/random_uniform/mul"
  input: "entropy_bottleneck/bias_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_0"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_0"
  input: "entropy_bottleneck/bias_0/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/factor_0"
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_0"
  input: "entropy_bottleneck/factor_0/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh"
  op: "Tanh"
  input: "entropy_bottleneck/Tanh/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
        float_val: -1.5790714025497437
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_1"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_1"
  input: "entropy_bottleneck/matrix_1/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Softplus_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Softplus_1"
  op: "Softplus"
  input: "entropy_bottleneck/Softplus_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "entropy_bottleneck/bias_1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "entropy_bottleneck/bias_1/Initializer/random_uniform/max"
  input: "entropy_bottleneck/bias_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "entropy_bottleneck/bias_1/Initializer/random_uniform/RandomUniform"
  input: "entropy_bottleneck/bias_1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Initializer/random_uniform"
  op: "Add"
  input: "entropy_bottleneck/bias_1/Initializer/random_uniform/mul"
  input: "entropy_bottleneck/bias_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_1"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_1"
  input: "entropy_bottleneck/bias_1/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/factor_1"
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_1"
  input: "entropy_bottleneck/factor_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_1"
  op: "Tanh"
  input: "entropy_bottleneck/Tanh_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
        float_val: -1.5790714025497437
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_2"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_2"
  input: "entropy_bottleneck/matrix_2/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Softplus_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Softplus_2"
  op: "Softplus"
  input: "entropy_bottleneck/Softplus_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "entropy_bottleneck/bias_2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "entropy_bottleneck/bias_2/Initializer/random_uniform/max"
  input: "entropy_bottleneck/bias_2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "entropy_bottleneck/bias_2/Initializer/random_uniform/RandomUniform"
  input: "entropy_bottleneck/bias_2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Initializer/random_uniform"
  op: "Add"
  input: "entropy_bottleneck/bias_2/Initializer/random_uniform/mul"
  input: "entropy_bottleneck/bias_2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_2"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_2"
  input: "entropy_bottleneck/bias_2/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/factor_2"
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_2"
  input: "entropy_bottleneck/factor_2/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_2"
  op: "Tanh"
  input: "entropy_bottleneck/Tanh_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        float_val: -0.2813340127468109
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_3"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_3"
  input: "entropy_bottleneck/matrix_3/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Softplus_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Softplus_3"
  op: "Softplus"
  input: "entropy_bottleneck/Softplus_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "entropy_bottleneck/bias_3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "entropy_bottleneck/bias_3/Initializer/random_uniform/max"
  input: "entropy_bottleneck/bias_3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "entropy_bottleneck/bias_3/Initializer/random_uniform/RandomUniform"
  input: "entropy_bottleneck/bias_3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Initializer/random_uniform"
  op: "Add"
  input: "entropy_bottleneck/bias_3/Initializer/random_uniform/mul"
  input: "entropy_bottleneck/bias_3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_3"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_3"
  input: "entropy_bottleneck/bias_3/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "W\220\307\300\000\000\000\000W\220\307@"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000 \301\000\000\000\000\000\000 A"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Initializer/Tile/multiples"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Initializer/Tile"
  op: "Tile"
  input: "entropy_bottleneck/quantiles/Initializer/Const"
  input: "entropy_bottleneck/quantiles/Initializer/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/quantiles"
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantiles"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/quantiles"
  input: "entropy_bottleneck/quantiles/Initializer/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/quantiles"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/quantiles"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient"
  input: "entropy_bottleneck/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_1"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul"
  input: "entropy_bottleneck/StopGradient_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_2"
  op: "StopGradient"
  input: "entropy_bottleneck/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_3"
  op: "Tanh"
  input: "entropy_bottleneck/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_2"
  input: "entropy_bottleneck/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_1"
  op: "AddV2"
  input: "entropy_bottleneck/add"
  input: "entropy_bottleneck/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_3"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_3"
  input: "entropy_bottleneck/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_4"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_2"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_1"
  input: "entropy_bottleneck/StopGradient_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_5"
  op: "StopGradient"
  input: "entropy_bottleneck/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_4"
  op: "Tanh"
  input: "entropy_bottleneck/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_1"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_5"
  input: "entropy_bottleneck/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_3"
  op: "AddV2"
  input: "entropy_bottleneck/add_2"
  input: "entropy_bottleneck/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_6"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_2"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_6"
  input: "entropy_bottleneck/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_7"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_4"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_2"
  input: "entropy_bottleneck/StopGradient_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_8"
  op: "StopGradient"
  input: "entropy_bottleneck/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_5"
  op: "Tanh"
  input: "entropy_bottleneck/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_2"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_8"
  input: "entropy_bottleneck/Tanh_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_5"
  op: "AddV2"
  input: "entropy_bottleneck/add_4"
  input: "entropy_bottleneck/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_9"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_3"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_9"
  input: "entropy_bottleneck/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_10"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_6"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_3"
  input: "entropy_bottleneck/StopGradient_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/sub"
  op: "Sub"
  input: "entropy_bottleneck/add_6"
  input: "entropy_bottleneck/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Abs"
  op: "Abs"
  input: "entropy_bottleneck/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Sum"
  op: "Sum"
  input: "entropy_bottleneck/Abs"
  input: "entropy_bottleneck/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/quantiles"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice"
  op: "StridedSlice"
  input: "entropy_bottleneck/ReadVariableOp"
  input: "entropy_bottleneck/strided_slice/stack"
  input: "entropy_bottleneck/strided_slice/stack_1"
  input: "entropy_bottleneck/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 6
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_11"
  op: "StopGradient"
  input: "entropy_bottleneck/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/quantiles"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_1"
  op: "StridedSlice"
  input: "entropy_bottleneck/ReadVariableOp_1"
  input: "entropy_bottleneck/strided_slice_1/stack"
  input: "entropy_bottleneck/strided_slice_1/stack_1"
  input: "entropy_bottleneck/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 6
    }
  }
}
node {
  name: "entropy_bottleneck/sub_1"
  op: "Sub"
  input: "entropy_bottleneck/strided_slice"
  input: "entropy_bottleneck/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Ceil"
  op: "Ceil"
  input: "entropy_bottleneck/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Cast"
  op: "Cast"
  input: "entropy_bottleneck/Ceil"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Maximum"
  op: "Maximum"
  input: "entropy_bottleneck/Cast"
  input: "entropy_bottleneck/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/quantiles"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_2"
  op: "StridedSlice"
  input: "entropy_bottleneck/ReadVariableOp_2"
  input: "entropy_bottleneck/strided_slice_2/stack"
  input: "entropy_bottleneck/strided_slice_2/stack_1"
  input: "entropy_bottleneck/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 6
    }
  }
}
node {
  name: "entropy_bottleneck/sub_2"
  op: "Sub"
  input: "entropy_bottleneck/strided_slice_2"
  input: "entropy_bottleneck/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Ceil_1"
  op: "Ceil"
  input: "entropy_bottleneck/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Cast_1"
  op: "Cast"
  input: "entropy_bottleneck/Ceil_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Maximum_1"
  op: "Maximum"
  input: "entropy_bottleneck/Cast_1"
  input: "entropy_bottleneck/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Neg"
  op: "Neg"
  input: "entropy_bottleneck/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Cast_2"
  op: "Cast"
  input: "entropy_bottleneck/Maximum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/sub_3"
  op: "Sub"
  input: "entropy_bottleneck/strided_slice"
  input: "entropy_bottleneck/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_7"
  op: "AddV2"
  input: "entropy_bottleneck/Maximum_1"
  input: "entropy_bottleneck/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_8/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_8"
  op: "AddV2"
  input: "entropy_bottleneck/add_7"
  input: "entropy_bottleneck/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Max"
  op: "Max"
  input: "entropy_bottleneck/add_8"
  input: "entropy_bottleneck/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/Cast_3"
  op: "Cast"
  input: "entropy_bottleneck/Max"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/range"
  op: "Range"
  input: "entropy_bottleneck/range/start"
  input: "entropy_bottleneck/Cast_3"
  input: "entropy_bottleneck/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_3"
  op: "StridedSlice"
  input: "entropy_bottleneck/sub_3"
  input: "entropy_bottleneck/strided_slice_3/stack"
  input: "entropy_bottleneck/strided_slice_3/stack_1"
  input: "entropy_bottleneck/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "entropy_bottleneck/add_9"
  op: "AddV2"
  input: "entropy_bottleneck/range"
  input: "entropy_bottleneck/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/sub_4"
  op: "Sub"
  input: "entropy_bottleneck/add_9"
  input: "entropy_bottleneck/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_12"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_4"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_12"
  input: "entropy_bottleneck/sub_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_13"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_10"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_4"
  input: "entropy_bottleneck/StopGradient_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_14"
  op: "StopGradient"
  input: "entropy_bottleneck/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_6"
  op: "Tanh"
  input: "entropy_bottleneck/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_3"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_14"
  input: "entropy_bottleneck/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_11"
  op: "AddV2"
  input: "entropy_bottleneck/add_10"
  input: "entropy_bottleneck/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_15"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_5"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_15"
  input: "entropy_bottleneck/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_16"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_12"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_5"
  input: "entropy_bottleneck/StopGradient_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_17"
  op: "StopGradient"
  input: "entropy_bottleneck/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_7"
  op: "Tanh"
  input: "entropy_bottleneck/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_4"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_17"
  input: "entropy_bottleneck/Tanh_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_13"
  op: "AddV2"
  input: "entropy_bottleneck/add_12"
  input: "entropy_bottleneck/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_18"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_6"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_18"
  input: "entropy_bottleneck/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_19"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_14"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_6"
  input: "entropy_bottleneck/StopGradient_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_20"
  op: "StopGradient"
  input: "entropy_bottleneck/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_8"
  op: "Tanh"
  input: "entropy_bottleneck/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_5"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_20"
  input: "entropy_bottleneck/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_15"
  op: "AddV2"
  input: "entropy_bottleneck/add_14"
  input: "entropy_bottleneck/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_21"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_7"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_21"
  input: "entropy_bottleneck/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_22"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_22/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_16"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_7"
  input: "entropy_bottleneck/StopGradient_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_17"
  op: "AddV2"
  input: "entropy_bottleneck/add_9"
  input: "entropy_bottleneck/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_23"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_8"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_23"
  input: "entropy_bottleneck/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_24/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_24"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_18"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_8"
  input: "entropy_bottleneck/StopGradient_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_25"
  op: "StopGradient"
  input: "entropy_bottleneck/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_9"
  op: "Tanh"
  input: "entropy_bottleneck/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_6"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_25"
  input: "entropy_bottleneck/Tanh_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_19"
  op: "AddV2"
  input: "entropy_bottleneck/add_18"
  input: "entropy_bottleneck/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_26"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_9"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_26"
  input: "entropy_bottleneck/add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_27/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_27"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_27/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_20"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_9"
  input: "entropy_bottleneck/StopGradient_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_28"
  op: "StopGradient"
  input: "entropy_bottleneck/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_10"
  op: "Tanh"
  input: "entropy_bottleneck/add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_7"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_28"
  input: "entropy_bottleneck/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_21"
  op: "AddV2"
  input: "entropy_bottleneck/add_20"
  input: "entropy_bottleneck/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_29"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_10"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_29"
  input: "entropy_bottleneck/add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_30/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_30"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_30/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_22"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_10"
  input: "entropy_bottleneck/StopGradient_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_31"
  op: "StopGradient"
  input: "entropy_bottleneck/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_11"
  op: "Tanh"
  input: "entropy_bottleneck/add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_8"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_31"
  input: "entropy_bottleneck/Tanh_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_23"
  op: "AddV2"
  input: "entropy_bottleneck/add_22"
  input: "entropy_bottleneck/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_32"
  op: "StopGradient"
  input: "entropy_bottleneck/Softplus_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_11"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_32"
  input: "entropy_bottleneck/add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_33"
  op: "StopGradient"
  input: "entropy_bottleneck/StopGradient_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_24"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_11"
  input: "entropy_bottleneck/StopGradient_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/AddN"
  op: "AddN"
  input: "entropy_bottleneck/add_16"
  input: "entropy_bottleneck/add_24"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Sign"
  op: "Sign"
  input: "entropy_bottleneck/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Neg_1"
  op: "Neg"
  input: "entropy_bottleneck/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_9"
  op: "Mul"
  input: "entropy_bottleneck/Neg_1"
  input: "entropy_bottleneck/add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Sigmoid"
  op: "Sigmoid"
  input: "entropy_bottleneck/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_10"
  op: "Mul"
  input: "entropy_bottleneck/Neg_1"
  input: "entropy_bottleneck/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Sigmoid_1"
  op: "Sigmoid"
  input: "entropy_bottleneck/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/sub_5"
  op: "Sub"
  input: "entropy_bottleneck/Sigmoid"
  input: "entropy_bottleneck/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Abs_1"
  op: "Abs"
  input: "entropy_bottleneck/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_4"
  op: "StridedSlice"
  input: "entropy_bottleneck/Abs_1"
  input: "entropy_bottleneck/strided_slice_4/stack"
  input: "entropy_bottleneck/strided_slice_4/stack_1"
  input: "entropy_bottleneck/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_5"
  op: "StridedSlice"
  input: "entropy_bottleneck/add_16"
  input: "entropy_bottleneck/strided_slice_5/stack"
  input: "entropy_bottleneck/strided_slice_5/stack_1"
  input: "entropy_bottleneck/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "entropy_bottleneck/Sigmoid_2"
  op: "Sigmoid"
  input: "entropy_bottleneck/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_6"
  op: "StridedSlice"
  input: "entropy_bottleneck/add_24"
  input: "entropy_bottleneck/strided_slice_6/stack"
  input: "entropy_bottleneck/strided_slice_6/stack_1"
  input: "entropy_bottleneck/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "entropy_bottleneck/Neg_2"
  op: "Neg"
  input: "entropy_bottleneck/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Sigmoid_3"
  op: "Sigmoid"
  input: "entropy_bottleneck/Neg_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/AddN_1"
  op: "AddN"
  input: "entropy_bottleneck/Sigmoid_2"
  input: "entropy_bottleneck/Sigmoid_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantized_cdf/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantized_cdf"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantized_cdf/Initializer/Fill/dims"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantized_cdf"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantized_cdf/Initializer/Fill"
  op: "Fill"
  input: "entropy_bottleneck/quantized_cdf/Initializer/Fill/dims"
  input: "entropy_bottleneck/quantized_cdf/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantized_cdf"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/quantized_cdf/Initializer/PmfToQuantizedCdf"
  op: "PmfToQuantizedCdf"
  input: "entropy_bottleneck/quantized_cdf/Initializer/Fill"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantized_cdf"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "precision"
    value {
      i: 16
    }
  }
}
node {
  name: "entropy_bottleneck/quantized_cdf/Initializer/PlaceholderWithDefault"
  op: "PlaceholderWithDefault"
  input: "entropy_bottleneck/quantized_cdf/Initializer/PmfToQuantizedCdf"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantized_cdf"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantized_cdf"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantized_cdf"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: -1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/quantized_cdf"
    }
  }
}
node {
  name: "entropy_bottleneck/quantized_cdf/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantized_cdf"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantized_cdf/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/quantized_cdf"
  input: "entropy_bottleneck/quantized_cdf/Initializer/PlaceholderWithDefault"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/quantized_cdf/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/quantized_cdf"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/cdf_length/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/cdf_length"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 128
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "entropy_bottleneck/cdf_length"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/cdf_length"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/cdf_length"
    }
  }
}
node {
  name: "entropy_bottleneck/cdf_length/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/cdf_length"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/cdf_length/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/cdf_length"
  input: "entropy_bottleneck/cdf_length/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/cdf_length/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/cdf_length"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/Identity/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/quantized_cdf"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/Identity"
  op: "Identity"
  input: "entropy_bottleneck/Identity/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Identity_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/cdf_length"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/Identity_1"
  op: "Identity"
  input: "entropy_bottleneck/Identity_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArray"
  op: "TensorArrayV3"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArray_1"
  op: "TensorArrayV3"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArray_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArray_2"
  op: "TensorArrayV3"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_2/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "entropy_bottleneck/strided_slice_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/Shape"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/strided_slice/stack"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/strided_slice/stack_1"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/range"
  op: "Range"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/range/start"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/strided_slice"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/range"
  input: "entropy_bottleneck/strided_slice_4"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/strided_slice_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/strided_slice"
  op: "StridedSlice"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/Shape"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/strided_slice/stack"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/strided_slice/stack_1"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/range"
  op: "Range"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/range/start"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/strided_slice"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_1"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/range"
  input: "entropy_bottleneck/add_8"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/add_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/Shape"
  op: "Shape"
  input: "entropy_bottleneck/AddN_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/strided_slice"
  op: "StridedSlice"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/Shape"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/strided_slice/stack"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/strided_slice/stack_1"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/range"
  op: "Range"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/range/start"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/strided_slice"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_2"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/range"
  input: "entropy_bottleneck/AddN_1"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/AddN_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArray_3/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArray_3"
  op: "TensorArrayV3"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_3/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/maximum_iterations"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Enter"
  op: "Enter"
  input: "entropy_bottleneck/pmf_to_cdf/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Enter_1"
  op: "Enter"
  input: "entropy_bottleneck/pmf_to_cdf/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Enter_2"
  op: "Enter"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Merge"
  op: "Merge"
  input: "entropy_bottleneck/pmf_to_cdf/while/Enter"
  input: "entropy_bottleneck/pmf_to_cdf/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Merge_1"
  op: "Merge"
  input: "entropy_bottleneck/pmf_to_cdf/while/Enter_1"
  input: "entropy_bottleneck/pmf_to_cdf/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Merge_2"
  op: "Merge"
  input: "entropy_bottleneck/pmf_to_cdf/while/Enter_2"
  input: "entropy_bottleneck/pmf_to_cdf/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Less"
  op: "Less"
  input: "entropy_bottleneck/pmf_to_cdf/while/Merge"
  input: "entropy_bottleneck/pmf_to_cdf/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Less/Enter"
  op: "Enter"
  input: "entropy_bottleneck/pmf_to_cdf/while/maximum_iterations"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Less_1/y"
  op: "Const"
  input: "^entropy_bottleneck/pmf_to_cdf/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Less_1"
  op: "Less"
  input: "entropy_bottleneck/pmf_to_cdf/while/Merge_1"
  input: "entropy_bottleneck/pmf_to_cdf/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/LogicalAnd"
  op: "LogicalAnd"
  input: "entropy_bottleneck/pmf_to_cdf/while/Less"
  input: "entropy_bottleneck/pmf_to_cdf/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/LoopCond"
  op: "LoopCond"
  input: "entropy_bottleneck/pmf_to_cdf/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Switch"
  op: "Switch"
  input: "entropy_bottleneck/pmf_to_cdf/while/Merge"
  input: "entropy_bottleneck/pmf_to_cdf/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/pmf_to_cdf/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Switch_1"
  op: "Switch"
  input: "entropy_bottleneck/pmf_to_cdf/while/Merge_1"
  input: "entropy_bottleneck/pmf_to_cdf/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/pmf_to_cdf/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Switch_2"
  op: "Switch"
  input: "entropy_bottleneck/pmf_to_cdf/while/Merge_2"
  input: "entropy_bottleneck/pmf_to_cdf/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/pmf_to_cdf/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Identity"
  op: "Identity"
  input: "entropy_bottleneck/pmf_to_cdf/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Identity_1"
  op: "Identity"
  input: "entropy_bottleneck/pmf_to_cdf/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Identity_2"
  op: "Identity"
  input: "entropy_bottleneck/pmf_to_cdf/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/add/y"
  op: "Const"
  input: "^entropy_bottleneck/pmf_to_cdf/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/add"
  op: "AddV2"
  input: "entropy_bottleneck/pmf_to_cdf/while/Identity"
  input: "entropy_bottleneck/pmf_to_cdf/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3/Enter"
  input: "entropy_bottleneck/pmf_to_cdf/while/Identity_1"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_1"
  op: "TensorArrayReadV3"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_1/Enter"
  input: "entropy_bottleneck/pmf_to_cdf/while/Identity_1"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_1/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_1/Enter"
  op: "Enter"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_1/Enter_1"
  op: "Enter"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_1/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_2"
  op: "TensorArrayReadV3"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_2/Enter"
  input: "entropy_bottleneck/pmf_to_cdf/while/Identity_1"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_2/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_2/Enter"
  op: "Enter"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_2/Enter_1"
  op: "Enter"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayUnstack_2/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/strided_slice/stack"
  op: "Const"
  input: "^entropy_bottleneck/pmf_to_cdf/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/strided_slice/stack_1"
  op: "Pack"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/strided_slice/stack_2"
  op: "Const"
  input: "^entropy_bottleneck/pmf_to_cdf/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/strided_slice"
  op: "StridedSlice"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3"
  input: "entropy_bottleneck/pmf_to_cdf/while/strided_slice/stack"
  input: "entropy_bottleneck/pmf_to_cdf/while/strided_slice/stack_1"
  input: "entropy_bottleneck/pmf_to_cdf/while/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/concat/axis"
  op: "Const"
  input: "^entropy_bottleneck/pmf_to_cdf/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/concat"
  op: "ConcatV2"
  input: "entropy_bottleneck/pmf_to_cdf/while/strided_slice"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_2"
  input: "entropy_bottleneck/pmf_to_cdf/while/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/PmfToQuantizedCdf"
  op: "PmfToQuantizedCdf"
  input: "entropy_bottleneck/pmf_to_cdf/while/concat"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "precision"
    value {
      i: 16
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/sub"
  op: "Sub"
  input: "entropy_bottleneck/pmf_to_cdf/while/sub/Enter"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayReadV3_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/sub/Enter"
  op: "Enter"
  input: "entropy_bottleneck/Max"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Pad/paddings/0/0"
  op: "Const"
  input: "^entropy_bottleneck/pmf_to_cdf/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Pad/paddings/0"
  op: "Pack"
  input: "entropy_bottleneck/pmf_to_cdf/while/Pad/paddings/0/0"
  input: "entropy_bottleneck/pmf_to_cdf/while/sub"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Pad/paddings"
  op: "Pack"
  input: "entropy_bottleneck/pmf_to_cdf/while/Pad/paddings/0"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Pad"
  op: "Pad"
  input: "entropy_bottleneck/pmf_to_cdf/while/PmfToQuantizedCdf"
  input: "entropy_bottleneck/pmf_to_cdf/while/Pad/paddings"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "entropy_bottleneck/pmf_to_cdf/while/Identity_1"
  input: "entropy_bottleneck/pmf_to_cdf/while/Pad"
  input: "entropy_bottleneck/pmf_to_cdf/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/pmf_to_cdf/while/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/pmf_to_cdf/while/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "entropy_bottleneck/pmf_to_cdf/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/add_1/y"
  op: "Const"
  input: "^entropy_bottleneck/pmf_to_cdf/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/add_1"
  op: "AddV2"
  input: "entropy_bottleneck/pmf_to_cdf/while/Identity_1"
  input: "entropy_bottleneck/pmf_to_cdf/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/NextIteration"
  op: "NextIteration"
  input: "entropy_bottleneck/pmf_to_cdf/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/NextIteration_1"
  op: "NextIteration"
  input: "entropy_bottleneck/pmf_to_cdf/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/NextIteration_2"
  op: "NextIteration"
  input: "entropy_bottleneck/pmf_to_cdf/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Exit"
  op: "Exit"
  input: "entropy_bottleneck/pmf_to_cdf/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Exit_1"
  op: "Exit"
  input: "entropy_bottleneck/pmf_to_cdf/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/while/Exit_2"
  op: "Exit"
  input: "entropy_bottleneck/pmf_to_cdf/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_3"
  input: "entropy_bottleneck/pmf_to_cdf/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/pmf_to_cdf/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/pmf_to_cdf/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/pmf_to_cdf/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayStack/range"
  op: "Range"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayStack/range/start"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayStack/TensorArraySizeV3"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/pmf_to_cdf/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/pmf_to_cdf/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArray_3"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayStack/range"
  input: "entropy_bottleneck/pmf_to_cdf/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/pmf_to_cdf/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/AssignVariableOp"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/quantized_cdf"
  input: "entropy_bottleneck/pmf_to_cdf/TensorArrayStack/TensorArrayGatherV3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/quantized_cdf"
  input: "^entropy_bottleneck/AssignVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/add_25/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_25"
  op: "AddV2"
  input: "entropy_bottleneck/add_8"
  input: "entropy_bottleneck/add_25/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/cdf_length"
  input: "entropy_bottleneck/add_25"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/cdf_length"
  input: "^entropy_bottleneck/AssignVariableOp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/group_deps"
  op: "NoOp"
  input: "^entropy_bottleneck/AssignVariableOp"
  input: "^entropy_bottleneck/AssignVariableOp_1"
}
node {
  name: "entropy_bottleneck/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Shape"
  op: "Shape"
  input: "analysis_transform/layer_2/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/Neg_3"
  op: "Neg"
  input: "entropy_bottleneck/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "entropy_bottleneck/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "entropy_bottleneck/random_uniform/sub"
  op: "Sub"
  input: "entropy_bottleneck/Const_4"
  input: "entropy_bottleneck/Neg_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/random_uniform/mul"
  op: "Mul"
  input: "entropy_bottleneck/random_uniform/RandomUniform"
  input: "entropy_bottleneck/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/random_uniform"
  op: "Add"
  input: "entropy_bottleneck/random_uniform/mul"
  input: "entropy_bottleneck/Neg_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/AddN_2"
  op: "AddN"
  input: "analysis_transform/layer_2/Conv2D"
  input: "entropy_bottleneck/random_uniform"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "entropy_bottleneck/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/transpose"
  op: "Transpose"
  input: "entropy_bottleneck/AddN_2"
  input: "entropy_bottleneck/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/strided_slice_7"
  op: "StridedSlice"
  input: "entropy_bottleneck/Shape_1"
  input: "entropy_bottleneck/strided_slice_7/stack"
  input: "entropy_bottleneck/strided_slice_7/stack_1"
  input: "entropy_bottleneck/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "entropy_bottleneck/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Reshape/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Reshape/shape"
  op: "Pack"
  input: "entropy_bottleneck/strided_slice_7"
  input: "entropy_bottleneck/Reshape/shape/1"
  input: "entropy_bottleneck/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "entropy_bottleneck/Reshape"
  op: "Reshape"
  input: "entropy_bottleneck/transpose"
  input: "entropy_bottleneck/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/sub_6"
  op: "Sub"
  input: "entropy_bottleneck/Reshape"
  input: "entropy_bottleneck/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_12"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus"
  input: "entropy_bottleneck/sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/add_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/add_26"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_12"
  input: "entropy_bottleneck/add_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_12"
  op: "Tanh"
  input: "entropy_bottleneck/add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_11"
  op: "Mul"
  input: "entropy_bottleneck/Tanh"
  input: "entropy_bottleneck/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_27"
  op: "AddV2"
  input: "entropy_bottleneck/add_26"
  input: "entropy_bottleneck/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_13"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_1"
  input: "entropy_bottleneck/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/add_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/add_28"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_13"
  input: "entropy_bottleneck/add_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_13"
  op: "Tanh"
  input: "entropy_bottleneck/add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_12"
  op: "Mul"
  input: "entropy_bottleneck/Tanh_1"
  input: "entropy_bottleneck/Tanh_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_29"
  op: "AddV2"
  input: "entropy_bottleneck/add_28"
  input: "entropy_bottleneck/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_14"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_2"
  input: "entropy_bottleneck/add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/add_30/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/add_30"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_14"
  input: "entropy_bottleneck/add_30/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_14"
  op: "Tanh"
  input: "entropy_bottleneck/add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_13"
  op: "Mul"
  input: "entropy_bottleneck/Tanh_2"
  input: "entropy_bottleneck/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_31"
  op: "AddV2"
  input: "entropy_bottleneck/add_30"
  input: "entropy_bottleneck/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_15"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_3"
  input: "entropy_bottleneck/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/add_32/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/add_32"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_15"
  input: "entropy_bottleneck/add_32/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_33"
  op: "AddV2"
  input: "entropy_bottleneck/Reshape"
  input: "entropy_bottleneck/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_16"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus"
  input: "entropy_bottleneck/add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/add_34/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/add_34"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_16"
  input: "entropy_bottleneck/add_34/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_15"
  op: "Tanh"
  input: "entropy_bottleneck/add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_14"
  op: "Mul"
  input: "entropy_bottleneck/Tanh"
  input: "entropy_bottleneck/Tanh_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_35"
  op: "AddV2"
  input: "entropy_bottleneck/add_34"
  input: "entropy_bottleneck/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_17"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_1"
  input: "entropy_bottleneck/add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/add_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/add_36"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_17"
  input: "entropy_bottleneck/add_36/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_16"
  op: "Tanh"
  input: "entropy_bottleneck/add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_15"
  op: "Mul"
  input: "entropy_bottleneck/Tanh_1"
  input: "entropy_bottleneck/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_37"
  op: "AddV2"
  input: "entropy_bottleneck/add_36"
  input: "entropy_bottleneck/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_18"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_2"
  input: "entropy_bottleneck/add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/add_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/add_38"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_18"
  input: "entropy_bottleneck/add_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Tanh_17"
  op: "Tanh"
  input: "entropy_bottleneck/add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_16"
  op: "Mul"
  input: "entropy_bottleneck/Tanh_2"
  input: "entropy_bottleneck/Tanh_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/add_39"
  op: "AddV2"
  input: "entropy_bottleneck/add_38"
  input: "entropy_bottleneck/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/MatMul_19"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_3"
  input: "entropy_bottleneck/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "entropy_bottleneck/add_40/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/add_40"
  op: "AddV2"
  input: "entropy_bottleneck/MatMul_19"
  input: "entropy_bottleneck/add_40/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/AddN_3"
  op: "AddN"
  input: "entropy_bottleneck/add_32"
  input: "entropy_bottleneck/add_40"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Sign_1"
  op: "Sign"
  input: "entropy_bottleneck/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Neg_4"
  op: "Neg"
  input: "entropy_bottleneck/Sign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/StopGradient_34"
  op: "StopGradient"
  input: "entropy_bottleneck/Neg_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_17"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_34"
  input: "entropy_bottleneck/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Sigmoid_4"
  op: "Sigmoid"
  input: "entropy_bottleneck/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/mul_18"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_34"
  input: "entropy_bottleneck/add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Sigmoid_5"
  op: "Sigmoid"
  input: "entropy_bottleneck/mul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/sub_7"
  op: "Sub"
  input: "entropy_bottleneck/Sigmoid_4"
  input: "entropy_bottleneck/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Abs_2"
  op: "Abs"
  input: "entropy_bottleneck/sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Reshape_1"
  op: "Reshape"
  input: "entropy_bottleneck/Abs_2"
  input: "entropy_bottleneck/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/transpose_1"
  op: "Transpose"
  input: "entropy_bottleneck/Reshape_1"
  input: "entropy_bottleneck/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999717180685e-10
      }
    }
  }
}
node {
  name: "entropy_bottleneck/LowerBound"
  op: "Maximum"
  input: "entropy_bottleneck/transpose_1"
  input: "entropy_bottleneck/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "LowerBound"
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.020096810534596443
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  input: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal"
  op: "Add"
  input: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/mul"
  input: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000@\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Initializer/Reshape"
  op: "Reshape"
  input: "synthesis_transform/layer_0/kernel_rdft/Initializer/truncated_normal"
  input: "synthesis_transform/layer_0/kernel_rdft/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Initializer/irdft_5x5"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
        tensor_content: "\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Initializer/MatMul"
  op: "MatMul"
  input: "synthesis_transform/layer_0/kernel_rdft/Initializer/irdft_5x5"
  input: "synthesis_transform/layer_0/kernel_rdft/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/kernel_rdft"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft"
  input: "synthesis_transform/layer_0/kernel_rdft/Initializer/MatMul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/irdft_5x5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
        tensor_content: "\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/MatMul"
  op: "MatMul"
  input: "synthesis_transform/layer_0/irdft_5x5"
  input: "synthesis_transform/layer_0/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "synthesis_transform/layer_0/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/Reshape"
  op: "Reshape"
  input: "synthesis_transform/layer_0/MatMul"
  input: "synthesis_transform/layer_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/bias"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/bias"
  input: "synthesis_transform/layer_0/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/transpose"
  op: "Transpose"
  input: "synthesis_transform/layer_0/Reshape"
  input: "synthesis_transform/layer_0/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/Shape"
  op: "Shape"
  input: "entropy_bottleneck/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice"
  op: "StridedSlice"
  input: "synthesis_transform/layer_0/Shape"
  input: "synthesis_transform/layer_0/strided_slice/stack"
  input: "synthesis_transform/layer_0/strided_slice/stack_1"
  input: "synthesis_transform/layer_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice_1"
  op: "StridedSlice"
  input: "synthesis_transform/layer_0/Shape"
  input: "synthesis_transform/layer_0/strided_slice_1/stack"
  input: "synthesis_transform/layer_0/strided_slice_1/stack_1"
  input: "synthesis_transform/layer_0/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "synthesis_transform/layer_0/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/mul"
  op: "Mul"
  input: "synthesis_transform/layer_0/strided_slice_1"
  input: "synthesis_transform/layer_0/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/add"
  op: "AddV2"
  input: "synthesis_transform/layer_0/mul"
  input: "synthesis_transform/layer_0/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/strided_slice_2"
  op: "StridedSlice"
  input: "synthesis_transform/layer_0/Shape"
  input: "synthesis_transform/layer_0/strided_slice_2/stack"
  input: "synthesis_transform/layer_0/strided_slice_2/stack_1"
  input: "synthesis_transform/layer_0/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "synthesis_transform/layer_0/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/mul_1"
  op: "Mul"
  input: "synthesis_transform/layer_0/strided_slice_2"
  input: "synthesis_transform/layer_0/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/add_1"
  op: "AddV2"
  input: "synthesis_transform/layer_0/mul_1"
  input: "synthesis_transform/layer_0/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/Conv2DBackpropInput/input_sizes/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/Conv2DBackpropInput/input_sizes"
  op: "Pack"
  input: "synthesis_transform/layer_0/strided_slice"
  input: "synthesis_transform/layer_0/add"
  input: "synthesis_transform/layer_0/add_1"
  input: "synthesis_transform/layer_0/Conv2DBackpropInput/input_sizes/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "synthesis_transform/layer_0/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "synthesis_transform/layer_0/Conv2DBackpropInput/input_sizes"
  input: "synthesis_transform/layer_0/transpose"
  input: "entropy_bottleneck/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "synthesis_transform/layer_0/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/BiasAdd"
  op: "BiasAdd"
  input: "synthesis_transform/layer_0/Conv2DBackpropInput"
  input: "synthesis_transform/layer_0/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000072652474046
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Initializer/add"
  op: "AddV2"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Initializer/ones"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Initializer/Maximum"
  op: "Maximum"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Initializer/add"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Initializer/Sqrt"
  op: "Sqrt"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Initializer/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/igdn_0/reparam_beta"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Initializer/Sqrt"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/LowerBound/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/LowerBound"
  op: "Maximum"
  input: "synthesis_transform/layer_0/igdn_0/LowerBound/ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "LowerBound"
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/Square"
  op: "Square"
  input: "synthesis_transform/layer_0/igdn_0/LowerBound"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/sub"
  op: "Sub"
  input: "synthesis_transform/layer_0/igdn_0/Square"
  input: "synthesis_transform/layer_0/igdn_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.814697265625e-06
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/eye/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/eye/diag"
  op: "MatrixDiag"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/eye/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/mul/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/mul"
  op: "Mul"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/mul/x"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/eye/diag"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/add"
  op: "AddV2"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/mul"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/Maximum"
  op: "Maximum"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/add"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/Sqrt"
  op: "Sqrt"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Initializer/Sqrt"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/LowerBound_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/LowerBound_1"
  op: "Maximum"
  input: "synthesis_transform/layer_0/igdn_0/LowerBound_1/ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "LowerBound"
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/Square_1"
  op: "Square"
  input: "synthesis_transform/layer_0/igdn_0/LowerBound_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/sub_1"
  op: "Sub"
  input: "synthesis_transform/layer_0/igdn_0/Square_1"
  input: "synthesis_transform/layer_0/igdn_0/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/Reshape"
  op: "Reshape"
  input: "synthesis_transform/layer_0/igdn_0/sub_1"
  input: "synthesis_transform/layer_0/igdn_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/Square_2"
  op: "Square"
  input: "synthesis_transform/layer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/convolution"
  op: "Conv2D"
  input: "synthesis_transform/layer_0/igdn_0/Square_2"
  input: "synthesis_transform/layer_0/igdn_0/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/BiasAdd"
  op: "BiasAdd"
  input: "synthesis_transform/layer_0/igdn_0/convolution"
  input: "synthesis_transform/layer_0/igdn_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/Sqrt"
  op: "Sqrt"
  input: "synthesis_transform/layer_0/igdn_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/mul"
  op: "Mul"
  input: "synthesis_transform/layer_0/BiasAdd"
  input: "synthesis_transform/layer_0/igdn_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.020096810534596443
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  input: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal"
  op: "Add"
  input: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/mul"
  input: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000@\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Initializer/Reshape"
  op: "Reshape"
  input: "synthesis_transform/layer_1/kernel_rdft/Initializer/truncated_normal"
  input: "synthesis_transform/layer_1/kernel_rdft/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Initializer/irdft_5x5"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
        tensor_content: "\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Initializer/MatMul"
  op: "MatMul"
  input: "synthesis_transform/layer_1/kernel_rdft/Initializer/irdft_5x5"
  input: "synthesis_transform/layer_1/kernel_rdft/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/kernel_rdft"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft"
  input: "synthesis_transform/layer_1/kernel_rdft/Initializer/MatMul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/irdft_5x5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
        tensor_content: "\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\315\314\314>\000\000\000\000\315\314\314>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302\276\312\257\245\276\300\301p\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p\276\220%\375=\300\306\302>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\312\257\245\276\300\301p>\220%\375=\300\306\302\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\320\220>\220%\375=\300\306\302>\312\257\245\276\300\301p>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*\276\300\301p\276\000\000\000\000\300\301p\276\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*\276\301\313\224\275.\371d>\300\306B>i\203\r>t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*\276\300\306B>i\203\r>\301\313\224\275.\371d\276t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*\276\300\306B>i\203\r\276\301\313\224\275.\371d>t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*\276\301\313\224\275.\371d\276\300\306B>i\203\r\276t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211\276\300\306\302\276\000\000\000\000\300\306\302\276\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211\276\300\301\360\275L>\271>\320\223\235>.\371d>\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211\276\320\223\235>.\371d>\300\301\360\275L>\271\276\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211\276\320\223\235>.\371d\276\300\301\360\275L>\271>\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211\276\300\301\360\275L>\271\276\320\223\235>.\371d\276\315\314L>\303\320\220>\000\000\000\000\303\320\220>\000\000\000\000t\000\263=\220%\375=\000\000\000\000\220%\375=\000\000\000\000J\272\211>\300\306\302>\000\000\000\000\300\306\302>\000\000\000\000\374Pj\276\312\257\245\276\000\000\000\000\312\257\245\276\000\000\000\000\245=*>\300\301p>\000\000\000\000\300\301p>\000\000\000\000\315\314L>t\000\263=J\272\211\276\374Pj\276\245=*\276t\000\263=\nt\034=\300\301\360\275\315\314\314\275\301\313\224\275J\272\211>\300\301\360=L>\271\276\320\223\235\276.\371d\276\374Pj\276\315\314\314\275\320\223\235>\030\013\206>\300\306B>\245=*>\301\313\224=.\371d\276\300\306B\276i\203\r\276\315\314L>\374Pj\276\245=*\276t\000\263=J\272\211>t\000\263=\315\314\314\275\301\313\224\275\nt\034=\300\301\360=J\272\211>\320\223\235\276.\371d\276\300\301\360=L>\271>\374Pj\276\030\013\206>\300\306B>\315\314\314\275\320\223\235\276\245=*>\300\306B\276i\203\r\276\301\313\224=.\371d>\315\314L>\374Pj\276\245=*>t\000\263=J\272\211\276t\000\263=\315\314\314\275\301\313\224=\nt\034=\300\301\360\275J\272\211>\320\223\235\276.\371d>\300\301\360=L>\271\276\374Pj\276\030\013\206>\300\306B\276\315\314\314\275\320\223\235>\245=*>\300\306B\276i\203\r>\301\313\224=.\371d\276\315\314L>t\000\263=J\272\211>\374Pj\276\245=*>t\000\263=\nt\034=\300\301\360=\315\314\314\275\301\313\224=J\272\211>\300\301\360=L>\271>\320\223\235\276.\371d>\374Pj\276\315\314\314\275\320\223\235\276\030\013\206>\300\306B\276\245=*>\301\313\224=.\371d>\300\306B\276i\203\r>"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/MatMul"
  op: "MatMul"
  input: "synthesis_transform/layer_1/irdft_5x5"
  input: "synthesis_transform/layer_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "synthesis_transform/layer_1/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/Reshape"
  op: "Reshape"
  input: "synthesis_transform/layer_1/MatMul"
  input: "synthesis_transform/layer_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/bias"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/bias"
  input: "synthesis_transform/layer_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/transpose"
  op: "Transpose"
  input: "synthesis_transform/layer_1/Reshape"
  input: "synthesis_transform/layer_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/Shape"
  op: "Shape"
  input: "synthesis_transform/layer_0/igdn_0/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice"
  op: "StridedSlice"
  input: "synthesis_transform/layer_1/Shape"
  input: "synthesis_transform/layer_1/strided_slice/stack"
  input: "synthesis_transform/layer_1/strided_slice/stack_1"
  input: "synthesis_transform/layer_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice_1"
  op: "StridedSlice"
  input: "synthesis_transform/layer_1/Shape"
  input: "synthesis_transform/layer_1/strided_slice_1/stack"
  input: "synthesis_transform/layer_1/strided_slice_1/stack_1"
  input: "synthesis_transform/layer_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "synthesis_transform/layer_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/mul"
  op: "Mul"
  input: "synthesis_transform/layer_1/strided_slice_1"
  input: "synthesis_transform/layer_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/add"
  op: "AddV2"
  input: "synthesis_transform/layer_1/mul"
  input: "synthesis_transform/layer_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/strided_slice_2"
  op: "StridedSlice"
  input: "synthesis_transform/layer_1/Shape"
  input: "synthesis_transform/layer_1/strided_slice_2/stack"
  input: "synthesis_transform/layer_1/strided_slice_2/stack_1"
  input: "synthesis_transform/layer_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "synthesis_transform/layer_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/mul_1"
  op: "Mul"
  input: "synthesis_transform/layer_1/strided_slice_2"
  input: "synthesis_transform/layer_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/add_1"
  op: "AddV2"
  input: "synthesis_transform/layer_1/mul_1"
  input: "synthesis_transform/layer_1/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/Conv2DBackpropInput/input_sizes/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/Conv2DBackpropInput/input_sizes"
  op: "Pack"
  input: "synthesis_transform/layer_1/strided_slice"
  input: "synthesis_transform/layer_1/add"
  input: "synthesis_transform/layer_1/add_1"
  input: "synthesis_transform/layer_1/Conv2DBackpropInput/input_sizes/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "synthesis_transform/layer_1/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "synthesis_transform/layer_1/Conv2DBackpropInput/input_sizes"
  input: "synthesis_transform/layer_1/transpose"
  input: "synthesis_transform/layer_0/igdn_0/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "synthesis_transform/layer_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/BiasAdd"
  op: "BiasAdd"
  input: "synthesis_transform/layer_1/Conv2DBackpropInput"
  input: "synthesis_transform/layer_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000072652474046
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Initializer/add"
  op: "AddV2"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Initializer/ones"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Initializer/Maximum"
  op: "Maximum"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Initializer/add"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Initializer/Sqrt"
  op: "Sqrt"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Initializer/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/igdn_1/reparam_beta"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Initializer/Sqrt"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/LowerBound/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/LowerBound"
  op: "Maximum"
  input: "synthesis_transform/layer_1/igdn_1/LowerBound/ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "LowerBound"
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/Square"
  op: "Square"
  input: "synthesis_transform/layer_1/igdn_1/LowerBound"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/sub"
  op: "Sub"
  input: "synthesis_transform/layer_1/igdn_1/Square"
  input: "synthesis_transform/layer_1/igdn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.814697265625e-06
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4551915228366852e-11
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/eye/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/eye/diag"
  op: "MatrixDiag"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/eye/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/mul/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/mul"
  op: "Mul"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/mul/x"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/eye/diag"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/add"
  op: "AddV2"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/mul"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/Maximum"
  op: "Maximum"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/add"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/Sqrt"
  op: "Sqrt"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Initializer/Sqrt"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/LowerBound_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/LowerBound_1"
  op: "Maximum"
  input: "synthesis_transform/layer_1/igdn_1/LowerBound_1/ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "LowerBound"
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/Square_1"
  op: "Square"
  input: "synthesis_transform/layer_1/igdn_1/LowerBound_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/sub_1"
  op: "Sub"
  input: "synthesis_transform/layer_1/igdn_1/Square_1"
  input: "synthesis_transform/layer_1/igdn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/Reshape"
  op: "Reshape"
  input: "synthesis_transform/layer_1/igdn_1/sub_1"
  input: "synthesis_transform/layer_1/igdn_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/Square_2"
  op: "Square"
  input: "synthesis_transform/layer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/convolution"
  op: "Conv2D"
  input: "synthesis_transform/layer_1/igdn_1/Square_2"
  input: "synthesis_transform/layer_1/igdn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/BiasAdd"
  op: "BiasAdd"
  input: "synthesis_transform/layer_1/igdn_1/convolution"
  input: "synthesis_transform/layer_1/igdn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/Sqrt"
  op: "Sqrt"
  input: "synthesis_transform/layer_1/igdn_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/mul"
  op: "Mul"
  input: "synthesis_transform/layer_1/BiasAdd"
  input: "synthesis_transform/layer_1/igdn_1/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\t\000\000\000\t\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.011164894327521324
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/TruncatedNormal"
  input: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal"
  op: "Add"
  input: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/mul"
  input: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\001\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Initializer/Reshape"
  op: "Reshape"
  input: "synthesis_transform/layer_2/kernel_rdft/Initializer/truncated_normal"
  input: "synthesis_transform/layer_2/kernel_rdft/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Initializer/irdft_9x9"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
        tensor_content: "9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\275D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\276\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\276D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\2759\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{nv\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\276\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\2759\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\275D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276l\225R>\332J\231\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\2749\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\276\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\2759\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\276\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\275\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{n\275\347\033H=<\250\033=\225\315\206\275\226<X\274\332J\231=\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\276\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\275\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316=\030E\222\275\315X\375=\030E\222\275\315X\375\275\030E\022>\000\000\000\000\030E\222\275\315X\375=9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276l\225R>\332J\231\275\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\274\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\tc>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013\276\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\2769\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\2759\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\3073\027\276\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\352!\\\275<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316=\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013\276\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\275\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\275\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\2769\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\275\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{n\275\347\033H=<\250\033=\225\315\206\275\226<X\274\332J\231=\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\275\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316=\030E\222\275\315X\375=\030E\222\275\315X\375\275\030E\022>\000\000\000\000\030E\222\275\315X\375=\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\2769\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\274\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\t\276\347\033H=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\3073\027\276\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\352!\\=<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316\275\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013>\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\274\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\2769\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\275\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{n=\347\033H\275<\250\033\275\225\315\206=\226<X<\332J\231\275\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316\275\030E\222=\315X\375\275\030E\222=\315X\375=\030E\022\276\000\000\000\000\030E\222=\315X\375\275\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\2769\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276lc>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013>\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\2769\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\000\3073\027\276\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\352!\\=<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013\276\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316\275\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\274\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\275\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{n=\347\033H\275<\250\033\275\225\315\206=\226<X<\332J\231\275\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316\275\030E\222=\315X\375\275\030E\222=\315X\375=\030E\022\276\000\000\000\000\030E\222=\315X\375\2759\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\276\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\2759\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316=\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013>\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\3073\027\276\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\352!\\=<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\2749\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\275D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\2759\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{nv\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\276\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\t\276\347\033H=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Initializer/MatMul"
  op: "MatMul"
  input: "synthesis_transform/layer_2/kernel_rdft/Initializer/irdft_9x9"
  input: "synthesis_transform/layer_2/kernel_rdft/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 81
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_2/kernel_rdft"
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft"
  input: "synthesis_transform/layer_2/kernel_rdft/Initializer/MatMul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/irdft_9x9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
        tensor_content: "9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347 >SQ.>\030E\022>\365\016\036=6\031`v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\275D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\276\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\276D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\2759\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{nv\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\276\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\2759\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\275D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276l\225R>\332J\231\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\2749\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\276\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\2759\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\276\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\275\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{n\275\347\033H=<\250\033=\225\315\206\275\226<X\274\332J\231=\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\276\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\275\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316=\030E\222\275\315X\375=\030E\222\275\315X\375\275\030E\022>\000\000\000\000\030E\222\275\315X\375=9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276l\225R>\332J\231\275\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\274\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\t\276\347\033H=9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013\276\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013>\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\365\347 >9\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013\276\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\2769\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\2759\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\3073\027\276\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\352!\\\275<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000<\250\233\275\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316=\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013\276\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000\243\021E\276\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\\275\n{n\275\347\033H=\226<X\274\332J\231=<\250\033=\225\315\206=\030E\222=\231\363\324<\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\\275\226<X\274\332J\231=\030E\222=\231\363\324<<\250\033=\225\315\206\275\n{n\275\347\033H\275\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\\275<\250\033=\225\315\206=<\250\033=\225\315\206\275<\250\233\275\000\000\000\000<\250\033=\225\315\206=\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\275\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\2769\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\\275\030E\222=\231\363\324<\n{n\275\347\033H\275<\250\033=\225\315\206=\226<X\274\332J\231\275\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\\275\030E\222=\231\363\324\274\n{n\275\347\033H=<\250\033=\225\315\206\275\226<X\274\332J\231=\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\\275<\250\033=\225\315\206\275<\250\033=\225\315\206=<\250\233\275\000\000\000\000<\250\033=\225\315\206\275\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316=\030E\222\275\315X\375=\030E\222\275\315X\375\275\030E\022>\000\000\000\000\030E\222\275\315X\375=\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\\275\226<X\274\332J\231\275\030E\222=\231\363\324\274<\250\033=\225\315\206=\n{n\275\347\033H=\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\2769\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\\275\n{n\275\347\033H\275\226<X\274\332J\231\275<\250\033=\225\315\206\275\030E\222=\231\363\324\274\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\t\276\347\033H=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\3073\027\276\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\020\325U\276\000\000\000\000\352!\\=<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000<\250\233=\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316\275\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\030E\022\276\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013>\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036\2766\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0006\031`\276\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\274\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036\276]\253+\2768\014\020><\250\033\275\244\261\\>6\031\340=1\023B>l\225R>\332J\231=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\275\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036\276<\250\033\275\244\261\\>l\225R>\332J\231=6\031\340=1\023B\276]\253+\2768\014\020\2769\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\275\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036\2766\031\340=1\023B>6\031\340=1\023B\2766\031`\276\000\000\000\0006\031\340=1\023B>9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\276\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036\276l\225R>\332J\231=]\253+\2768\014\020\2766\031\340=1\023B><\250\033\275\244\261\\\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{n=\347\033H\275<\250\033\275\225\315\206=\226<X<\332J\231\275\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036\276l\225R>\332J\231\275]\253+\2768\014\020>6\031\340=1\023B\276<\250\033\275\244\261\\>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316\275\030E\222=\315X\375\275\030E\222=\315X\375=\030E\022\276\000\000\000\000\030E\222=\315X\375\275\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036\2766\031\340=1\023B\2766\031\340=1\023B>6\031`\276\000\000\000\0006\031\340=1\023B\2769\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036\276<\250\033\275\244\261\\\276l\225R>\332J\231\2756\031\340=1\023B>]\253+\2768\014\020>9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\275\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036\276]\253+\2768\014\020\276<\250\033\275\244\261\\\2766\031\340=1\023B\276lc>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\0009\216c>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\0009\216\343\275\000\000\000\000HY\013>\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\000\243\021E>\000\000\000\0009\216\343=\275\205\366=[\333\316\275D\207\337<(v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\365\347 >SQ.>\030E\022\276\365\016\036=6\031`\2769\216\343\275\243\021E\276\020\325U\276<\250\233\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\2759\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\365\347 >\365\016\036=6\031`\276\020\325U\276<\250\233\2759\216\343\275\243\021E>SQ.>\030E\022>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\365\347 >9\216\343\275\243\021E\2769\216\343\275\243\021E>9\216c>\000\000\000\0009\216\343\275\243\021E\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\2769\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\365\347 >\020\325U\276<\250\233\275SQ.>\030E\022>9\216\343\275\243\021E\276\365\016\036=6\031`>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\365\347 >\020\325U\276<\250\233=SQ.>\030E\022\2769\216\343\275\243\021E>\365\016\036=6\031`\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\2769\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\365\347 >9\216\343\275\243\021E>9\216\343\275\243\021E\2769\216c>\000\000\000\0009\216\343\275\243\021E>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\365\347 >\365\016\036=6\031`>\020\325U\276<\250\233=9\216\343\275\243\021E\276SQ.>\030E\022\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\365\347 >SQ.>\030E\022>\365\016\036=6\031`>9\216\343\275\243\021E>\020\325U\276<\250\233=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=9\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\274\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013\276\252\366\026\276\315X\375=\363\341\010\2751\023B>\243\021\305=\253\252*>\'/9>\225\315\206=\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316\2756\031\340\275|\n\274=-2\313\2748\014\020>\030E\222=\315X\375=\340r\t>\347\033H=9\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013\276\363\341\010\2751\023B>\'/9>\225\315\206=\243\021\305=\253\252*\276\252\366\026\276\315X\375\275\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316\275-2\313\2748\014\020>\340r\t>\347\033H=\030E\222=\315X\375\2756\031\340\275|\n\274\2759\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\275\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013\276\243\021\305=\253\252*>\243\021\305=\253\252*\276\243\021E\276\000\000\000\000\243\021\305=\253\252*>\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316\275\030E\222=\315X\375=\030E\222=\315X\375\275\030E\022\276\000\000\000\000\030E\222=\315X\375=9\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013\276\'/9>\225\315\206=\252\366\026\276\315X\375\275\243\021\305=\253\252*>\363\341\010\2751\023B\276\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316\275\340r\t>\347\033H=6\031\340\275|\n\274\275\030E\222=\315X\375=-2\313\2748\014\020\2769\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{n=\347\033H\275<\250\033\275\225\315\206=\226<X<\332J\231\275\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013\276\'/9>\225\315\206\275\252\366\026\276\315X\375=\243\021\305=\253\252*\276\363\341\010\2751\023B>\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316\275\340r\t>\347\033H\2756\031\340\275|\n\274=\030E\222=\315X\375\275-2\313\2748\014\020>9\216\343=\365\347\240\275HY\013>\365\347\240\275HY\013\276\365\347 >\000\000\000\000\365\347\240\275HY\013>D\207\337<\365\016\236\274\363\341\010=\365\016\236\274\363\341\010\275\365\016\036=\000\000\000\000\365\016\236\274\363\341\010=(v\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013\276\243\021\305=\253\252*\276\243\021\305=\253\252*>\243\021E\276\000\000\000\000\243\021\305=\253\252*\276\275\205\366=SQ\256\275\252\366\026>SQ\256\275\252\366\026\276SQ.>\000\000\000\000SQ\256\275\252\366\026>[\333\316\275\030E\222=\315X\375\275\030E\222=\315X\375=\030E\022\276\000\000\000\000\030E\222=\315X\375\2759\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\276\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\275\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013\276\363\341\010\2751\023B\276\'/9>\225\315\206\275\243\021\305=\253\252*>\252\366\026\276\315X\375=\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316\275-2\313\2748\014\020\276\340r\t>\347\033H\275\030E\222=\315X\375=6\031\340\275|\n\274=9\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013\276\252\366\026\276\315X\375\275\363\341\010\2751\023B\276\243\021\305=\253\252*\276\'/9>\225\315\206\275\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316\2756\031\340\275|\n\274\275-2\313\2748\014\020\276\030E\222=\315X\375\275\340r\t>\347\033H\2759\216\343=\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\365\347 >\000\000\000\000\275\205\366=SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000SQ.>\000\000\000\000[\333\316=\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000\030E\022>\000\000\000\000D\207\337<\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000\365\016\036=\000\000\000\000(v\036>6\031`>\000\000\000\0006\031`>\000\000\000\0006\031`>\000\000\000\0006\031`v\036\276\365\347\240\275HY\013\276\3073\027\276\352!\\\275\275\205\366=\373\210\005>6\031\340\275\331(\362<]\253+\276SQ\256\275\252\366\026\276\026\316#\276\n{n\275[\333\316=6\031\340=|\n\274\275-2\313<8\014\020\276\030E\222\275\315X\375\275\340r\t\276\347\033H\275D\207\337<\331(\362<-2\313\274\215\222\333;<\250\033\275\365\016\236\274\363\341\010\275\276\206\024\275\226<X\274(v\036>]\253+>8\014\020\276<\250\033=\244\261\\\2766\031\340\2751\023B\276l\225R\276\332J\231\275\365\347\240\275SQ\256\275\030E\222=\365\016\236\2746\031\340=9\216c=\243\021\305=\020\325\325=<\250\033=HY\013>\252\366\026>\315X\375\275\363\341\010=1\023B\276\243\021\305\275\253\252*\276\'/9\276\225\315\206\275\3073\027\276\026\316#\276\340r\t>\276\206\024\275l\225R>\020\325\325=\'/9>\306\357H>\030E\222=\352!\\=\n{n=\347\033H\275\226<X<\332J\231\275<\250\033\275\225\315\206\275\030E\222\275\231\363\324\2749\216\343=D\207\337<(v\036\276\3073\027\276\352!\\\275\365\347\240\275HY\013>\275\205\366=[\333\316=\275\205\366=\331(\362<]\253+\276\026\316#\276\n{n\275SQ\256\275\252\366\026>\373\210\005>6\031\340=[\333\316=-2\313<8\014\020\276\340r\t\276\347\033H\275\030E\222\275\315X\375=6\031\340=|\n\274=D\207\337<\215\222\333;<\250\033\275\276\206\024\275\226<X\274\365\016\236\274\363\341\010=\331(\362<-2\313<(v\036><\250\033=\244\261\\\276l\225R\276\332J\231\2756\031\340\2751\023B>]\253+>8\014\020>\365\347\240\275\365\016\236\2746\031\340=\020\325\325=<\250\033=9\216c=\243\021\305\275SQ\256\275\030E\222\275HY\013>\363\341\010=1\023B\276\'/9\276\225\315\206\275\243\021\305\275\253\252*>\252\366\026>\315X\375=\3073\027\276\276\206\024\275l\225R>\306\357H>\030E\222=\020\325\325=\'/9\276\026\316#\276\340r\t\276\352!\\=\226<X<\332J\231\275\030E\222\275\231\363\324\274<\250\033\275\225\315\206=\n{n=\347\033H=9\216\343=\365\347\240\275HY\013\276\365\347\240\275HY\013>\365\347 >\000\000\000\000\365\347\240\275HY\013\276\275\205\366=SQ\256\275\252\366\026\276SQ\256\275\252\366\026>SQ.>\000\000\000\000SQ\256\275\252\366\026\276[\333\316=\030E\222\275\315X\375\275\030E\222\275\315X\375=\030E\022>\000\000\000\000\030E\222\275\315X\375\275D\207\337<\365\016\236\274\363\341\010\275\365\016\236\274\363\341\010=\365\016\036=\000\000\000\000\365\016\236\274\363\341\010\275(v\036>6\031\340\2751\023B\2766\031\340\2751\023B>6\031`>\000\000\000\0006\031\340\2751\023B\276\365\347\240\2759\216c=\243\021\305=9\216c=\243\021\305\2759\216\343\275\000\000\000\0009\216c=\243\021\305=HY\013>\243\021\305\275\253\252*\276\243\021\305\275\253\252*>\243\021E>\000\000\000\000\243\021\305\275\253\252*\276\3073\027\276\020\325\325=\'/9>\020\325\325=\'/9\276\020\325U\276\000\000\000\000\020\325\325=\'/9>\352!\\=<\250\033\275\225\315\206\275<\250\033\275\225\315\206=<\250\233=\000\000\000\000<\250\033\275\225\315\206\2759\216\343=\3073\027\276\352!\\\275\275\205\366=[\333\316=\365\347\240\275HY\013\276D\207\337<(v\036>\275\205\366=\026\316#\276\n{n\275\373\210\005>6\031\340=SQ\256\275\252\366\026\276\331(\362<]\253+>[\333\316=\340r\t\276\347\033H\2756\031\340=|\n\274=\030E\222\275\315X\375\275-2\313<8\014\020>D\207\337<\276\206\024\275\226<X\274\331(\362<-2\313<\365\016\236\274\363\341\010\275\215\222\333;<\250\033=(v\036>l\225R\276\332J\231\275]\253+>8\014\020>6\031\340\2751\023B\276<\250\033=\244\261\\>\365\347\240\275\020\325\325=<\250\033=SQ\256\275\030E\222\2759\216c=\243\021\305=\365\016\236\2746\031\340\275HY\013>\'/9\276\225\315\206\275\252\366\026>\315X\375=\243\021\305\275\253\252*\276\363\341\010=1\023B>\3073\027\276\306\357H>\030E\222=\026\316#\276\340r\t\276\020\325\325=\'/9>\276\206\024\275l\225R\276\352!\\=\030E\222\275\231\363\324\274\n{n=\347\033H=<\250\033\275\225\315\206\275\226<X<\332J\231=9\216\343=\3073\027\276\352!\\=\275\205\366=[\333\316\275\365\347\240\275HY\013>D\207\337<(v\036\276\275\205\366=\026\316#\276\n{n=\373\210\005>6\031\340\275SQ\256\275\252\366\026>\331(\362<]\253+\276[\333\316=\340r\t\276\347\033H=6\031\340=|\n\274\275\030E\222\275\315X\375=-2\313<8\014\020\276D\207\337<\276\206\024\275\226<X<\331(\362<-2\313\274\365\016\236\274\363\341\010=\215\222\333;<\250\033\275(v\036>l\225R\276\332J\231=]\253+>8\014\020\2766\031\340\2751\023B><\250\033=\244\261\\\276\365\347\240\275\020\325\325=<\250\033\275SQ\256\275\030E\222=9\216c=\243\021\305\275\365\016\236\2746\031\340=HY\013>\'/9\276\225\315\206=\252\366\026>\315X\375\275\243\021\305\275\253\252*>\363\341\010=1\023B\276\3073\027\276\306\357H>\030E\222\275\026\316#\276\340r\t>\020\325\325=\'/9\276\276\206\024\275l\225R>\352!\\=\030E\222\275\231\363\324<\n{nv\036>6\031\340\2751\023B>6\031\340\2751\023B\2766\031`>\000\000\000\0006\031\340\2751\023B>\365\347\240\2759\216c=\243\021\305\2759\216c=\243\021\305=9\216\343\275\000\000\000\0009\216c=\243\021\305\275HY\013>\243\021\305\275\253\252*>\243\021\305\275\253\252*\276\243\021E>\000\000\000\000\243\021\305\275\253\252*>\3073\027\276\020\325\325=\'/9\276\020\325\325=\'/9>\020\325U\276\000\000\000\000\020\325\325=\'/9\276\352!\\=<\250\033\275\225\315\206=<\250\033\275\225\315\206\275<\250\233=\000\000\000\000<\250\033\275\225\315\206=9\216\343=D\207\337<(v\036>\3073\027\276\352!\\=\365\347\240\275HY\013\276\275\205\366=[\333\316\275\275\205\366=\331(\362<]\253+>\026\316#\276\n{n=SQ\256\275\252\366\026\276\373\210\005>6\031\340\275[\333\316=-2\313<8\014\020>\340r\t\276\347\033H=\030E\222\275\315X\375\2756\031\340=|\n\274\275D\207\337<\215\222\333;<\250\033=\276\206\024\275\226<X<\365\016\236\274\363\341\010\275\331(\362<-2\313\274(v\036><\250\033=\244\261\\>l\225R\276\332J\231=6\031\340\2751\023B\276]\253+>8\014\020\276\365\347\240\275\365\016\236\2746\031\340\275\020\325\325=<\250\033\2759\216c=\243\021\305=SQ\256\275\030E\222=HY\013>\363\341\010=1\023B>\'/9\276\225\315\206=\243\021\305\275\253\252*\276\252\366\026>\315X\375\275\3073\027\276\276\206\024\275l\225R\276\306\357H>\030E\222\275\020\325\325=\'/9>\026\316#\276\340r\t>\352!\\=\226<X<\332J\231=\030E\222\275\231\363\324<<\250\033\275\225\315\206\275\n{n=\347\033H\2759\216\343=\275\205\366=[\333\316=D\207\337<(v\036>\365\347\240\275HY\013>\3073\027\276\352!\\=\275\205\366=\373\210\005>6\031\340=\331(\362<]\253+>SQ\256\275\252\366\026>\026\316#\276\n{n=[\333\316=6\031\340=|\n\274=-2\313<8\014\020>\030E\222\275\315X\375=\340r\t\276\347\033H=D\207\337<\331(\362<-2\313<\215\222\333;<\250\033=\365\016\236\274\363\341\010=\276\206\024\275\226<X<(v\036>]\253+>8\014\020><\250\033=\244\261\\>6\031\340\2751\023B>l\225R\276\332J\231=\365\347\240\275SQ\256\275\030E\222\275\365\016\236\2746\031\340\2759\216c=\243\021\305\275\020\325\325=<\250\033\275HY\013>\252\366\026>\315X\375=\363\341\010=1\023B>\243\021\305\275\253\252*>\'/9\276\225\315\206=\3073\027\276\026\316#\276\340r\t\276\276\206\024\275l\225R\276\020\325\325=\'/9\276\306\357H>\030E\222\275\352!\\=\n{n=\347\033H=\226<X<\332J\231=<\250\033\275\225\315\206=\030E\222\275\231\363\324<"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/MatMul"
  op: "MatMul"
  input: "synthesis_transform/layer_2/irdft_9x9"
  input: "synthesis_transform/layer_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "synthesis_transform/layer_2/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\t\000\000\000\t\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/Reshape"
  op: "Reshape"
  input: "synthesis_transform/layer_2/MatMul"
  input: "synthesis_transform/layer_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_2/bias"
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/bias"
  input: "synthesis_transform/layer_2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/transpose"
  op: "Transpose"
  input: "synthesis_transform/layer_2/Reshape"
  input: "synthesis_transform/layer_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/Shape"
  op: "Shape"
  input: "synthesis_transform/layer_1/igdn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice"
  op: "StridedSlice"
  input: "synthesis_transform/layer_2/Shape"
  input: "synthesis_transform/layer_2/strided_slice/stack"
  input: "synthesis_transform/layer_2/strided_slice/stack_1"
  input: "synthesis_transform/layer_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice_1"
  op: "StridedSlice"
  input: "synthesis_transform/layer_2/Shape"
  input: "synthesis_transform/layer_2/strided_slice_1/stack"
  input: "synthesis_transform/layer_2/strided_slice_1/stack_1"
  input: "synthesis_transform/layer_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "synthesis_transform/layer_2/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/mul"
  op: "Mul"
  input: "synthesis_transform/layer_2/strided_slice_1"
  input: "synthesis_transform/layer_2/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/add"
  op: "AddV2"
  input: "synthesis_transform/layer_2/mul"
  input: "synthesis_transform/layer_2/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/strided_slice_2"
  op: "StridedSlice"
  input: "synthesis_transform/layer_2/Shape"
  input: "synthesis_transform/layer_2/strided_slice_2/stack"
  input: "synthesis_transform/layer_2/strided_slice_2/stack_1"
  input: "synthesis_transform/layer_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "synthesis_transform/layer_2/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/mul_1"
  op: "Mul"
  input: "synthesis_transform/layer_2/strided_slice_2"
  input: "synthesis_transform/layer_2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/add_1"
  op: "AddV2"
  input: "synthesis_transform/layer_2/mul_1"
  input: "synthesis_transform/layer_2/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/Conv2DBackpropInput/input_sizes/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/Conv2DBackpropInput/input_sizes"
  op: "Pack"
  input: "synthesis_transform/layer_2/strided_slice"
  input: "synthesis_transform/layer_2/add"
  input: "synthesis_transform/layer_2/add_1"
  input: "synthesis_transform/layer_2/Conv2DBackpropInput/input_sizes/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "synthesis_transform/layer_2/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "synthesis_transform/layer_2/Conv2DBackpropInput/input_sizes"
  input: "synthesis_transform/layer_2/transpose"
  input: "synthesis_transform/layer_1/igdn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 4
        i: 4
        i: 4
        i: 4
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "synthesis_transform/layer_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/BiasAdd"
  op: "BiasAdd"
  input: "synthesis_transform/layer_2/Conv2DBackpropInput"
  input: "synthesis_transform/layer_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Log"
  op: "Log"
  input: "entropy_bottleneck/LowerBound"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "Log"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -363408.75
      }
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "Sum"
  input: "truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "SquaredDifference"
  op: "SquaredDifference"
  input: "IteratorGetNext"
  input: "synthesis_transform/layer_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "SquaredDifference"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 65025.0
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "Mean"
  input: "mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "mul_1/x"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "mul_1"
  input: "truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Fill"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "mul_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_1_grad/Mul"
  input: "^gradients/mul_1_grad/Mul_1"
}
node {
  name: "gradients/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_1_grad/Mul"
  input: "^gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_1_grad/Mul_1"
  input: "^gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_grad/Shape"
  input: "gradients/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/add_grad/tuple/control_dependency_1"
  input: "truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_grad/RealDiv"
  input: "gradients/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_grad/Sum"
  input: "gradients/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Neg"
  op: "Neg"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_grad/Neg"
  input: "truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_grad/RealDiv_1"
  input: "truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/mul"
  op: "Mul"
  input: "gradients/add_grad/tuple/control_dependency_1"
  input: "gradients/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_grad/mul"
  input: "gradients/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_grad/Sum_1"
  input: "gradients/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_grad/Reshape"
  input: "^gradients/truediv_grad/Reshape_1"
}
node {
  name: "gradients/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_grad/Reshape"
  input: "^gradients/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_grad/Reshape_1"
  input: "^gradients/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Mul"
  op: "Mul"
  input: "gradients/mul_1_grad/tuple/control_dependency_1"
  input: "mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_1_grad/tuple/control_dependency_1"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_grad/Mul"
  input: "^gradients/mul_grad/Mul_1"
}
node {
  name: "gradients/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_grad/Mul"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_grad/Mul_1"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_grad/tuple/control_dependency"
  input: "gradients/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Shape"
  op: "Shape"
  input: "Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_grad/Reshape"
  input: "gradients/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_grad/tuple/control_dependency"
  input: "gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape"
  op: "Shape"
  input: "SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_grad/Reshape"
  input: "gradients/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_1"
  op: "Shape"
  input: "SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_1"
  input: "gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_2"
  input: "gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Mean_grad/Prod_1"
  input: "gradients/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Mean_grad/Prod"
  input: "gradients/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_grad/Tile"
  input: "gradients/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "entropy_bottleneck/LowerBound"
  input: "^gradients/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Log_grad/mul"
  op: "Mul"
  input: "gradients/Sum_grad/Tile"
  input: "gradients/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Mean_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/SquaredDifference_grad/scalar"
  input: "gradients/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/sub"
  op: "Sub"
  input: "IteratorGetNext"
  input: "synthesis_transform/layer_2/BiasAdd"
  input: "^gradients/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/SquaredDifference_grad/Mul"
  input: "gradients/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "IteratorGetNext"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "synthesis_transform/layer_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/SquaredDifference_grad/Shape"
  input: "gradients/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/SquaredDifference_grad/mul_1"
  input: "gradients/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/SquaredDifference_grad/Sum"
  input: "gradients/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/SquaredDifference_grad/mul_1"
  input: "gradients/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/SquaredDifference_grad/Sum_1"
  input: "gradients/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/SquaredDifference_grad/Neg"
  input: "^gradients/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/SquaredDifference_grad/Reshape"
  input: "^gradients/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/SquaredDifference_grad/Neg"
  input: "^gradients/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/LowerBound_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "entropy_bottleneck/transpose_1"
  input: "entropy_bottleneck/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/LowerBound_grad/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/LowerBound_grad/Less"
  op: "Less"
  input: "gradients/Log_grad/mul"
  input: "gradients/entropy_bottleneck/LowerBound_grad/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/LowerBound_grad/LogicalOr"
  op: "LogicalOr"
  input: "gradients/entropy_bottleneck/LowerBound_grad/GreaterEqual"
  input: "gradients/entropy_bottleneck/LowerBound_grad/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/LowerBound_grad/Cast"
  op: "Cast"
  input: "gradients/entropy_bottleneck/LowerBound_grad/LogicalOr"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/LowerBound_grad/mul"
  op: "Mul"
  input: "gradients/entropy_bottleneck/LowerBound_grad/Cast"
  input: "gradients/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/SquaredDifference_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/SquaredDifference_grad/tuple/control_dependency_1"
  input: "^gradients/synthesis_transform/layer_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/synthesis_transform/layer_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/SquaredDifference_grad/tuple/control_dependency_1"
  input: "^gradients/synthesis_transform/layer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/synthesis_transform/layer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "entropy_bottleneck/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/entropy_bottleneck/LowerBound_grad/mul"
  input: "gradients/entropy_bottleneck/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\t\000\000\000\t\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients/synthesis_transform/layer_2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/Shape"
  input: "synthesis_transform/layer_1/igdn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 4
        i: 4
        i: 4
        i: 4
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/Conv2D"
  op: "Conv2D"
  input: "gradients/synthesis_transform/layer_2/BiasAdd_grad/tuple/control_dependency"
  input: "synthesis_transform/layer_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 4
        i: 4
        i: 4
        i: 4
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  input: "^gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Reshape_1_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/Abs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/transpose_1_grad/transpose"
  input: "gradients/entropy_bottleneck/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "synthesis_transform/layer_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_2/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Shape"
  op: "Shape"
  input: "synthesis_transform/layer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Shape_1"
  op: "Shape"
  input: "synthesis_transform/layer_1/igdn_1/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Shape"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  input: "synthesis_transform/layer_1/igdn_1/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Mul"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Sum"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Mul_1"
  op: "Mul"
  input: "synthesis_transform/layer_1/BiasAdd"
  input: "gradients/synthesis_transform/layer_2/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Mul_1"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Sum_1"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Reshape_1"
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Reshape_1"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Abs_2_grad/Sign"
  op: "Sign"
  input: "entropy_bottleneck/sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Abs_2_grad/mul"
  op: "Mul"
  input: "gradients/entropy_bottleneck/Reshape_1_grad/Reshape"
  input: "gradients/entropy_bottleneck/Abs_2_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_2/transpose_grad/transpose"
  input: "gradients/synthesis_transform/layer_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Sqrt_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "synthesis_transform/layer_1/igdn_1/Sqrt"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_7_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/Sigmoid_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_7_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/sub_7_grad/Shape"
  input: "gradients/entropy_bottleneck/sub_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_7_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/Abs_2_grad/mul"
  input: "gradients/entropy_bottleneck/sub_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/sub_7_grad/Sum"
  input: "gradients/entropy_bottleneck/sub_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_7_grad/Neg"
  op: "Neg"
  input: "gradients/entropy_bottleneck/Abs_2_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/sub_7_grad/Neg"
  input: "gradients/entropy_bottleneck/sub_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/sub_7_grad/Sum_1"
  input: "gradients/entropy_bottleneck/sub_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/sub_7_grad/Reshape"
  input: "^gradients/entropy_bottleneck/sub_7_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/sub_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/sub_7_grad/Reshape"
  input: "^gradients/entropy_bottleneck/sub_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/sub_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/sub_7_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/sub_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/sub_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/synthesis_transform/layer_2/Reshape_grad/Reshape"
  input: "synthesis_transform/layer_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "synthesis_transform/layer_2/irdft_9x9"
  input: "gradients/synthesis_transform/layer_2/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_2/MatMul_grad/MatMul"
  input: "^gradients/synthesis_transform/layer_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/synthesis_transform/layer_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_2/MatMul_grad/MatMul"
  input: "^gradients/synthesis_transform/layer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_2/MatMul_grad/MatMul_1"
  input: "^gradients/synthesis_transform/layer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Sqrt_grad/SqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/Sqrt_grad/SqrtGrad"
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Sqrt_grad/SqrtGrad"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/Sqrt_grad/SqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Sigmoid_4_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "entropy_bottleneck/Sigmoid_4"
  input: "gradients/entropy_bottleneck/sub_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Sigmoid_5_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "entropy_bottleneck/Sigmoid_5"
  input: "gradients/entropy_bottleneck/sub_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "synthesis_transform/layer_1/igdn_1/Square_2"
  input: "synthesis_transform/layer_1/igdn_1/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/ShapeN"
  input: "synthesis_transform/layer_1/igdn_1/Reshape"
  input: "gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "synthesis_transform/layer_1/igdn_1/Square_2"
  input: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/ShapeN:1"
  input: "gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/BroadcastGradientArgs/s0"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Neg"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Sum"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Reshape"
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/StopGradient_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/mul_17_grad/Shape"
  input: "gradients/entropy_bottleneck/mul_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/Mul"
  op: "Mul"
  input: "gradients/entropy_bottleneck/Sigmoid_4_grad/SigmoidGrad"
  input: "entropy_bottleneck/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_17_grad/Mul"
  input: "gradients/entropy_bottleneck/mul_17_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_17_grad/Sum"
  input: "gradients/entropy_bottleneck/mul_17_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/Mul_1"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_34"
  input: "gradients/entropy_bottleneck/Sigmoid_4_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_17_grad/Mul_1"
  input: "gradients/entropy_bottleneck/mul_17_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_17_grad/Sum_1"
  input: "gradients/entropy_bottleneck/mul_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/mul_17_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_17_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_17_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_17_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_17_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/mul_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_17_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/StopGradient_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/mul_18_grad/Shape"
  input: "gradients/entropy_bottleneck/mul_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/Mul"
  op: "Mul"
  input: "gradients/entropy_bottleneck/Sigmoid_5_grad/SigmoidGrad"
  input: "entropy_bottleneck/add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_18_grad/Mul"
  input: "gradients/entropy_bottleneck/mul_18_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_18_grad/Sum"
  input: "gradients/entropy_bottleneck/mul_18_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/Mul_1"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_34"
  input: "gradients/entropy_bottleneck/Sigmoid_5_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_18_grad/Mul_1"
  input: "gradients/entropy_bottleneck/mul_18_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_18_grad/Sum_1"
  input: "gradients/entropy_bottleneck/mul_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/mul_18_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_18_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_18_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_18_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_18_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/mul_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_18_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Square_2_grad/Const"
  op: "Const"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Square_2_grad/Mul"
  op: "Mul"
  input: "synthesis_transform/layer_1/BiasAdd"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Square_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Square_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Square_2_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_1/igdn_1/convolution_grad/tuple/control_dependency_1"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Square_grad/Const"
  op: "Const"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/sub_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Square_grad/Mul"
  op: "Mul"
  input: "synthesis_transform/layer_1/igdn_1/LowerBound"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/entropy_bottleneck/mul_17_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/mul_18_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_17_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/synthesis_transform/layer_1/igdn_1/mul_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Square_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_1"
  input: "^gradients/synthesis_transform/layer_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/synthesis_transform/layer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_1"
  input: "^gradients/synthesis_transform/layer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/synthesis_transform/layer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/BroadcastGradientArgs/s0"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Neg"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Sum"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/Reshape_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Reshape"
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Reshape_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "synthesis_transform/layer_1/igdn_1/LowerBound/ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/Less"
  op: "Less"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Square_grad/Mul_1"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/LogicalOr"
  op: "LogicalOr"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/GreaterEqual"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/Cast"
  op: "Cast"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/LogicalOr"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/mul"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/Cast"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Square_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients/synthesis_transform/layer_1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/Shape"
  input: "synthesis_transform/layer_0/igdn_0/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/Conv2D"
  op: "Conv2D"
  input: "gradients/synthesis_transform/layer_1/BiasAdd_grad/tuple/control_dependency"
  input: "synthesis_transform/layer_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  input: "^gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Square_1_grad/Const"
  op: "Const"
  input: "^gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Square_1_grad/Mul"
  op: "Mul"
  input: "synthesis_transform/layer_1/igdn_1/LowerBound_1"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Square_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/Square_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_1/igdn_1/sub_1_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Square_1_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "synthesis_transform/layer_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Shape"
  op: "Shape"
  input: "synthesis_transform/layer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Shape_1"
  op: "Shape"
  input: "synthesis_transform/layer_0/igdn_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Shape"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Mul"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  input: "synthesis_transform/layer_0/igdn_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Sum"
  op: "Sum"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Mul"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Sum"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Mul_1"
  op: "Mul"
  input: "synthesis_transform/layer_0/BiasAdd"
  input: "gradients/synthesis_transform/layer_1/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Mul_1"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Sum_1"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Reshape_1"
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Reshape_1"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "synthesis_transform/layer_1/igdn_1/LowerBound_1/ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/Less"
  op: "Less"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Square_1_grad/Mul_1"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/LogicalOr"
  op: "LogicalOr"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/GreaterEqual"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/Cast"
  op: "Cast"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/LogicalOr"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/mul"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/Cast"
  input: "gradients/synthesis_transform/layer_1/igdn_1/Square_1_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_1/transpose_grad/transpose"
  input: "gradients/synthesis_transform/layer_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Sqrt_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "synthesis_transform/layer_0/igdn_0/Sqrt"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_32_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/MatMul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_32_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_32/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_32_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_32_grad/Shape"
  input: "gradients/entropy_bottleneck/add_32_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_32_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_18_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_32_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_32_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_32_grad/Sum"
  input: "gradients/entropy_bottleneck/add_32_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_32_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_18_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_32_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_32_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_32_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_32_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_32_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_32_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_32_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_32_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_32_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_32_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_32_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_32_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_32_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_32_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_32_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_40_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/MatMul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_40_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_40/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_40_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_40_grad/Shape"
  input: "gradients/entropy_bottleneck/add_40_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_40_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_17_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_40_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_40_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_40_grad/Sum"
  input: "gradients/entropy_bottleneck/add_40_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_40_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_17_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_40_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_40_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_40_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_40_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_40_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_40_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_40_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_40_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_40_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_40_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_40_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_40_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_40_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_40_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_40_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/synthesis_transform/layer_1/Reshape_grad/Reshape"
  input: "synthesis_transform/layer_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "synthesis_transform/layer_1/irdft_5x5"
  input: "gradients/synthesis_transform/layer_1/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_1/MatMul_grad/MatMul"
  input: "^gradients/synthesis_transform/layer_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/synthesis_transform/layer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/MatMul_grad/MatMul"
  input: "^gradients/synthesis_transform/layer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_1/MatMul_grad/MatMul_1"
  input: "^gradients/synthesis_transform/layer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Sqrt_grad/SqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/Sqrt_grad/SqrtGrad"
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Sqrt_grad/SqrtGrad"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/Sqrt_grad/SqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/entropy_bottleneck/add_32_grad/tuple/control_dependency"
  input: "entropy_bottleneck/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_3"
  input: "gradients/entropy_bottleneck/add_32_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/Shape"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice/stack"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/Shape_1"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice_1/stack"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice_1/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/MatMul"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/Sum"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/MatMul_1"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/Sum_1"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/MatMul_15_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_15_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_15_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/MatMul_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_15_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/entropy_bottleneck/add_40_grad/tuple/control_dependency"
  input: "entropy_bottleneck/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_3"
  input: "gradients/entropy_bottleneck/add_40_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/Shape"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice/stack"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/Shape_1"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice_1/stack"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice_1/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/MatMul"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/Sum"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/MatMul_1"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/Sum_1"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/MatMul_19_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_19_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_19_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_19_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/MatMul_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_19_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "synthesis_transform/layer_0/igdn_0/Square_2"
  input: "synthesis_transform/layer_0/igdn_0/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/ShapeN"
  input: "synthesis_transform/layer_0/igdn_0/Reshape"
  input: "gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "synthesis_transform/layer_0/igdn_0/Square_2"
  input: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/ShapeN:1"
  input: "gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Neg"
  op: "Neg"
  input: "gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Sum"
  op: "Sum"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Neg"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Sum"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/tuple/control_dependency_1"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Reshape"
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/tuple/control_dependency_1"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_31_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_31_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_31_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_31_grad/Shape"
  input: "gradients/entropy_bottleneck/add_31_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_31_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_31_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_31_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_31_grad/Sum"
  input: "gradients/entropy_bottleneck/add_31_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_31_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_31_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_31_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_31_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_31_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_31_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_31_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_31_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_31_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_31_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_31_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_31_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_31_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_31_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_31_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_31_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/entropy_bottleneck/MatMul_15_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_15_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Softplus_3_grad/Sigmoid"
  op: "Sigmoid"
  input: "entropy_bottleneck/Softplus_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Softplus_3_grad/mul"
  op: "Mul"
  input: "gradients/AddN_2"
  input: "gradients/entropy_bottleneck/Softplus_3_grad/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_39_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_39_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_39_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_39_grad/Shape"
  input: "gradients/entropy_bottleneck/add_39_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_39_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_39_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_39_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_39_grad/Sum"
  input: "gradients/entropy_bottleneck/add_39_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_39_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_19_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_39_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_39_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_39_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_39_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_39_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_39_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_39_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_39_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_39_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_39_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_39_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_39_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_39_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_39_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_39_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/entropy_bottleneck/add_32_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_40_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_32_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Square_2_grad/Const"
  op: "Const"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Square_2_grad/Mul"
  op: "Mul"
  input: "synthesis_transform/layer_0/BiasAdd"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Square_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Square_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Square_2_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_0/igdn_0/convolution_grad/tuple/control_dependency_1"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Square_grad/Const"
  op: "Const"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/sub_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Square_grad/Mul"
  op: "Mul"
  input: "synthesis_transform/layer_0/igdn_0/LowerBound"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/mul_13_grad/Shape"
  input: "gradients/entropy_bottleneck/mul_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/Mul"
  op: "Mul"
  input: "gradients/entropy_bottleneck/add_31_grad/tuple/control_dependency_1"
  input: "entropy_bottleneck/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_13_grad/Mul"
  input: "gradients/entropy_bottleneck/mul_13_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_13_grad/Sum"
  input: "gradients/entropy_bottleneck/mul_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/Mul_1"
  op: "Mul"
  input: "entropy_bottleneck/Tanh_2"
  input: "gradients/entropy_bottleneck/add_31_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_13_grad/Mul_1"
  input: "gradients/entropy_bottleneck/mul_13_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_13_grad/Sum_1"
  input: "gradients/entropy_bottleneck/mul_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/mul_13_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_13_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_13_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_13_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_13_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/mul_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_13_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/Tanh_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/mul_16_grad/Shape"
  input: "gradients/entropy_bottleneck/mul_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/Mul"
  op: "Mul"
  input: "gradients/entropy_bottleneck/add_39_grad/tuple/control_dependency_1"
  input: "entropy_bottleneck/Tanh_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_16_grad/Mul"
  input: "gradients/entropy_bottleneck/mul_16_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_16_grad/Sum"
  input: "gradients/entropy_bottleneck/mul_16_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/Mul_1"
  op: "Mul"
  input: "entropy_bottleneck/Tanh_2"
  input: "gradients/entropy_bottleneck/add_39_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_16_grad/Mul_1"
  input: "gradients/entropy_bottleneck/mul_16_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_16_grad/Sum_1"
  input: "gradients/entropy_bottleneck/mul_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/mul_16_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_16_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_16_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_16_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_16_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/mul_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_16_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/synthesis_transform/layer_0/igdn_0/mul_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Square_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_4"
  input: "^gradients/synthesis_transform/layer_0/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/synthesis_transform/layer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_4"
  input: "^gradients/synthesis_transform/layer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/synthesis_transform/layer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Neg"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Sum"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/Reshape_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Reshape"
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Reshape_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Reshape"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "synthesis_transform/layer_0/igdn_0/LowerBound/ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/Less"
  op: "Less"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Square_grad/Mul_1"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/LogicalOr"
  op: "LogicalOr"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/GreaterEqual"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/Cast"
  op: "Cast"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/LogicalOr"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/mul"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/Cast"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Square_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Tanh_14_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh_14"
  input: "gradients/entropy_bottleneck/mul_13_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/entropy_bottleneck/mul_13_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/mul_16_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_13_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Tanh_2_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh_2"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Tanh_17_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh_17"
  input: "gradients/entropy_bottleneck/mul_16_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients/synthesis_transform/layer_0/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Shape"
  input: "entropy_bottleneck/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Conv2D"
  op: "Conv2D"
  input: "gradients/synthesis_transform/layer_0/BiasAdd_grad/tuple/control_dependency"
  input: "synthesis_transform/layer_0/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  input: "^gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Square_1_grad/Const"
  op: "Const"
  input: "^gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Square_1_grad/Mul"
  op: "Mul"
  input: "synthesis_transform/layer_0/igdn_0/LowerBound_1"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Square_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/Square_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_0/igdn_0/sub_1_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Square_1_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/entropy_bottleneck/add_31_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/Tanh_14_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_31_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_30_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/MatMul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_30_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_30/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_30_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_30_grad/Shape"
  input: "gradients/entropy_bottleneck/add_30_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_30_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_6"
  input: "gradients/entropy_bottleneck/add_30_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_30_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_30_grad/Sum"
  input: "gradients/entropy_bottleneck/add_30_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_30_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_6"
  input: "gradients/entropy_bottleneck/add_30_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_30_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_30_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_30_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_30_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_30_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_30_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_30_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_30_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_30_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_30_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_30_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_30_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_30_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_30_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/entropy_bottleneck/add_39_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/Tanh_17_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_39_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_38_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/MatMul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_38_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_38_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_38_grad/Shape"
  input: "gradients/entropy_bottleneck/add_38_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_38_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_7"
  input: "gradients/entropy_bottleneck/add_38_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_38_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_38_grad/Sum"
  input: "gradients/entropy_bottleneck/add_38_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_38_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_7"
  input: "gradients/entropy_bottleneck/add_38_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_38_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_38_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_38_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_38_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_38_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_38_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_38_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_38_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_38_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_38_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_38_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_38_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_38_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_38_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "synthesis_transform/layer_0/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/tuple/control_dependency"
  input: "gradients/synthesis_transform/layer_0/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "synthesis_transform/layer_0/igdn_0/LowerBound_1/ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/Less"
  op: "Less"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Square_1_grad/Mul_1"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/LogicalOr"
  op: "LogicalOr"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/GreaterEqual"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/Cast"
  op: "Cast"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/LogicalOr"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/mul"
  op: "Mul"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/Cast"
  input: "gradients/synthesis_transform/layer_0/igdn_0/Square_1_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/entropy_bottleneck/add_30_grad/tuple/control_dependency"
  input: "entropy_bottleneck/add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_2"
  input: "gradients/entropy_bottleneck/add_30_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/Shape"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice/stack"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/Shape_1"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice_1/stack"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice_1/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/MatMul"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/Sum"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/MatMul_1"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/Sum_1"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/MatMul_14_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_14_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_14_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/MatMul_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_14_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/entropy_bottleneck/add_38_grad/tuple/control_dependency"
  input: "entropy_bottleneck/add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_2"
  input: "gradients/entropy_bottleneck/add_38_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/Shape"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice/stack"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/Shape_1"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice_1/stack"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice_1/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/MatMul"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/Sum"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/MatMul_1"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/Sum_1"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/MatMul_18_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_18_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_18_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/MatMul_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_18_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/synthesis_transform/layer_0/transpose_grad/transpose"
  input: "gradients/synthesis_transform/layer_0/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_29_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_29_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_29_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_29_grad/Shape"
  input: "gradients/entropy_bottleneck/add_29_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_29_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_29_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_29_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_29_grad/Sum"
  input: "gradients/entropy_bottleneck/add_29_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_29_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_29_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_29_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_29_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_29_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_29_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_29_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_29_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_29_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_29_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_29_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_29_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_29_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_29_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_29_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_29_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/entropy_bottleneck/MatMul_14_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_14_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Softplus_2_grad/Sigmoid"
  op: "Sigmoid"
  input: "entropy_bottleneck/Softplus_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Softplus_2_grad/mul"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "gradients/entropy_bottleneck/Softplus_2_grad/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_37_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_37_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_37_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_37_grad/Shape"
  input: "gradients/entropy_bottleneck/add_37_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_37_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_37_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_37_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_37_grad/Sum"
  input: "gradients/entropy_bottleneck/add_37_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_37_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_18_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_37_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_37_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_37_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_37_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_37_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_37_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_37_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_37_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_37_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_37_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_37_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_37_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_37_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_37_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_37_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/entropy_bottleneck/add_30_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_38_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_30_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/synthesis_transform/layer_0/Reshape_grad/Reshape"
  input: "synthesis_transform/layer_0/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "synthesis_transform/layer_0/irdft_5x5"
  input: "gradients/synthesis_transform/layer_0/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/synthesis_transform/layer_0/MatMul_grad/MatMul"
  input: "^gradients/synthesis_transform/layer_0/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/synthesis_transform/layer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/MatMul_grad/MatMul"
  input: "^gradients/synthesis_transform/layer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "gradients/synthesis_transform/layer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/synthesis_transform/layer_0/MatMul_grad/MatMul_1"
  input: "^gradients/synthesis_transform/layer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/Tanh_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/mul_12_grad/Shape"
  input: "gradients/entropy_bottleneck/mul_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/Mul"
  op: "Mul"
  input: "gradients/entropy_bottleneck/add_29_grad/tuple/control_dependency_1"
  input: "entropy_bottleneck/Tanh_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_12_grad/Mul"
  input: "gradients/entropy_bottleneck/mul_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_12_grad/Sum"
  input: "gradients/entropy_bottleneck/mul_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/Mul_1"
  op: "Mul"
  input: "entropy_bottleneck/Tanh_1"
  input: "gradients/entropy_bottleneck/add_29_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_12_grad/Mul_1"
  input: "gradients/entropy_bottleneck/mul_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_12_grad/Sum_1"
  input: "gradients/entropy_bottleneck/mul_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/mul_12_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_12_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_12_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_12_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_12_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/mul_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/mul_15_grad/Shape"
  input: "gradients/entropy_bottleneck/mul_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/Mul"
  op: "Mul"
  input: "gradients/entropy_bottleneck/add_37_grad/tuple/control_dependency_1"
  input: "entropy_bottleneck/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_15_grad/Mul"
  input: "gradients/entropy_bottleneck/mul_15_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_15_grad/Sum"
  input: "gradients/entropy_bottleneck/mul_15_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/Mul_1"
  op: "Mul"
  input: "entropy_bottleneck/Tanh_1"
  input: "gradients/entropy_bottleneck/add_37_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_15_grad/Mul_1"
  input: "gradients/entropy_bottleneck/mul_15_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_15_grad/Sum_1"
  input: "gradients/entropy_bottleneck/mul_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/mul_15_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_15_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_15_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_15_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_15_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/mul_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_15_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Tanh_13_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh_13"
  input: "gradients/entropy_bottleneck/mul_12_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/entropy_bottleneck/mul_12_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/mul_15_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_12_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh_1"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Tanh_16_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh_16"
  input: "gradients/entropy_bottleneck/mul_15_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/entropy_bottleneck/add_29_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/Tanh_13_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_29_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_28_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/MatMul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_28_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_28_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_28_grad/Shape"
  input: "gradients/entropy_bottleneck/add_28_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_28_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/entropy_bottleneck/add_28_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_28_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_28_grad/Sum"
  input: "gradients/entropy_bottleneck/add_28_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_28_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/entropy_bottleneck/add_28_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_28_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_28_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_28_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_28_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_28_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_28_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_28_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_28_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_28_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_28_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_28_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_28_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_28_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_28_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/entropy_bottleneck/add_37_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/Tanh_16_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_37_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_36_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/MatMul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_36_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_36/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_36_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_36_grad/Shape"
  input: "gradients/entropy_bottleneck/add_36_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_36_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_12"
  input: "gradients/entropy_bottleneck/add_36_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_36_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_36_grad/Sum"
  input: "gradients/entropy_bottleneck/add_36_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_36_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_12"
  input: "gradients/entropy_bottleneck/add_36_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_36_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_36_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_36_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_36_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_36_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_36_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_36_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_36_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_36_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_36_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_36_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_36_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_36_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_36_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/entropy_bottleneck/add_28_grad/tuple/control_dependency"
  input: "entropy_bottleneck/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_1"
  input: "gradients/entropy_bottleneck/add_28_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/Shape"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice/stack"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/Shape_1"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice_1/stack"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice_1/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/MatMul"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/Sum"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/MatMul_1"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/Sum_1"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/MatMul_13_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_13_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_13_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/MatMul_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_13_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/entropy_bottleneck/add_36_grad/tuple/control_dependency"
  input: "entropy_bottleneck/add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus_1"
  input: "gradients/entropy_bottleneck/add_36_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/Shape"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice/stack"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/Shape_1"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice_1/stack"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice_1/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/MatMul"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/Sum"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/MatMul_1"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/Sum_1"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/MatMul_17_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_17_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_17_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/MatMul_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_17_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_27_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_27_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_27_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_27_grad/Shape"
  input: "gradients/entropy_bottleneck/add_27_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_27_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_27_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_27_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_27_grad/Sum"
  input: "gradients/entropy_bottleneck/add_27_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_27_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_27_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_27_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_27_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_27_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_27_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_27_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_27_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_27_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_27_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_27_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_27_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_27_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_27_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_27_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_27_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/entropy_bottleneck/MatMul_13_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_13_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Softplus_1_grad/Sigmoid"
  op: "Sigmoid"
  input: "entropy_bottleneck/Softplus_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Softplus_1_grad/mul"
  op: "Mul"
  input: "gradients/AddN_13"
  input: "gradients/entropy_bottleneck/Softplus_1_grad/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_35_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_35_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_35_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_35_grad/Shape"
  input: "gradients/entropy_bottleneck/add_35_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_35_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_35_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_35_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_35_grad/Sum"
  input: "gradients/entropy_bottleneck/add_35_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_35_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_17_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_35_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_35_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_35_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_35_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_35_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_35_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_35_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_35_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_35_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_35_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_35_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_35_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_35_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_35_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_35_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/entropy_bottleneck/add_28_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_36_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_28_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/mul_11_grad/Shape"
  input: "gradients/entropy_bottleneck/mul_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/Mul"
  op: "Mul"
  input: "gradients/entropy_bottleneck/add_27_grad/tuple/control_dependency_1"
  input: "entropy_bottleneck/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_11_grad/Mul"
  input: "gradients/entropy_bottleneck/mul_11_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_11_grad/Sum"
  input: "gradients/entropy_bottleneck/mul_11_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/Mul_1"
  op: "Mul"
  input: "entropy_bottleneck/Tanh"
  input: "gradients/entropy_bottleneck/add_27_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_11_grad/Mul_1"
  input: "gradients/entropy_bottleneck/mul_11_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_11_grad/Sum_1"
  input: "gradients/entropy_bottleneck/mul_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/mul_11_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_11_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_11_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_11_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_11_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/mul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_11_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/Tanh_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/mul_14_grad/Shape"
  input: "gradients/entropy_bottleneck/mul_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/Mul"
  op: "Mul"
  input: "gradients/entropy_bottleneck/add_35_grad/tuple/control_dependency_1"
  input: "entropy_bottleneck/Tanh_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_14_grad/Mul"
  input: "gradients/entropy_bottleneck/mul_14_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_14_grad/Sum"
  input: "gradients/entropy_bottleneck/mul_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/Mul_1"
  op: "Mul"
  input: "entropy_bottleneck/Tanh"
  input: "gradients/entropy_bottleneck/add_35_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/mul_14_grad/Mul_1"
  input: "gradients/entropy_bottleneck/mul_14_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/mul_14_grad/Sum_1"
  input: "gradients/entropy_bottleneck/mul_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/mul_14_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_14_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_14_grad/Reshape"
  input: "^gradients/entropy_bottleneck/mul_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_14_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/mul_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/mul_14_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/mul_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_14_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Tanh_12_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh_12"
  input: "gradients/entropy_bottleneck/mul_11_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/entropy_bottleneck/mul_11_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/mul_14_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/mul_11_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Tanh_15_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh_15"
  input: "gradients/entropy_bottleneck/mul_14_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/entropy_bottleneck/add_27_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/Tanh_12_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_27_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_26_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/MatMul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_26_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_26_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_26_grad/Shape"
  input: "gradients/entropy_bottleneck/add_26_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_26_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_16"
  input: "gradients/entropy_bottleneck/add_26_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_26_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_26_grad/Sum"
  input: "gradients/entropy_bottleneck/add_26_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_26_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_16"
  input: "gradients/entropy_bottleneck/add_26_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_26_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_26_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_26_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_26_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_26_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_26_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_26_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_26_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_26_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_26_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_26_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_26_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_26_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_26_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/entropy_bottleneck/add_35_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/Tanh_15_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_35_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_34_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/MatMul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_34_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_34/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_34_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_34_grad/Shape"
  input: "gradients/entropy_bottleneck/add_34_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_34_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_17"
  input: "gradients/entropy_bottleneck/add_34_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_34_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_34_grad/Sum"
  input: "gradients/entropy_bottleneck/add_34_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_34_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_17"
  input: "gradients/entropy_bottleneck/add_34_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_34_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_34_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_34_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_34_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_34_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_34_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_34_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_34_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_34_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_34_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_34_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_34_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_34_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_34_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/entropy_bottleneck/add_26_grad/tuple/control_dependency"
  input: "entropy_bottleneck/sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus"
  input: "gradients/entropy_bottleneck/add_26_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/Shape"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice/stack"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/Shape_1"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice_1/stack"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice_1/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/MatMul"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/Sum"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/MatMul_1"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/Sum_1"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/MatMul_12_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_12_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_12_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/MatMul_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/entropy_bottleneck/add_34_grad/tuple/control_dependency"
  input: "entropy_bottleneck/add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/Softplus"
  input: "gradients/entropy_bottleneck/add_34_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/Shape"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice/stack"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/Shape_1"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice_1/stack"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice_1/stack_1"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/MatMul"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/Sum"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/MatMul_1"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/Sum_1"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/MatMul_16_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_16_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/Reshape"
  input: "^gradients/entropy_bottleneck/MatMul_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_16_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/MatMul_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/MatMul_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_16_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_6_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_6_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/sub_6_grad/Shape"
  input: "gradients/entropy_bottleneck/sub_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_6_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/sub_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/sub_6_grad/Sum"
  input: "gradients/entropy_bottleneck/sub_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_6_grad/Neg"
  op: "Neg"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/sub_6_grad/Neg"
  input: "gradients/entropy_bottleneck/sub_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/sub_6_grad/Sum_1"
  input: "gradients/entropy_bottleneck/sub_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/sub_6_grad/Reshape"
  input: "^gradients/entropy_bottleneck/sub_6_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/sub_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/sub_6_grad/Reshape"
  input: "^gradients/entropy_bottleneck/sub_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/sub_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/sub_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/sub_6_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/sub_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/sub_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/entropy_bottleneck/MatMul_12_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/MatMul_12_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Softplus_grad/Sigmoid"
  op: "Sigmoid"
  input: "entropy_bottleneck/Softplus/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Softplus_grad/mul"
  op: "Mul"
  input: "gradients/AddN_18"
  input: "gradients/entropy_bottleneck/Softplus_grad/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_33_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_33_grad/Shape_1"
  op: "Shape"
  input: "entropy_bottleneck/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_33_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/entropy_bottleneck/add_33_grad/Shape"
  input: "gradients/entropy_bottleneck/add_33_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_33_grad/Sum"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_33_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_33_grad/Reshape"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_33_grad/Sum"
  input: "gradients/entropy_bottleneck/add_33_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_33_grad/Sum_1"
  op: "Sum"
  input: "gradients/entropy_bottleneck/MatMul_16_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_33_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_33_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/entropy_bottleneck/add_33_grad/Sum_1"
  input: "gradients/entropy_bottleneck/add_33_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_33_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/entropy_bottleneck/add_33_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_33_grad/Reshape_1"
}
node {
  name: "gradients/entropy_bottleneck/add_33_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_33_grad/Reshape"
  input: "^gradients/entropy_bottleneck/add_33_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_33_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/add_33_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/entropy_bottleneck/add_33_grad/Reshape_1"
  input: "^gradients/entropy_bottleneck/add_33_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_33_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/entropy_bottleneck/add_26_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/add_34_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/add_26_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/entropy_bottleneck/sub_6_grad/tuple/control_dependency"
  input: "gradients/entropy_bottleneck/add_33_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/entropy_bottleneck/sub_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Reshape_grad/Shape"
  op: "Shape"
  input: "entropy_bottleneck/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_20"
  input: "gradients/entropy_bottleneck/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "entropy_bottleneck/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/entropy_bottleneck/Reshape_grad/Reshape"
  input: "gradients/entropy_bottleneck/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  input: "gradients/entropy_bottleneck/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/AddN_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_21"
}
node {
  name: "gradients/entropy_bottleneck/AddN_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_21"
  input: "^gradients/entropy_bottleneck/AddN_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/entropy_bottleneck/AddN_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AddN_21"
  input: "^gradients/entropy_bottleneck/AddN_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/synthesis_transform/layer_0/Conv2DBackpropInput_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "analysis_transform/layer_1/gdn_1/mul"
  input: "analysis_transform/layer_2/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/analysis_transform/layer_2/Conv2D_grad/ShapeN"
  input: "analysis_transform/layer_2/Reshape"
  input: "gradients/entropy_bottleneck/AddN_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "analysis_transform/layer_1/gdn_1/mul"
  input: "gradients/analysis_transform/layer_2/Conv2D_grad/ShapeN:1"
  input: "gradients/entropy_bottleneck/AddN_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/analysis_transform/layer_2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/analysis_transform/layer_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/analysis_transform/layer_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/analysis_transform/layer_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Shape"
  op: "Shape"
  input: "analysis_transform/layer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Shape_1"
  op: "Shape"
  input: "analysis_transform/layer_1/gdn_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Shape"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/analysis_transform/layer_2/Conv2D_grad/tuple/control_dependency"
  input: "analysis_transform/layer_1/gdn_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Mul"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Sum"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Mul_1"
  op: "Mul"
  input: "analysis_transform/layer_1/BiasAdd"
  input: "gradients/analysis_transform/layer_2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Mul_1"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Sum_1"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_1/gdn_1/mul_grad/Reshape"
  input: "^gradients/analysis_transform/layer_1/gdn_1/mul_grad/Reshape_1"
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Reshape"
  input: "^gradients/analysis_transform/layer_1/gdn_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/Reshape_1"
  input: "^gradients/analysis_transform/layer_1/gdn_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_2/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_2/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/analysis_transform/layer_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "analysis_transform/layer_1/gdn_1/Rsqrt"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/analysis_transform/layer_2/Reshape_grad/Reshape"
  input: "analysis_transform/layer_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "analysis_transform/layer_2/irdft_5x5"
  input: "gradients/analysis_transform/layer_2/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_2/MatMul_grad/MatMul"
  input: "^gradients/analysis_transform/layer_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/analysis_transform/layer_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_2/MatMul_grad/MatMul"
  input: "^gradients/analysis_transform/layer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_2/MatMul_grad/MatMul_1"
  input: "^gradients/analysis_transform/layer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/analysis_transform/layer_1/gdn_1/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/analysis_transform/layer_1/gdn_1/Rsqrt_grad/RsqrtGrad"
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/gdn_1/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "analysis_transform/layer_1/gdn_1/Square_2"
  input: "analysis_transform/layer_1/gdn_1/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/ShapeN"
  input: "analysis_transform/layer_1/gdn_1/Reshape"
  input: "gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "analysis_transform/layer_1/gdn_1/Square_2"
  input: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/ShapeN:1"
  input: "gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_1/gdn_1/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/analysis_transform/layer_1/gdn_1/convolution_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/analysis_transform/layer_1/gdn_1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/analysis_transform/layer_1/gdn_1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/Neg"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/Sum"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "^gradients/analysis_transform/layer_1/gdn_1/sub_grad/Reshape"
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "^gradients/analysis_transform/layer_1/gdn_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/Reshape"
  input: "^gradients/analysis_transform/layer_1/gdn_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Square_2_grad/Const"
  op: "Const"
  input: "^gradients/analysis_transform/layer_1/gdn_1/convolution_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Square_2_grad/Mul"
  op: "Mul"
  input: "analysis_transform/layer_1/BiasAdd"
  input: "gradients/analysis_transform/layer_1/gdn_1/Square_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Square_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/tuple/control_dependency"
  input: "gradients/analysis_transform/layer_1/gdn_1/Square_2_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_1/gdn_1/convolution_grad/tuple/control_dependency_1"
  input: "gradients/analysis_transform/layer_1/gdn_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Square_grad/Const"
  op: "Const"
  input: "^gradients/analysis_transform/layer_1/gdn_1/sub_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Square_grad/Mul"
  op: "Mul"
  input: "analysis_transform/layer_1/gdn_1/LowerBound"
  input: "gradients/analysis_transform/layer_1/gdn_1/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_grad/tuple/control_dependency"
  input: "gradients/analysis_transform/layer_1/gdn_1/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/analysis_transform/layer_1/gdn_1/mul_grad/tuple/control_dependency"
  input: "gradients/analysis_transform/layer_1/gdn_1/Square_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_22"
  input: "^gradients/analysis_transform/layer_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/analysis_transform/layer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_22"
  input: "^gradients/analysis_transform/layer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/analysis_transform/layer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/analysis_transform/layer_1/gdn_1/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Neg"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Sum"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_1/gdn_1/Reshape_grad/Reshape"
  input: "^gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Reshape"
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/gdn_1/Reshape_grad/Reshape"
  input: "^gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Reshape"
  input: "^gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "analysis_transform/layer_1/gdn_1/LowerBound/ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/Less"
  op: "Less"
  input: "gradients/analysis_transform/layer_1/gdn_1/Square_grad/Mul_1"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/LogicalOr"
  op: "LogicalOr"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/GreaterEqual"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/Cast"
  op: "Cast"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/LogicalOr"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/mul"
  op: "Mul"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/Cast"
  input: "gradients/analysis_transform/layer_1/gdn_1/Square_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "analysis_transform/layer_0/gdn_0/mul"
  input: "analysis_transform/layer_1/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/analysis_transform/layer_1/Conv2D_grad/ShapeN"
  input: "analysis_transform/layer_1/Reshape"
  input: "gradients/analysis_transform/layer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "analysis_transform/layer_0/gdn_0/mul"
  input: "gradients/analysis_transform/layer_1/Conv2D_grad/ShapeN:1"
  input: "gradients/analysis_transform/layer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 2
        i: 2
        i: 2
        i: 2
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/analysis_transform/layer_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/analysis_transform/layer_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/analysis_transform/layer_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/analysis_transform/layer_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Square_1_grad/Const"
  op: "Const"
  input: "^gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Square_1_grad/Mul"
  op: "Mul"
  input: "analysis_transform/layer_1/gdn_1/LowerBound_1"
  input: "gradients/analysis_transform/layer_1/gdn_1/Square_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/Square_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/analysis_transform/layer_1/gdn_1/sub_1_grad/tuple/control_dependency"
  input: "gradients/analysis_transform/layer_1/gdn_1/Square_1_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Shape"
  op: "Shape"
  input: "analysis_transform/layer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Shape_1"
  op: "Shape"
  input: "analysis_transform/layer_0/gdn_0/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Shape"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Mul"
  op: "Mul"
  input: "gradients/analysis_transform/layer_1/Conv2D_grad/tuple/control_dependency"
  input: "analysis_transform/layer_0/gdn_0/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Sum"
  op: "Sum"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Mul"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Sum"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Mul_1"
  op: "Mul"
  input: "analysis_transform/layer_0/BiasAdd"
  input: "gradients/analysis_transform/layer_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Mul_1"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Sum_1"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_0/gdn_0/mul_grad/Reshape"
  input: "^gradients/analysis_transform/layer_0/gdn_0/mul_grad/Reshape_1"
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Reshape"
  input: "^gradients/analysis_transform/layer_0/gdn_0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/Reshape_1"
  input: "^gradients/analysis_transform/layer_0/gdn_0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_1/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/analysis_transform/layer_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "analysis_transform/layer_1/gdn_1/LowerBound_1/ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/Less"
  op: "Less"
  input: "gradients/analysis_transform/layer_1/gdn_1/Square_1_grad/Mul_1"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/LogicalOr"
  op: "LogicalOr"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/GreaterEqual"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/Cast"
  op: "Cast"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/LogicalOr"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/mul"
  op: "Mul"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/Cast"
  input: "gradients/analysis_transform/layer_1/gdn_1/Square_1_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "analysis_transform/layer_0/gdn_0/Rsqrt"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/analysis_transform/layer_1/Reshape_grad/Reshape"
  input: "analysis_transform/layer_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "analysis_transform/layer_1/irdft_5x5"
  input: "gradients/analysis_transform/layer_1/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_1/MatMul_grad/MatMul"
  input: "^gradients/analysis_transform/layer_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/analysis_transform/layer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/MatMul_grad/MatMul"
  input: "^gradients/analysis_transform/layer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_1/MatMul_grad/MatMul_1"
  input: "^gradients/analysis_transform/layer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/analysis_transform/layer_0/gdn_0/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/analysis_transform/layer_0/gdn_0/Rsqrt_grad/RsqrtGrad"
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/gdn_0/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "analysis_transform/layer_0/gdn_0/Square_2"
  input: "analysis_transform/layer_0/gdn_0/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/ShapeN"
  input: "analysis_transform/layer_0/gdn_0/Reshape"
  input: "gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "analysis_transform/layer_0/gdn_0/Square_2"
  input: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/ShapeN:1"
  input: "gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_0/gdn_0/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/analysis_transform/layer_0/gdn_0/convolution_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/analysis_transform/layer_0/gdn_0/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/analysis_transform/layer_0/gdn_0/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/Neg"
  op: "Neg"
  input: "gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/Sum"
  op: "Sum"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/Neg"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/Sum"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/tuple/control_dependency_1"
  input: "^gradients/analysis_transform/layer_0/gdn_0/sub_grad/Reshape"
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/tuple/control_dependency_1"
  input: "^gradients/analysis_transform/layer_0/gdn_0/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/Reshape"
  input: "^gradients/analysis_transform/layer_0/gdn_0/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Square_2_grad/Const"
  op: "Const"
  input: "^gradients/analysis_transform/layer_0/gdn_0/convolution_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Square_2_grad/Mul"
  op: "Mul"
  input: "analysis_transform/layer_0/BiasAdd"
  input: "gradients/analysis_transform/layer_0/gdn_0/Square_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Square_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/tuple/control_dependency"
  input: "gradients/analysis_transform/layer_0/gdn_0/Square_2_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_0/gdn_0/convolution_grad/tuple/control_dependency_1"
  input: "gradients/analysis_transform/layer_0/gdn_0/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Square_grad/Const"
  op: "Const"
  input: "^gradients/analysis_transform/layer_0/gdn_0/sub_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Square_grad/Mul"
  op: "Mul"
  input: "analysis_transform/layer_0/gdn_0/LowerBound"
  input: "gradients/analysis_transform/layer_0/gdn_0/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_grad/tuple/control_dependency"
  input: "gradients/analysis_transform/layer_0/gdn_0/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/analysis_transform/layer_0/gdn_0/mul_grad/tuple/control_dependency"
  input: "gradients/analysis_transform/layer_0/gdn_0/Square_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_23"
  input: "^gradients/analysis_transform/layer_0/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/analysis_transform/layer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_23"
  input: "^gradients/analysis_transform/layer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/analysis_transform/layer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/analysis_transform/layer_0/gdn_0/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Neg"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Sum"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_0/gdn_0/Reshape_grad/Reshape"
  input: "^gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Reshape"
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/gdn_0/Reshape_grad/Reshape"
  input: "^gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Reshape"
  input: "^gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "analysis_transform/layer_0/gdn_0/LowerBound/ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/Less"
  op: "Less"
  input: "gradients/analysis_transform/layer_0/gdn_0/Square_grad/Mul_1"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/LogicalOr"
  op: "LogicalOr"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/GreaterEqual"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/Cast"
  op: "Cast"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/LogicalOr"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/mul"
  op: "Mul"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/Cast"
  input: "gradients/analysis_transform/layer_0/gdn_0/Square_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "IteratorGetNext"
  input: "analysis_transform/layer_0/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/analysis_transform/layer_0/Conv2D_grad/ShapeN"
  input: "analysis_transform/layer_0/Reshape"
  input: "gradients/analysis_transform/layer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 4
        i: 4
        i: 4
        i: 4
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "IteratorGetNext"
  input: "gradients/analysis_transform/layer_0/Conv2D_grad/ShapeN:1"
  input: "gradients/analysis_transform/layer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
        i: 0
        i: 0
        i: 4
        i: 4
        i: 4
        i: 4
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "EXPLICIT"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_0/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/analysis_transform/layer_0/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/analysis_transform/layer_0/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/analysis_transform/layer_0/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/analysis_transform/layer_0/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 9
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Square_1_grad/Const"
  op: "Const"
  input: "^gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Square_1_grad/Mul"
  op: "Mul"
  input: "analysis_transform/layer_0/gdn_0/LowerBound_1"
  input: "gradients/analysis_transform/layer_0/gdn_0/Square_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/Square_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/analysis_transform/layer_0/gdn_0/sub_1_grad/tuple/control_dependency"
  input: "gradients/analysis_transform/layer_0/gdn_0/Square_1_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/analysis_transform/layer_0/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/analysis_transform/layer_0/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "analysis_transform/layer_0/gdn_0/LowerBound_1/ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/Less"
  op: "Less"
  input: "gradients/analysis_transform/layer_0/gdn_0/Square_1_grad/Mul_1"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/LogicalOr"
  op: "LogicalOr"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/GreaterEqual"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/Cast"
  op: "Cast"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/LogicalOr"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/mul"
  op: "Mul"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/Cast"
  input: "gradients/analysis_transform/layer_0/gdn_0/Square_1_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/analysis_transform/layer_0/Reshape_grad/Reshape"
  input: "analysis_transform/layer_0/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "analysis_transform/layer_0/irdft_9x9"
  input: "gradients/analysis_transform/layer_0/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/analysis_transform/layer_0/MatMul_grad/MatMul"
  input: "^gradients/analysis_transform/layer_0/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/analysis_transform/layer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/MatMul_grad/MatMul"
  input: "^gradients/analysis_transform/layer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "gradients/analysis_transform/layer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/analysis_transform/layer_0/MatMul_grad/MatMul_1"
  input: "^gradients/analysis_transform/layer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/analysis_transform/layer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta1_power"
    }
  }
}
node {
  name: "beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "beta1_power/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta2_power"
    }
  }
}
node {
  name: "beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "beta2_power/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros"
  op: "Fill"
  input: "analysis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  input: "analysis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 81
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/kernel_rdft/Adam"
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam"
  input: "analysis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "analysis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "analysis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 81
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/kernel_rdft/Adam_1"
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam_1"
  input: "analysis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/kernel_rdft/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/bias/Adam"
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/bias/Adam"
  input: "analysis_transform/layer_0/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/bias/Adam_1"
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/bias/Adam_1"
  input: "analysis_transform/layer_0/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam/Initializer/zeros"
  op: "Fill"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam/Initializer/zeros/shape_as_tensor"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros"
  op: "Fill"
  input: "analysis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  input: "analysis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/kernel_rdft/Adam"
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam"
  input: "analysis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "analysis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "analysis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/kernel_rdft/Adam_1"
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam_1"
  input: "analysis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/kernel_rdft/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/bias/Adam"
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/bias/Adam"
  input: "analysis_transform/layer_1/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/bias/Adam_1"
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/bias/Adam_1"
  input: "analysis_transform/layer_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam/Initializer/zeros"
  op: "Fill"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam/Initializer/zeros/shape_as_tensor"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros"
  op: "Fill"
  input: "analysis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  input: "analysis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_2/kernel_rdft/Adam"
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam"
  input: "analysis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "analysis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "analysis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "analysis_transform/layer_2/kernel_rdft/Adam_1"
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam_1"
  input: "analysis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "analysis_transform/layer_2/kernel_rdft/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_0/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_0/Adam"
  input: "entropy_bottleneck/matrix_0/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_0/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_0/Adam_1"
  input: "entropy_bottleneck/matrix_0/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_0/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_0/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_0/Adam"
  input: "entropy_bottleneck/bias_0/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_0/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_0/Adam_1"
  input: "entropy_bottleneck/bias_0/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_0/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/factor_0/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_0/Adam"
  input: "entropy_bottleneck/factor_0/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/factor_0/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_0/Adam_1"
  input: "entropy_bottleneck/factor_0/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_0/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam/Initializer/zeros"
  op: "Fill"
  input: "entropy_bottleneck/matrix_1/Adam/Initializer/zeros/shape_as_tensor"
  input: "entropy_bottleneck/matrix_1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_1/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_1/Adam"
  input: "entropy_bottleneck/matrix_1/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "entropy_bottleneck/matrix_1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "entropy_bottleneck/matrix_1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_1/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_1/Adam_1"
  input: "entropy_bottleneck/matrix_1/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_1/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_1/Adam"
  input: "entropy_bottleneck/bias_1/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_1/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_1/Adam_1"
  input: "entropy_bottleneck/bias_1/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/factor_1/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_1/Adam"
  input: "entropy_bottleneck/factor_1/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/factor_1/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_1/Adam_1"
  input: "entropy_bottleneck/factor_1/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam/Initializer/zeros"
  op: "Fill"
  input: "entropy_bottleneck/matrix_2/Adam/Initializer/zeros/shape_as_tensor"
  input: "entropy_bottleneck/matrix_2/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_2/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_2/Adam"
  input: "entropy_bottleneck/matrix_2/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "entropy_bottleneck/matrix_2/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "entropy_bottleneck/matrix_2/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_2/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_2/Adam_1"
  input: "entropy_bottleneck/matrix_2/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_2/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_2/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_2/Adam"
  input: "entropy_bottleneck/bias_2/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_2/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_2/Adam_1"
  input: "entropy_bottleneck/bias_2/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_2/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/factor_2/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_2/Adam"
  input: "entropy_bottleneck/factor_2/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/factor_2/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_2/Adam_1"
  input: "entropy_bottleneck/factor_2/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/factor_2/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/factor_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_3/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_3/Adam"
  input: "entropy_bottleneck/matrix_3/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/matrix_3/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_3/Adam_1"
  input: "entropy_bottleneck/matrix_3/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/matrix_3/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/matrix_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_3/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_3/Adam"
  input: "entropy_bottleneck/bias_3/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/bias_3/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_3/Adam_1"
  input: "entropy_bottleneck/bias_3/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/bias_3/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/bias_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros"
  op: "Fill"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/kernel_rdft/Adam"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/kernel_rdft/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/bias/Adam"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/bias/Adam"
  input: "synthesis_transform/layer_0/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/bias/Adam_1"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/bias/Adam_1"
  input: "synthesis_transform/layer_0/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam/Initializer/zeros"
  op: "Fill"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam/Initializer/zeros/shape_as_tensor"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros"
  op: "Fill"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/kernel_rdft/Adam"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/kernel_rdft/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/bias/Adam"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/bias/Adam"
  input: "synthesis_transform/layer_1/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/bias/Adam_1"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/bias/Adam_1"
  input: "synthesis_transform/layer_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam/Initializer/zeros"
  op: "Fill"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam/Initializer/zeros/shape_as_tensor"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros"
  op: "Fill"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros/shape_as_tensor"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 81
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_2/kernel_rdft/Adam"
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 81
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/kernel_rdft/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 81
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_2/bias/Adam"
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/bias/Adam"
  input: "synthesis_transform/layer_2/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "synthesis_transform/layer_2/bias/Adam_1"
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/bias/Adam_1"
  input: "synthesis_transform/layer_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "synthesis_transform/layer_2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "synthesis_transform/layer_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "analysis_transform/layer_0/kernel_rdft"
  input: "analysis_transform/layer_0/kernel_rdft/Adam"
  input: "analysis_transform/layer_0/kernel_rdft/Adam_1"
  input: "Adam/update_analysis_transform/layer_0/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_analysis_transform/layer_0/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/analysis_transform/layer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "analysis_transform/layer_0/bias"
  input: "analysis_transform/layer_0/bias/Adam"
  input: "analysis_transform/layer_0/bias/Adam_1"
  input: "Adam/update_analysis_transform/layer_0/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_analysis_transform/layer_0/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/analysis_transform/layer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/gdn_0/reparam_beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/gdn_0/reparam_beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/gdn_0/reparam_beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
  input: "Adam/update_analysis_transform/layer_0/gdn_0/reparam_beta/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_analysis_transform/layer_0/gdn_0/reparam_beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/gdn_0/reparam_gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/gdn_0/reparam_gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_0/gdn_0/reparam_gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
  input: "Adam/update_analysis_transform/layer_0/gdn_0/reparam_gamma/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_analysis_transform/layer_0/gdn_0/reparam_gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/analysis_transform/layer_0/gdn_0/LowerBound_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/gdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "analysis_transform/layer_1/kernel_rdft"
  input: "analysis_transform/layer_1/kernel_rdft/Adam"
  input: "analysis_transform/layer_1/kernel_rdft/Adam_1"
  input: "Adam/update_analysis_transform/layer_1/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_analysis_transform/layer_1/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/analysis_transform/layer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "analysis_transform/layer_1/bias"
  input: "analysis_transform/layer_1/bias/Adam"
  input: "analysis_transform/layer_1/bias/Adam_1"
  input: "Adam/update_analysis_transform/layer_1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_analysis_transform/layer_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/analysis_transform/layer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/gdn_1/reparam_beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/gdn_1/reparam_beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/gdn_1/reparam_beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
  input: "Adam/update_analysis_transform/layer_1/gdn_1/reparam_beta/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_analysis_transform/layer_1/gdn_1/reparam_beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/gdn_1/reparam_gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/gdn_1/reparam_gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_1/gdn_1/reparam_gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
  input: "Adam/update_analysis_transform/layer_1/gdn_1/reparam_gamma/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_analysis_transform/layer_1/gdn_1/reparam_gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/analysis_transform/layer_1/gdn_1/LowerBound_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_1/gdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_2/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_2/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_analysis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "analysis_transform/layer_2/kernel_rdft"
  input: "analysis_transform/layer_2/kernel_rdft/Adam"
  input: "analysis_transform/layer_2/kernel_rdft/Adam_1"
  input: "Adam/update_analysis_transform/layer_2/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_analysis_transform/layer_2/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/analysis_transform/layer_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_0/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_0/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_0/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/matrix_0"
  input: "entropy_bottleneck/matrix_0/Adam"
  input: "entropy_bottleneck/matrix_0/Adam_1"
  input: "Adam/update_entropy_bottleneck/matrix_0/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_entropy_bottleneck/matrix_0/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/entropy_bottleneck/Softplus_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_0/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_0/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_0/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/bias_0"
  input: "entropy_bottleneck/bias_0/Adam"
  input: "entropy_bottleneck/bias_0/Adam_1"
  input: "Adam/update_entropy_bottleneck/bias_0/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_entropy_bottleneck/bias_0/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/factor_0/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/factor_0/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/factor_0/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/factor_0"
  input: "entropy_bottleneck/factor_0/Adam"
  input: "entropy_bottleneck/factor_0/Adam_1"
  input: "Adam/update_entropy_bottleneck/factor_0/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_entropy_bottleneck/factor_0/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/entropy_bottleneck/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_1/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_1/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/matrix_1"
  input: "entropy_bottleneck/matrix_1/Adam"
  input: "entropy_bottleneck/matrix_1/Adam_1"
  input: "Adam/update_entropy_bottleneck/matrix_1/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_entropy_bottleneck/matrix_1/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/entropy_bottleneck/Softplus_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_1/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_1/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/bias_1"
  input: "entropy_bottleneck/bias_1/Adam"
  input: "entropy_bottleneck/bias_1/Adam_1"
  input: "Adam/update_entropy_bottleneck/bias_1/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_entropy_bottleneck/bias_1/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/factor_1/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/factor_1/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/factor_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/factor_1"
  input: "entropy_bottleneck/factor_1/Adam"
  input: "entropy_bottleneck/factor_1/Adam_1"
  input: "Adam/update_entropy_bottleneck/factor_1/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_entropy_bottleneck/factor_1/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/entropy_bottleneck/Tanh_1_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_2/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_2/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_2/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/matrix_2"
  input: "entropy_bottleneck/matrix_2/Adam"
  input: "entropy_bottleneck/matrix_2/Adam_1"
  input: "Adam/update_entropy_bottleneck/matrix_2/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_entropy_bottleneck/matrix_2/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/entropy_bottleneck/Softplus_2_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_2/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_2/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_2/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/bias_2"
  input: "entropy_bottleneck/bias_2/Adam"
  input: "entropy_bottleneck/bias_2/Adam_1"
  input: "Adam/update_entropy_bottleneck/bias_2/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_entropy_bottleneck/bias_2/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/factor_2/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/factor_2/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/factor_2/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/factor_2"
  input: "entropy_bottleneck/factor_2/Adam"
  input: "entropy_bottleneck/factor_2/Adam_1"
  input: "Adam/update_entropy_bottleneck/factor_2/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_entropy_bottleneck/factor_2/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/entropy_bottleneck/Tanh_2_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/factor_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_3/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_3/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/matrix_3/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/matrix_3"
  input: "entropy_bottleneck/matrix_3/Adam"
  input: "entropy_bottleneck/matrix_3/Adam_1"
  input: "Adam/update_entropy_bottleneck/matrix_3/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_entropy_bottleneck/matrix_3/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/entropy_bottleneck/Softplus_3_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/matrix_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_3/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_3/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_entropy_bottleneck/bias_3/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/bias_3"
  input: "entropy_bottleneck/bias_3/Adam"
  input: "entropy_bottleneck/bias_3/Adam_1"
  input: "Adam/update_entropy_bottleneck/bias_3/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_entropy_bottleneck/bias_3/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/bias_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "synthesis_transform/layer_0/kernel_rdft"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
  input: "Adam/update_synthesis_transform/layer_0/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_synthesis_transform/layer_0/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/synthesis_transform/layer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/kernel_rdft"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "synthesis_transform/layer_0/bias"
  input: "synthesis_transform/layer_0/bias/Adam"
  input: "synthesis_transform/layer_0/bias/Adam_1"
  input: "Adam/update_synthesis_transform/layer_0/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_synthesis_transform/layer_0/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/synthesis_transform/layer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/igdn_0/reparam_beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/igdn_0/reparam_beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/igdn_0/reparam_beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
  input: "Adam/update_synthesis_transform/layer_0/igdn_0/reparam_beta/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_synthesis_transform/layer_0/igdn_0/reparam_beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/igdn_0/reparam_gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/igdn_0/reparam_gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_0/igdn_0/reparam_gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
  input: "Adam/update_synthesis_transform/layer_0/igdn_0/reparam_gamma/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_synthesis_transform/layer_0/igdn_0/reparam_gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/synthesis_transform/layer_0/igdn_0/LowerBound_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_0/igdn_0/reparam_gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "synthesis_transform/layer_1/kernel_rdft"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
  input: "Adam/update_synthesis_transform/layer_1/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_synthesis_transform/layer_1/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/synthesis_transform/layer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/kernel_rdft"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "synthesis_transform/layer_1/bias"
  input: "synthesis_transform/layer_1/bias/Adam"
  input: "synthesis_transform/layer_1/bias/Adam_1"
  input: "Adam/update_synthesis_transform/layer_1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_synthesis_transform/layer_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/synthesis_transform/layer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/igdn_1/reparam_beta/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/igdn_1/reparam_beta/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/igdn_1/reparam_beta/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
  input: "Adam/update_synthesis_transform/layer_1/igdn_1/reparam_beta/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_synthesis_transform/layer_1/igdn_1/reparam_beta/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/igdn_1/reparam_gamma/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/igdn_1/reparam_gamma/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_1/igdn_1/reparam_gamma/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
  input: "Adam/update_synthesis_transform/layer_1/igdn_1/reparam_gamma/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_synthesis_transform/layer_1/igdn_1/reparam_gamma/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/synthesis_transform/layer_1/igdn_1/LowerBound_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_1/igdn_1/reparam_gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_2/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_2/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "synthesis_transform/layer_2/kernel_rdft"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
  input: "Adam/update_synthesis_transform/layer_2/kernel_rdft/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_synthesis_transform/layer_2/kernel_rdft/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/synthesis_transform/layer_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/kernel_rdft"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_synthesis_transform/layer_2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "synthesis_transform/layer_2/bias"
  input: "synthesis_transform/layer_2/bias/Adam"
  input: "synthesis_transform/layer_2/bias/Adam_1"
  input: "Adam/update_synthesis_transform/layer_2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_synthesis_transform/layer_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/synthesis_transform/layer_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@synthesis_transform/layer_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/update_analysis_transform/layer_0/bias/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/gdn_0/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/gdn_0/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/bias/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/gdn_1/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/gdn_1/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_3/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_3/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/igdn_0/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/igdn_0/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/igdn_1/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/igdn_1/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_2/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/update_analysis_transform/layer_0/bias/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/gdn_0/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/gdn_0/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/bias/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/gdn_1/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/gdn_1/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_3/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_3/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/igdn_0/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/igdn_0/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/igdn_1/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/igdn_1/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_2/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/update_analysis_transform/layer_0/bias/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/gdn_0/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/gdn_0/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/bias/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/gdn_1/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/gdn_1/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_3/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_3/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/igdn_0/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/igdn_0/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/igdn_1/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/igdn_1/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_2/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "Adam/ReadVariableOp_2"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_analysis_transform/layer_0/bias/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/gdn_0/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/gdn_0/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/bias/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/gdn_1/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/gdn_1/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_3/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_3/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/igdn_0/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/igdn_0/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/igdn_1/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/igdn_1/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_2/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@analysis_transform/layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_analysis_transform/layer_0/bias/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/gdn_0/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/gdn_0/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/bias/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/gdn_1/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/gdn_1/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_analysis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/bias_3/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/factor_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_0/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_1/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_2/ResourceApplyAdam"
  input: "^Adam/update_entropy_bottleneck/matrix_3/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/igdn_0/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/igdn_0/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_0/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/igdn_1/reparam_beta/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/igdn_1/reparam_gamma/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_1/kernel_rdft/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_2/bias/ResourceApplyAdam"
  input: "^Adam/update_synthesis_transform/layer_2/kernel_rdft/ResourceApplyAdam"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/Fill"
  op: "Fill"
  input: "gradients_1/Shape"
  input: "gradients_1/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/Fill"
  input: "gradients_1/entropy_bottleneck/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/entropy_bottleneck/Sum_grad/Reshape"
  input: "gradients_1/entropy_bottleneck/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/Abs_grad/Sign"
  op: "Sign"
  input: "entropy_bottleneck/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/Abs_grad/mul"
  op: "Mul"
  input: "gradients_1/entropy_bottleneck/Sum_grad/Tile"
  input: "gradients_1/entropy_bottleneck/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/sub_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/sub_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/entropy_bottleneck/sub_grad/BroadcastGradientArgs/s0"
  input: "gradients_1/entropy_bottleneck/sub_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/entropy_bottleneck/Abs_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/sub_grad/Sum"
  op: "Sum"
  input: "gradients_1/entropy_bottleneck/sub_grad/Neg"
  input: "gradients_1/entropy_bottleneck/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/sub_grad/Sum"
  input: "gradients_1/entropy_bottleneck/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/Abs_grad/mul"
  input: "^gradients_1/entropy_bottleneck/sub_grad/Reshape"
}
node {
  name: "gradients_1/entropy_bottleneck/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/Abs_grad/mul"
  input: "^gradients_1/entropy_bottleneck/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/Abs_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/sub_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_6_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_6_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/entropy_bottleneck/add_6_grad/BroadcastGradientArgs/s0"
  input: "gradients_1/entropy_bottleneck/add_6_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_6_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_6_grad/Sum"
  op: "Sum"
  input: "gradients_1/entropy_bottleneck/sub_grad/tuple/control_dependency"
  input: "gradients_1/entropy_bottleneck/add_6_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_6_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/add_6_grad/Sum"
  input: "gradients_1/entropy_bottleneck/add_6_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/add_6_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/sub_grad/tuple/control_dependency"
}
node {
  name: "gradients_1/entropy_bottleneck/add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/sub_grad/tuple/control_dependency"
  input: "^gradients_1/entropy_bottleneck/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/Abs_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/add_6_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients_1/entropy_bottleneck/add_6_grad/tuple/control_dependency"
  input: "entropy_bottleneck/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_9"
  input: "gradients_1/entropy_bottleneck/add_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/Shape"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice/stack"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice/stack_1"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/Shape_1"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice_1/stack"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice_1/stack_1"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/Sum"
  op: "Sum"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/MatMul"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/Sum"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/MatMul_1"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/Sum_1"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape_1"
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape_1"
  input: "^gradients_1/entropy_bottleneck/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/MatMul_3_grad/tuple/control_dependency_1"
}
node {
  name: "gradients_1/entropy_bottleneck/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/tuple/control_dependency_1"
  input: "^gradients_1/entropy_bottleneck/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_3_grad/tuple/control_dependency_1"
  input: "^gradients_1/entropy_bottleneck/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/entropy_bottleneck/mul_2_grad/BroadcastGradientArgs/s0"
  input: "gradients_1/entropy_bottleneck/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients_1/entropy_bottleneck/add_5_grad/tuple/control_dependency_1"
  input: "entropy_bottleneck/Tanh_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/entropy_bottleneck/mul_2_grad/Mul"
  input: "gradients_1/entropy_bottleneck/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/mul_2_grad/Sum"
  input: "gradients_1/entropy_bottleneck/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/Mul_1"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_8"
  input: "gradients_1/entropy_bottleneck/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/mul_2_grad/Mul_1"
  input: "^gradients_1/entropy_bottleneck/mul_2_grad/Reshape"
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/mul_2_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/mul_2_grad/Mul_1"
  input: "^gradients_1/entropy_bottleneck/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/Tanh_5_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh_5"
  input: "gradients_1/entropy_bottleneck/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN"
  op: "AddN"
  input: "gradients_1/entropy_bottleneck/add_5_grad/tuple/control_dependency"
  input: "gradients_1/entropy_bottleneck/Tanh_5_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_4_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_4_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/entropy_bottleneck/add_4_grad/BroadcastGradientArgs/s0"
  input: "gradients_1/entropy_bottleneck/add_4_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_4_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_4_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN"
  input: "gradients_1/entropy_bottleneck/add_4_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/add_4_grad/Sum"
  input: "gradients_1/entropy_bottleneck/add_4_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/AddN"
  input: "^gradients_1/entropy_bottleneck/add_4_grad/Reshape"
}
node {
  name: "gradients_1/entropy_bottleneck/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/AddN"
  input: "^gradients_1/entropy_bottleneck/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/add_4_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients_1/entropy_bottleneck/add_4_grad/tuple/control_dependency"
  input: "entropy_bottleneck/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_6"
  input: "gradients_1/entropy_bottleneck/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul"
  input: "^gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul_1"
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul"
  input: "^gradients_1/entropy_bottleneck/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul_1"
  input: "^gradients_1/entropy_bottleneck/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/MatMul_2_grad/tuple/control_dependency_1"
}
node {
  name: "gradients_1/entropy_bottleneck/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_2_grad/tuple/control_dependency_1"
  input: "^gradients_1/entropy_bottleneck/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_2_grad/tuple/control_dependency_1"
  input: "^gradients_1/entropy_bottleneck/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/entropy_bottleneck/add_3_grad/tuple/control_dependency_1"
  input: "entropy_bottleneck/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/entropy_bottleneck/mul_1_grad/Mul"
  input: "gradients_1/entropy_bottleneck/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/mul_1_grad/Sum"
  input: "gradients_1/entropy_bottleneck/mul_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_1_grad/Mul_1"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_5"
  input: "gradients_1/entropy_bottleneck/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/mul_1_grad/Mul_1"
  input: "^gradients_1/entropy_bottleneck/mul_1_grad/Reshape"
}
node {
  name: "gradients_1/entropy_bottleneck/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/mul_1_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/mul_1_grad/Mul_1"
  input: "^gradients_1/entropy_bottleneck/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/Tanh_4_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh_4"
  input: "gradients_1/entropy_bottleneck/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_1"
  op: "AddN"
  input: "gradients_1/entropy_bottleneck/add_3_grad/tuple/control_dependency"
  input: "gradients_1/entropy_bottleneck/Tanh_4_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_1"
  input: "gradients_1/entropy_bottleneck/add_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/add_2_grad/Sum"
  input: "gradients_1/entropy_bottleneck/add_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/AddN_1"
  input: "^gradients_1/entropy_bottleneck/add_2_grad/Reshape"
}
node {
  name: "gradients_1/entropy_bottleneck/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/AddN_1"
  input: "^gradients_1/entropy_bottleneck/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_2_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/add_2_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients_1/entropy_bottleneck/add_2_grad/tuple/control_dependency"
  input: "entropy_bottleneck/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient_3"
  input: "gradients_1/entropy_bottleneck/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul"
  input: "^gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul"
  input: "^gradients_1/entropy_bottleneck/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul_1"
  input: "^gradients_1/entropy_bottleneck/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/MatMul_1_grad/tuple/control_dependency_1"
}
node {
  name: "gradients_1/entropy_bottleneck/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/entropy_bottleneck/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_1_grad/tuple/control_dependency_1"
  input: "^gradients_1/entropy_bottleneck/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/entropy_bottleneck/add_1_grad/tuple/control_dependency_1"
  input: "entropy_bottleneck/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/entropy_bottleneck/mul_grad/Mul"
  input: "gradients_1/entropy_bottleneck/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/mul_grad/Sum"
  input: "gradients_1/entropy_bottleneck/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_grad/Mul_1"
  op: "Mul"
  input: "entropy_bottleneck/StopGradient_2"
  input: "gradients_1/entropy_bottleneck/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/mul_grad/Mul_1"
  input: "^gradients_1/entropy_bottleneck/mul_grad/Reshape"
}
node {
  name: "gradients_1/entropy_bottleneck/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/mul_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/mul_grad/Mul_1"
  input: "^gradients_1/entropy_bottleneck/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/Tanh_3_grad/TanhGrad"
  op: "TanhGrad"
  input: "entropy_bottleneck/Tanh_3"
  input: "gradients_1/entropy_bottleneck/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_2"
  op: "AddN"
  input: "gradients_1/entropy_bottleneck/add_1_grad/tuple/control_dependency"
  input: "gradients_1/entropy_bottleneck/Tanh_3_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_2"
  input: "gradients_1/entropy_bottleneck/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/add_grad/Sum"
  input: "gradients_1/entropy_bottleneck/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/AddN_2"
  input: "^gradients_1/entropy_bottleneck/add_grad/Reshape"
}
node {
  name: "gradients_1/entropy_bottleneck/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/AddN_2"
  input: "^gradients_1/entropy_bottleneck/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/add_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients_1/entropy_bottleneck/add_grad/tuple/control_dependency"
  input: "entropy_bottleneck/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "entropy_bottleneck/StopGradient"
  input: "gradients_1/entropy_bottleneck/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/Shape"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice/stack"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice/stack_1"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/Shape_1"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice_1/stack"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/MatMul"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/Sum"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/MatMul_1"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/Sum_1"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/entropy_bottleneck/MatMul_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/MatMul_grad/Reshape_1"
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/Reshape"
  input: "^gradients_1/entropy_bottleneck/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/entropy_bottleneck/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/Reshape_1"
  input: "^gradients_1/entropy_bottleneck/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/entropy_bottleneck/MatMul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta1_power_1"
    }
  }
}
node {
  name: "beta1_power_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta1_power_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power_1/Assign"
  op: "AssignVariableOp"
  input: "beta1_power_1"
  input: "beta1_power_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta2_power_1"
    }
  }
}
node {
  name: "beta2_power_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta2_power_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power_1/Assign"
  op: "AssignVariableOp"
  input: "beta2_power_1"
  input: "beta2_power_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/quantiles/Adam"
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantiles/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Adam/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/quantiles/Adam"
  input: "entropy_bottleneck/quantiles/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/quantiles/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "entropy_bottleneck/quantiles/Adam_1"
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantiles/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/quantiles/Adam_1"
  input: "entropy_bottleneck/quantiles/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "entropy_bottleneck/quantiles/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "entropy_bottleneck/quantiles/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Adam_1/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam_1/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam_1/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam_1/update_entropy_bottleneck/quantiles/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_entropy_bottleneck/quantiles/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_entropy_bottleneck/quantiles/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "entropy_bottleneck/quantiles"
  input: "entropy_bottleneck/quantiles/Adam"
  input: "entropy_bottleneck/quantiles/Adam_1"
  input: "Adam_1/update_entropy_bottleneck/quantiles/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_entropy_bottleneck/quantiles/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_1/entropy_bottleneck/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  input: "^Adam_1/update_entropy_bottleneck/quantiles/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/mul"
  op: "Mul"
  input: "Adam_1/ReadVariableOp"
  input: "Adam_1/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam_1/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power_1"
  input: "Adam_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  input: "^Adam_1/AssignVariableOp"
  input: "^Adam_1/update_entropy_bottleneck/quantiles/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  input: "^Adam_1/update_entropy_bottleneck/quantiles/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/mul_1"
  op: "Mul"
  input: "Adam_1/ReadVariableOp_2"
  input: "Adam_1/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam_1/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power_1"
  input: "Adam_1/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  input: "^Adam_1/AssignVariableOp_1"
  input: "^Adam_1/update_entropy_bottleneck/quantiles/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@entropy_bottleneck/quantiles"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1"
  op: "NoOp"
  input: "^Adam_1/AssignVariableOp"
  input: "^Adam_1/AssignVariableOp_1"
  input: "^Adam_1/update_entropy_bottleneck/quantiles/ResourceApplyAdam"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^Adam"
  input: "^Adam_1"
  input: "^entropy_bottleneck/group_deps"
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bpp/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bpp"
      }
    }
  }
}
node {
  name: "bpp"
  op: "ScalarSummary"
  input: "bpp/tags"
  input: "truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mse/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mse"
      }
    }
  }
}
node {
  name: "mse"
  op: "ScalarSummary"
  input: "mse/tags"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "IteratorGetNext"
  input: "mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Round"
  op: "Round"
  input: "mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "saturate_cast/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "saturate_cast/Maximum"
  op: "Maximum"
  input: "Round"
  input: "saturate_cast/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "saturate_cast/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "saturate_cast/Minimum"
  op: "Minimum"
  input: "saturate_cast/Maximum"
  input: "saturate_cast/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "saturate_cast"
  op: "Cast"
  input: "saturate_cast/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "original/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "original"
      }
    }
  }
}
node {
  name: "original"
  op: "ImageSummary"
  input: "original/tag"
  input: "saturate_cast"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "mul_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "synthesis_transform/layer_2/BiasAdd"
  input: "mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Round_1"
  op: "Round"
  input: "mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "saturate_cast_1/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "saturate_cast_1/Maximum"
  op: "Maximum"
  input: "Round_1"
  input: "saturate_cast_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "saturate_cast_1/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "saturate_cast_1/Minimum"
  op: "Minimum"
  input: "saturate_cast_1/Maximum"
  input: "saturate_cast_1/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "saturate_cast_1"
  op: "Cast"
  input: "saturate_cast_1/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "reconstruction/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "reconstruction"
      }
    }
  }
}
node {
  name: "reconstruction"
  op: "ImageSummary"
  input: "reconstruction/tag"
  input: "saturate_cast_1"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "AddV2"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^analysis_transform/layer_0/bias/Adam/Assign"
  input: "^analysis_transform/layer_0/bias/Adam_1/Assign"
  input: "^analysis_transform/layer_0/bias/Assign"
  input: "^analysis_transform/layer_0/gdn_0/reparam_beta/Adam/Assign"
  input: "^analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1/Assign"
  input: "^analysis_transform/layer_0/gdn_0/reparam_beta/Assign"
  input: "^analysis_transform/layer_0/gdn_0/reparam_gamma/Adam/Assign"
  input: "^analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1/Assign"
  input: "^analysis_transform/layer_0/gdn_0/reparam_gamma/Assign"
  input: "^analysis_transform/layer_0/kernel_rdft/Adam/Assign"
  input: "^analysis_transform/layer_0/kernel_rdft/Adam_1/Assign"
  input: "^analysis_transform/layer_0/kernel_rdft/Assign"
  input: "^analysis_transform/layer_1/bias/Adam/Assign"
  input: "^analysis_transform/layer_1/bias/Adam_1/Assign"
  input: "^analysis_transform/layer_1/bias/Assign"
  input: "^analysis_transform/layer_1/gdn_1/reparam_beta/Adam/Assign"
  input: "^analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1/Assign"
  input: "^analysis_transform/layer_1/gdn_1/reparam_beta/Assign"
  input: "^analysis_transform/layer_1/gdn_1/reparam_gamma/Adam/Assign"
  input: "^analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1/Assign"
  input: "^analysis_transform/layer_1/gdn_1/reparam_gamma/Assign"
  input: "^analysis_transform/layer_1/kernel_rdft/Adam/Assign"
  input: "^analysis_transform/layer_1/kernel_rdft/Adam_1/Assign"
  input: "^analysis_transform/layer_1/kernel_rdft/Assign"
  input: "^analysis_transform/layer_2/kernel_rdft/Adam/Assign"
  input: "^analysis_transform/layer_2/kernel_rdft/Adam_1/Assign"
  input: "^analysis_transform/layer_2/kernel_rdft/Assign"
  input: "^beta1_power/Assign"
  input: "^beta1_power_1/Assign"
  input: "^beta2_power/Assign"
  input: "^beta2_power_1/Assign"
  input: "^entropy_bottleneck/bias_0/Adam/Assign"
  input: "^entropy_bottleneck/bias_0/Adam_1/Assign"
  input: "^entropy_bottleneck/bias_0/Assign"
  input: "^entropy_bottleneck/bias_1/Adam/Assign"
  input: "^entropy_bottleneck/bias_1/Adam_1/Assign"
  input: "^entropy_bottleneck/bias_1/Assign"
  input: "^entropy_bottleneck/bias_2/Adam/Assign"
  input: "^entropy_bottleneck/bias_2/Adam_1/Assign"
  input: "^entropy_bottleneck/bias_2/Assign"
  input: "^entropy_bottleneck/bias_3/Adam/Assign"
  input: "^entropy_bottleneck/bias_3/Adam_1/Assign"
  input: "^entropy_bottleneck/bias_3/Assign"
  input: "^entropy_bottleneck/cdf_length/Assign"
  input: "^entropy_bottleneck/factor_0/Adam/Assign"
  input: "^entropy_bottleneck/factor_0/Adam_1/Assign"
  input: "^entropy_bottleneck/factor_0/Assign"
  input: "^entropy_bottleneck/factor_1/Adam/Assign"
  input: "^entropy_bottleneck/factor_1/Adam_1/Assign"
  input: "^entropy_bottleneck/factor_1/Assign"
  input: "^entropy_bottleneck/factor_2/Adam/Assign"
  input: "^entropy_bottleneck/factor_2/Adam_1/Assign"
  input: "^entropy_bottleneck/factor_2/Assign"
  input: "^entropy_bottleneck/matrix_0/Adam/Assign"
  input: "^entropy_bottleneck/matrix_0/Adam_1/Assign"
  input: "^entropy_bottleneck/matrix_0/Assign"
  input: "^entropy_bottleneck/matrix_1/Adam/Assign"
  input: "^entropy_bottleneck/matrix_1/Adam_1/Assign"
  input: "^entropy_bottleneck/matrix_1/Assign"
  input: "^entropy_bottleneck/matrix_2/Adam/Assign"
  input: "^entropy_bottleneck/matrix_2/Adam_1/Assign"
  input: "^entropy_bottleneck/matrix_2/Assign"
  input: "^entropy_bottleneck/matrix_3/Adam/Assign"
  input: "^entropy_bottleneck/matrix_3/Adam_1/Assign"
  input: "^entropy_bottleneck/matrix_3/Assign"
  input: "^entropy_bottleneck/quantiles/Adam/Assign"
  input: "^entropy_bottleneck/quantiles/Adam_1/Assign"
  input: "^entropy_bottleneck/quantiles/Assign"
  input: "^entropy_bottleneck/quantized_cdf/Assign"
  input: "^global_step/Assign"
  input: "^synthesis_transform/layer_0/bias/Adam/Assign"
  input: "^synthesis_transform/layer_0/bias/Adam_1/Assign"
  input: "^synthesis_transform/layer_0/bias/Assign"
  input: "^synthesis_transform/layer_0/igdn_0/reparam_beta/Adam/Assign"
  input: "^synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1/Assign"
  input: "^synthesis_transform/layer_0/igdn_0/reparam_beta/Assign"
  input: "^synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam/Assign"
  input: "^synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1/Assign"
  input: "^synthesis_transform/layer_0/igdn_0/reparam_gamma/Assign"
  input: "^synthesis_transform/layer_0/kernel_rdft/Adam/Assign"
  input: "^synthesis_transform/layer_0/kernel_rdft/Adam_1/Assign"
  input: "^synthesis_transform/layer_0/kernel_rdft/Assign"
  input: "^synthesis_transform/layer_1/bias/Adam/Assign"
  input: "^synthesis_transform/layer_1/bias/Adam_1/Assign"
  input: "^synthesis_transform/layer_1/bias/Assign"
  input: "^synthesis_transform/layer_1/igdn_1/reparam_beta/Adam/Assign"
  input: "^synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1/Assign"
  input: "^synthesis_transform/layer_1/igdn_1/reparam_beta/Assign"
  input: "^synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam/Assign"
  input: "^synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1/Assign"
  input: "^synthesis_transform/layer_1/igdn_1/reparam_gamma/Assign"
  input: "^synthesis_transform/layer_1/kernel_rdft/Adam/Assign"
  input: "^synthesis_transform/layer_1/kernel_rdft/Adam_1/Assign"
  input: "^synthesis_transform/layer_1/kernel_rdft/Assign"
  input: "^synthesis_transform/layer_2/bias/Adam/Assign"
  input: "^synthesis_transform/layer_2/bias/Adam_1/Assign"
  input: "^synthesis_transform/layer_2/bias/Assign"
  input: "^synthesis_transform/layer_2/kernel_rdft/Adam/Assign"
  input: "^synthesis_transform/layer_2/kernel_rdft/Adam_1/Assign"
  input: "^synthesis_transform/layer_2/kernel_rdft/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_2/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantiles"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantized_cdf"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/cdf_length"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_0/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_0/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_0/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_0/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_0/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_0/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantiles/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantiles/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  input: "report_uninitialized_variables/VarIsInitializedOp_38"
  input: "report_uninitialized_variables/VarIsInitializedOp_39"
  input: "report_uninitialized_variables/VarIsInitializedOp_40"
  input: "report_uninitialized_variables/VarIsInitializedOp_41"
  input: "report_uninitialized_variables/VarIsInitializedOp_42"
  input: "report_uninitialized_variables/VarIsInitializedOp_43"
  input: "report_uninitialized_variables/VarIsInitializedOp_44"
  input: "report_uninitialized_variables/VarIsInitializedOp_45"
  input: "report_uninitialized_variables/VarIsInitializedOp_46"
  input: "report_uninitialized_variables/VarIsInitializedOp_47"
  input: "report_uninitialized_variables/VarIsInitializedOp_48"
  input: "report_uninitialized_variables/VarIsInitializedOp_49"
  input: "report_uninitialized_variables/VarIsInitializedOp_50"
  input: "report_uninitialized_variables/VarIsInitializedOp_51"
  input: "report_uninitialized_variables/VarIsInitializedOp_52"
  input: "report_uninitialized_variables/VarIsInitializedOp_53"
  input: "report_uninitialized_variables/VarIsInitializedOp_54"
  input: "report_uninitialized_variables/VarIsInitializedOp_55"
  input: "report_uninitialized_variables/VarIsInitializedOp_56"
  input: "report_uninitialized_variables/VarIsInitializedOp_57"
  input: "report_uninitialized_variables/VarIsInitializedOp_58"
  input: "report_uninitialized_variables/VarIsInitializedOp_59"
  input: "report_uninitialized_variables/VarIsInitializedOp_60"
  input: "report_uninitialized_variables/VarIsInitializedOp_61"
  input: "report_uninitialized_variables/VarIsInitializedOp_62"
  input: "report_uninitialized_variables/VarIsInitializedOp_63"
  input: "report_uninitialized_variables/VarIsInitializedOp_64"
  input: "report_uninitialized_variables/VarIsInitializedOp_65"
  input: "report_uninitialized_variables/VarIsInitializedOp_66"
  input: "report_uninitialized_variables/VarIsInitializedOp_67"
  input: "report_uninitialized_variables/VarIsInitializedOp_68"
  input: "report_uninitialized_variables/VarIsInitializedOp_69"
  input: "report_uninitialized_variables/VarIsInitializedOp_70"
  input: "report_uninitialized_variables/VarIsInitializedOp_71"
  input: "report_uninitialized_variables/VarIsInitializedOp_72"
  input: "report_uninitialized_variables/VarIsInitializedOp_73"
  input: "report_uninitialized_variables/VarIsInitializedOp_74"
  input: "report_uninitialized_variables/VarIsInitializedOp_75"
  input: "report_uninitialized_variables/VarIsInitializedOp_76"
  input: "report_uninitialized_variables/VarIsInitializedOp_77"
  input: "report_uninitialized_variables/VarIsInitializedOp_78"
  input: "report_uninitialized_variables/VarIsInitializedOp_79"
  input: "report_uninitialized_variables/VarIsInitializedOp_80"
  input: "report_uninitialized_variables/VarIsInitializedOp_81"
  input: "report_uninitialized_variables/VarIsInitializedOp_82"
  input: "report_uninitialized_variables/VarIsInitializedOp_83"
  input: "report_uninitialized_variables/VarIsInitializedOp_84"
  input: "report_uninitialized_variables/VarIsInitializedOp_85"
  input: "report_uninitialized_variables/VarIsInitializedOp_86"
  input: "report_uninitialized_variables/VarIsInitializedOp_87"
  input: "report_uninitialized_variables/VarIsInitializedOp_88"
  input: "report_uninitialized_variables/VarIsInitializedOp_89"
  input: "report_uninitialized_variables/VarIsInitializedOp_90"
  input: "report_uninitialized_variables/VarIsInitializedOp_91"
  input: "report_uninitialized_variables/VarIsInitializedOp_92"
  input: "report_uninitialized_variables/VarIsInitializedOp_93"
  input: "report_uninitialized_variables/VarIsInitializedOp_94"
  input: "report_uninitialized_variables/VarIsInitializedOp_95"
  input: "report_uninitialized_variables/VarIsInitializedOp_96"
  input: "report_uninitialized_variables/VarIsInitializedOp_97"
  input: "report_uninitialized_variables/VarIsInitializedOp_98"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 100
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 100
          }
        }
        string_val: "analysis_transform/layer_0/kernel_rdft"
        string_val: "analysis_transform/layer_0/bias"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma"
        string_val: "analysis_transform/layer_1/kernel_rdft"
        string_val: "analysis_transform/layer_1/bias"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma"
        string_val: "analysis_transform/layer_2/kernel_rdft"
        string_val: "entropy_bottleneck/matrix_0"
        string_val: "entropy_bottleneck/bias_0"
        string_val: "entropy_bottleneck/factor_0"
        string_val: "entropy_bottleneck/matrix_1"
        string_val: "entropy_bottleneck/bias_1"
        string_val: "entropy_bottleneck/factor_1"
        string_val: "entropy_bottleneck/matrix_2"
        string_val: "entropy_bottleneck/bias_2"
        string_val: "entropy_bottleneck/factor_2"
        string_val: "entropy_bottleneck/matrix_3"
        string_val: "entropy_bottleneck/bias_3"
        string_val: "entropy_bottleneck/quantiles"
        string_val: "entropy_bottleneck/quantized_cdf"
        string_val: "entropy_bottleneck/cdf_length"
        string_val: "synthesis_transform/layer_0/kernel_rdft"
        string_val: "synthesis_transform/layer_0/bias"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
        string_val: "synthesis_transform/layer_1/kernel_rdft"
        string_val: "synthesis_transform/layer_1/bias"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
        string_val: "synthesis_transform/layer_2/kernel_rdft"
        string_val: "synthesis_transform/layer_2/bias"
        string_val: "global_step"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "analysis_transform/layer_0/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_0/kernel_rdft/Adam_1"
        string_val: "analysis_transform/layer_0/bias/Adam"
        string_val: "analysis_transform/layer_0/bias/Adam_1"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
        string_val: "analysis_transform/layer_1/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_1/kernel_rdft/Adam_1"
        string_val: "analysis_transform/layer_1/bias/Adam"
        string_val: "analysis_transform/layer_1/bias/Adam_1"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
        string_val: "analysis_transform/layer_2/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_2/kernel_rdft/Adam_1"
        string_val: "entropy_bottleneck/matrix_0/Adam"
        string_val: "entropy_bottleneck/matrix_0/Adam_1"
        string_val: "entropy_bottleneck/bias_0/Adam"
        string_val: "entropy_bottleneck/bias_0/Adam_1"
        string_val: "entropy_bottleneck/factor_0/Adam"
        string_val: "entropy_bottleneck/factor_0/Adam_1"
        string_val: "entropy_bottleneck/matrix_1/Adam"
        string_val: "entropy_bottleneck/matrix_1/Adam_1"
        string_val: "entropy_bottleneck/bias_1/Adam"
        string_val: "entropy_bottleneck/bias_1/Adam_1"
        string_val: "entropy_bottleneck/factor_1/Adam"
        string_val: "entropy_bottleneck/factor_1/Adam_1"
        string_val: "entropy_bottleneck/matrix_2/Adam"
        string_val: "entropy_bottleneck/matrix_2/Adam_1"
        string_val: "entropy_bottleneck/bias_2/Adam"
        string_val: "entropy_bottleneck/bias_2/Adam_1"
        string_val: "entropy_bottleneck/factor_2/Adam"
        string_val: "entropy_bottleneck/factor_2/Adam_1"
        string_val: "entropy_bottleneck/matrix_3/Adam"
        string_val: "entropy_bottleneck/matrix_3/Adam_1"
        string_val: "entropy_bottleneck/bias_3/Adam"
        string_val: "entropy_bottleneck/bias_3/Adam_1"
        string_val: "synthesis_transform/layer_0/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
        string_val: "synthesis_transform/layer_0/bias/Adam"
        string_val: "synthesis_transform/layer_0/bias/Adam_1"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
        string_val: "synthesis_transform/layer_1/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
        string_val: "synthesis_transform/layer_1/bias/Adam"
        string_val: "synthesis_transform/layer_1/bias/Adam_1"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
        string_val: "synthesis_transform/layer_2/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
        string_val: "synthesis_transform/layer_2/bias/Adam"
        string_val: "synthesis_transform/layer_2/bias/Adam_1"
        string_val: "beta1_power_1"
        string_val: "beta2_power_1"
        string_val: "entropy_bottleneck/quantiles/Adam"
        string_val: "entropy_bottleneck/quantiles/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_2/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantiles"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantized_cdf"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/cdf_length"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/kernel_rdft"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_0/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_0/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_0/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_0/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_0/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_0/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_2/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/factor_2/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/matrix_3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_3/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/bias_3/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "synthesis_transform/layer_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantiles/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "entropy_bottleneck/quantiles/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_77"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_78"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_79"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_80"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_81"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_82"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_83"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_84"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_85"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_86"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_87"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_88"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_89"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_90"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_91"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_92"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_93"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_94"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_95"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_96"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_97"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_98"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 100
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 100
          }
        }
        string_val: "analysis_transform/layer_0/kernel_rdft"
        string_val: "analysis_transform/layer_0/bias"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma"
        string_val: "analysis_transform/layer_1/kernel_rdft"
        string_val: "analysis_transform/layer_1/bias"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma"
        string_val: "analysis_transform/layer_2/kernel_rdft"
        string_val: "entropy_bottleneck/matrix_0"
        string_val: "entropy_bottleneck/bias_0"
        string_val: "entropy_bottleneck/factor_0"
        string_val: "entropy_bottleneck/matrix_1"
        string_val: "entropy_bottleneck/bias_1"
        string_val: "entropy_bottleneck/factor_1"
        string_val: "entropy_bottleneck/matrix_2"
        string_val: "entropy_bottleneck/bias_2"
        string_val: "entropy_bottleneck/factor_2"
        string_val: "entropy_bottleneck/matrix_3"
        string_val: "entropy_bottleneck/bias_3"
        string_val: "entropy_bottleneck/quantiles"
        string_val: "entropy_bottleneck/quantized_cdf"
        string_val: "entropy_bottleneck/cdf_length"
        string_val: "synthesis_transform/layer_0/kernel_rdft"
        string_val: "synthesis_transform/layer_0/bias"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
        string_val: "synthesis_transform/layer_1/kernel_rdft"
        string_val: "synthesis_transform/layer_1/bias"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
        string_val: "synthesis_transform/layer_2/kernel_rdft"
        string_val: "synthesis_transform/layer_2/bias"
        string_val: "global_step"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "analysis_transform/layer_0/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_0/kernel_rdft/Adam_1"
        string_val: "analysis_transform/layer_0/bias/Adam"
        string_val: "analysis_transform/layer_0/bias/Adam_1"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
        string_val: "analysis_transform/layer_1/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_1/kernel_rdft/Adam_1"
        string_val: "analysis_transform/layer_1/bias/Adam"
        string_val: "analysis_transform/layer_1/bias/Adam_1"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
        string_val: "analysis_transform/layer_2/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_2/kernel_rdft/Adam_1"
        string_val: "entropy_bottleneck/matrix_0/Adam"
        string_val: "entropy_bottleneck/matrix_0/Adam_1"
        string_val: "entropy_bottleneck/bias_0/Adam"
        string_val: "entropy_bottleneck/bias_0/Adam_1"
        string_val: "entropy_bottleneck/factor_0/Adam"
        string_val: "entropy_bottleneck/factor_0/Adam_1"
        string_val: "entropy_bottleneck/matrix_1/Adam"
        string_val: "entropy_bottleneck/matrix_1/Adam_1"
        string_val: "entropy_bottleneck/bias_1/Adam"
        string_val: "entropy_bottleneck/bias_1/Adam_1"
        string_val: "entropy_bottleneck/factor_1/Adam"
        string_val: "entropy_bottleneck/factor_1/Adam_1"
        string_val: "entropy_bottleneck/matrix_2/Adam"
        string_val: "entropy_bottleneck/matrix_2/Adam_1"
        string_val: "entropy_bottleneck/bias_2/Adam"
        string_val: "entropy_bottleneck/bias_2/Adam_1"
        string_val: "entropy_bottleneck/factor_2/Adam"
        string_val: "entropy_bottleneck/factor_2/Adam_1"
        string_val: "entropy_bottleneck/matrix_3/Adam"
        string_val: "entropy_bottleneck/matrix_3/Adam_1"
        string_val: "entropy_bottleneck/bias_3/Adam"
        string_val: "entropy_bottleneck/bias_3/Adam_1"
        string_val: "synthesis_transform/layer_0/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
        string_val: "synthesis_transform/layer_0/bias/Adam"
        string_val: "synthesis_transform/layer_0/bias/Adam_1"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
        string_val: "synthesis_transform/layer_1/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
        string_val: "synthesis_transform/layer_1/bias/Adam"
        string_val: "synthesis_transform/layer_1/bias/Adam_1"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
        string_val: "synthesis_transform/layer_2/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
        string_val: "synthesis_transform/layer_2/bias/Adam"
        string_val: "synthesis_transform/layer_2/bias/Adam_1"
        string_val: "beta1_power_1"
        string_val: "beta2_power_1"
        string_val: "entropy_bottleneck/quantiles/Adam"
        string_val: "entropy_bottleneck/quantiles/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  input: "bpp"
  input: "mse"
  input: "original"
  input: "reconstruction"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_e67f25c95c054d5b831311e1b9617f22/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 100
          }
        }
        string_val: "analysis_transform/layer_0/bias"
        string_val: "analysis_transform/layer_0/bias/Adam"
        string_val: "analysis_transform/layer_0/bias/Adam_1"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
        string_val: "analysis_transform/layer_0/kernel_rdft"
        string_val: "analysis_transform/layer_0/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_0/kernel_rdft/Adam_1"
        string_val: "analysis_transform/layer_1/bias"
        string_val: "analysis_transform/layer_1/bias/Adam"
        string_val: "analysis_transform/layer_1/bias/Adam_1"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
        string_val: "analysis_transform/layer_1/kernel_rdft"
        string_val: "analysis_transform/layer_1/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_1/kernel_rdft/Adam_1"
        string_val: "analysis_transform/layer_2/kernel_rdft"
        string_val: "analysis_transform/layer_2/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_2/kernel_rdft/Adam_1"
        string_val: "beta1_power"
        string_val: "beta1_power_1"
        string_val: "beta2_power"
        string_val: "beta2_power_1"
        string_val: "entropy_bottleneck/bias_0"
        string_val: "entropy_bottleneck/bias_0/Adam"
        string_val: "entropy_bottleneck/bias_0/Adam_1"
        string_val: "entropy_bottleneck/bias_1"
        string_val: "entropy_bottleneck/bias_1/Adam"
        string_val: "entropy_bottleneck/bias_1/Adam_1"
        string_val: "entropy_bottleneck/bias_2"
        string_val: "entropy_bottleneck/bias_2/Adam"
        string_val: "entropy_bottleneck/bias_2/Adam_1"
        string_val: "entropy_bottleneck/bias_3"
        string_val: "entropy_bottleneck/bias_3/Adam"
        string_val: "entropy_bottleneck/bias_3/Adam_1"
        string_val: "entropy_bottleneck/cdf_length"
        string_val: "entropy_bottleneck/factor_0"
        string_val: "entropy_bottleneck/factor_0/Adam"
        string_val: "entropy_bottleneck/factor_0/Adam_1"
        string_val: "entropy_bottleneck/factor_1"
        string_val: "entropy_bottleneck/factor_1/Adam"
        string_val: "entropy_bottleneck/factor_1/Adam_1"
        string_val: "entropy_bottleneck/factor_2"
        string_val: "entropy_bottleneck/factor_2/Adam"
        string_val: "entropy_bottleneck/factor_2/Adam_1"
        string_val: "entropy_bottleneck/matrix_0"
        string_val: "entropy_bottleneck/matrix_0/Adam"
        string_val: "entropy_bottleneck/matrix_0/Adam_1"
        string_val: "entropy_bottleneck/matrix_1"
        string_val: "entropy_bottleneck/matrix_1/Adam"
        string_val: "entropy_bottleneck/matrix_1/Adam_1"
        string_val: "entropy_bottleneck/matrix_2"
        string_val: "entropy_bottleneck/matrix_2/Adam"
        string_val: "entropy_bottleneck/matrix_2/Adam_1"
        string_val: "entropy_bottleneck/matrix_3"
        string_val: "entropy_bottleneck/matrix_3/Adam"
        string_val: "entropy_bottleneck/matrix_3/Adam_1"
        string_val: "entropy_bottleneck/quantiles"
        string_val: "entropy_bottleneck/quantiles/Adam"
        string_val: "entropy_bottleneck/quantiles/Adam_1"
        string_val: "entropy_bottleneck/quantized_cdf"
        string_val: "global_step"
        string_val: "synthesis_transform/layer_0/bias"
        string_val: "synthesis_transform/layer_0/bias/Adam"
        string_val: "synthesis_transform/layer_0/bias/Adam_1"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
        string_val: "synthesis_transform/layer_0/kernel_rdft"
        string_val: "synthesis_transform/layer_0/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
        string_val: "synthesis_transform/layer_1/bias"
        string_val: "synthesis_transform/layer_1/bias/Adam"
        string_val: "synthesis_transform/layer_1/bias/Adam_1"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
        string_val: "synthesis_transform/layer_1/kernel_rdft"
        string_val: "synthesis_transform/layer_1/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
        string_val: "synthesis_transform/layer_2/bias"
        string_val: "synthesis_transform/layer_2/bias/Adam"
        string_val: "synthesis_transform/layer_2/bias/Adam_1"
        string_val: "synthesis_transform/layer_2/kernel_rdft"
        string_val: "synthesis_transform/layer_2/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 100
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "analysis_transform/layer_0/bias/Read/ReadVariableOp"
  input: "analysis_transform/layer_0/bias/Adam/Read/ReadVariableOp"
  input: "analysis_transform/layer_0/bias/Adam_1/Read/ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Read/ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam/Read/ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1/Read/ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Read/ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam/Read/ReadVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1/Read/ReadVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft/Read/ReadVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam/Read/ReadVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam_1/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/bias/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/bias/Adam/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/bias/Adam_1/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam/Read/ReadVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam_1/Read/ReadVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft/Read/ReadVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam/Read/ReadVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam_1/Read/ReadVariableOp"
  input: "beta1_power/Read/ReadVariableOp"
  input: "beta1_power_1/Read/ReadVariableOp"
  input: "beta2_power/Read/ReadVariableOp"
  input: "beta2_power_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_0/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_0/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_0/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_1/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_1/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_2/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_2/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_2/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_3/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_3/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/bias_3/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/cdf_length/Read/ReadVariableOp"
  input: "entropy_bottleneck/factor_0/Read/ReadVariableOp"
  input: "entropy_bottleneck/factor_0/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/factor_0/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/factor_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/factor_1/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/factor_1/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/factor_2/Read/ReadVariableOp"
  input: "entropy_bottleneck/factor_2/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/factor_2/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_0/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_0/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_0/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_1/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_1/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_2/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_2/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_2/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_3/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_3/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/matrix_3/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/quantiles/Read/ReadVariableOp"
  input: "entropy_bottleneck/quantiles/Adam/Read/ReadVariableOp"
  input: "entropy_bottleneck/quantiles/Adam_1/Read/ReadVariableOp"
  input: "entropy_bottleneck/quantized_cdf/Read/ReadVariableOp"
  input: "global_step"
  input: "synthesis_transform/layer_0/bias/Read/ReadVariableOp"
  input: "synthesis_transform/layer_0/bias/Adam/Read/ReadVariableOp"
  input: "synthesis_transform/layer_0/bias/Adam_1/Read/ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Read/ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam/Read/ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1/Read/ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Read/ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam/Read/ReadVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1/Read/ReadVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Read/ReadVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam/Read/ReadVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam_1/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/bias/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/bias/Adam/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/bias/Adam_1/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam/Read/ReadVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam_1/Read/ReadVariableOp"
  input: "synthesis_transform/layer_2/bias/Read/ReadVariableOp"
  input: "synthesis_transform/layer_2/bias/Adam/Read/ReadVariableOp"
  input: "synthesis_transform/layer_2/bias/Adam_1/Read/ReadVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Read/ReadVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam/Read/ReadVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam_1/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 100
          }
        }
        string_val: "analysis_transform/layer_0/bias"
        string_val: "analysis_transform/layer_0/bias/Adam"
        string_val: "analysis_transform/layer_0/bias/Adam_1"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
        string_val: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
        string_val: "analysis_transform/layer_0/kernel_rdft"
        string_val: "analysis_transform/layer_0/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_0/kernel_rdft/Adam_1"
        string_val: "analysis_transform/layer_1/bias"
        string_val: "analysis_transform/layer_1/bias/Adam"
        string_val: "analysis_transform/layer_1/bias/Adam_1"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
        string_val: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
        string_val: "analysis_transform/layer_1/kernel_rdft"
        string_val: "analysis_transform/layer_1/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_1/kernel_rdft/Adam_1"
        string_val: "analysis_transform/layer_2/kernel_rdft"
        string_val: "analysis_transform/layer_2/kernel_rdft/Adam"
        string_val: "analysis_transform/layer_2/kernel_rdft/Adam_1"
        string_val: "beta1_power"
        string_val: "beta1_power_1"
        string_val: "beta2_power"
        string_val: "beta2_power_1"
        string_val: "entropy_bottleneck/bias_0"
        string_val: "entropy_bottleneck/bias_0/Adam"
        string_val: "entropy_bottleneck/bias_0/Adam_1"
        string_val: "entropy_bottleneck/bias_1"
        string_val: "entropy_bottleneck/bias_1/Adam"
        string_val: "entropy_bottleneck/bias_1/Adam_1"
        string_val: "entropy_bottleneck/bias_2"
        string_val: "entropy_bottleneck/bias_2/Adam"
        string_val: "entropy_bottleneck/bias_2/Adam_1"
        string_val: "entropy_bottleneck/bias_3"
        string_val: "entropy_bottleneck/bias_3/Adam"
        string_val: "entropy_bottleneck/bias_3/Adam_1"
        string_val: "entropy_bottleneck/cdf_length"
        string_val: "entropy_bottleneck/factor_0"
        string_val: "entropy_bottleneck/factor_0/Adam"
        string_val: "entropy_bottleneck/factor_0/Adam_1"
        string_val: "entropy_bottleneck/factor_1"
        string_val: "entropy_bottleneck/factor_1/Adam"
        string_val: "entropy_bottleneck/factor_1/Adam_1"
        string_val: "entropy_bottleneck/factor_2"
        string_val: "entropy_bottleneck/factor_2/Adam"
        string_val: "entropy_bottleneck/factor_2/Adam_1"
        string_val: "entropy_bottleneck/matrix_0"
        string_val: "entropy_bottleneck/matrix_0/Adam"
        string_val: "entropy_bottleneck/matrix_0/Adam_1"
        string_val: "entropy_bottleneck/matrix_1"
        string_val: "entropy_bottleneck/matrix_1/Adam"
        string_val: "entropy_bottleneck/matrix_1/Adam_1"
        string_val: "entropy_bottleneck/matrix_2"
        string_val: "entropy_bottleneck/matrix_2/Adam"
        string_val: "entropy_bottleneck/matrix_2/Adam_1"
        string_val: "entropy_bottleneck/matrix_3"
        string_val: "entropy_bottleneck/matrix_3/Adam"
        string_val: "entropy_bottleneck/matrix_3/Adam_1"
        string_val: "entropy_bottleneck/quantiles"
        string_val: "entropy_bottleneck/quantiles/Adam"
        string_val: "entropy_bottleneck/quantiles/Adam_1"
        string_val: "entropy_bottleneck/quantized_cdf"
        string_val: "global_step"
        string_val: "synthesis_transform/layer_0/bias"
        string_val: "synthesis_transform/layer_0/bias/Adam"
        string_val: "synthesis_transform/layer_0/bias/Adam_1"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
        string_val: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
        string_val: "synthesis_transform/layer_0/kernel_rdft"
        string_val: "synthesis_transform/layer_0/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
        string_val: "synthesis_transform/layer_1/bias"
        string_val: "synthesis_transform/layer_1/bias/Adam"
        string_val: "synthesis_transform/layer_1/bias/Adam_1"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
        string_val: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
        string_val: "synthesis_transform/layer_1/kernel_rdft"
        string_val: "synthesis_transform/layer_1/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
        string_val: "synthesis_transform/layer_2/bias"
        string_val: "synthesis_transform/layer_2/bias/Adam"
        string_val: "synthesis_transform/layer_2/bias/Adam_1"
        string_val: "synthesis_transform/layer_2/kernel_rdft"
        string_val: "synthesis_transform/layer_2/kernel_rdft/Adam"
        string_val: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 100
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/bias"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/bias/Adam"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/bias/Adam_1"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_beta/Adam_1"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/gdn_0/reparam_gamma/Adam_1"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_0/kernel_rdft/Adam_1"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/bias"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/bias/Adam"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/bias/Adam_1"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_beta/Adam_1"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/gdn_1/reparam_gamma/Adam_1"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_1/kernel_rdft/Adam_1"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "analysis_transform/layer_2/kernel_rdft/Adam_1"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "beta1_power_1"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "beta2_power_1"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_0"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_0/Adam"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_0/Adam_1"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_1"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_1/Adam"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_1/Adam_1"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_2"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_2/Adam"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_2/Adam_1"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_3"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_3/Adam"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/bias_3/Adam_1"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/cdf_length"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_0"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_0/Adam"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_0/Adam_1"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_1"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_1/Adam"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_1/Adam_1"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_2"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_2/Adam"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/factor_2/Adam_1"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_0"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_0/Adam"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_0/Adam_1"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_1"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_1/Adam"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_1/Adam_1"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_2"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_2/Adam"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_2/Adam_1"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_3"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_3/Adam"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/matrix_3/Adam_1"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/quantiles"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/quantiles/Adam"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/quantiles/Adam_1"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "entropy_bottleneck/quantized_cdf"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/bias"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/bias/Adam"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/bias/Adam_1"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_beta/Adam_1"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/igdn_0/reparam_gamma/Adam_1"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft"
  input: "save/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam"
  input: "save/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_0/kernel_rdft/Adam_1"
  input: "save/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/bias"
  input: "save/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/bias/Adam"
  input: "save/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/bias/Adam_1"
  input: "save/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta"
  input: "save/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam"
  input: "save/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_beta/Adam_1"
  input: "save/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma"
  input: "save/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam"
  input: "save/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/igdn_1/reparam_gamma/Adam_1"
  input: "save/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft"
  input: "save/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam"
  input: "save/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_1/kernel_rdft/Adam_1"
  input: "save/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/bias"
  input: "save/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/bias/Adam"
  input: "save/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/bias/Adam_1"
  input: "save/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft"
  input: "save/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam"
  input: "save/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "synthesis_transform/layer_2/kernel_rdft/Adam_1"
  input: "save/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
  input: "^save/AssignVariableOp_98"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "decode_image_cond_jpeg_false_21"
      input_arg {
        name: "is_png_substr_readfile"
        type: DT_STRING
      }
      input_arg {
        name: "cond_png_decode_image_substr"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_UINT8
      }
      is_stateful: true
      control_output: "cond_png"
    }
    node_def {
      name: "is_png/Substr/pos"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "is_png/Substr/len"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "is_png/Substr"
      op: "Substr"
      input: "is_png_substr_readfile"
      input: "is_png/Substr/pos:output:0"
      input: "is_png/Substr/len:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "unit"
        value {
          s: "BYTE"
        }
      }
    }
    node_def {
      name: "is_png/Equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "\211PN"
          }
        }
      }
    }
    node_def {
      name: "is_png/Equal"
      op: "Equal"
      input: "is_png/Substr:output:0"
      input: "is_png/Equal/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "cond_png"
      op: "If"
      input: "is_png/Equal:z:0"
      input: "is_png_substr_readfile"
      input: "cond_png_decode_image_substr"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_UINT8
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "cond_png_false_40"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "cond_png_true_39"
          }
        }
      }
    }
    node_def {
      name: "cond_png/Identity"
      op: "Identity"
      input: "cond_png:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "cond_png/Identity:output:0"
      input: "^cond_png"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    control_ret {
      key: "cond_png"
      value: "cond_png"
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "cond_png_true_39"
      input_arg {
        name: "decodepng_readfile"
        type: DT_STRING
      }
      input_arg {
        name: "placeholder"
        type: DT_STRING
      }
      output_arg {
        name: "identity_1"
        type: DT_UINT8
      }
    }
    node_def {
      name: "DecodePng"
      op: "DecodePng"
      input: "decodepng_readfile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "channels"
        value {
          i: 3
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_UINT8
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "DecodePng:image:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_map_<lambda>_122"
      input_arg {
        name: "args_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "random_crop/Assert/Assert"
    }
    node_def {
      name: "random_crop/size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\001\000\000\000\001\000\000\003\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "random_crop/Shape"
      op: "Shape"
      input: "args_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "random_crop/GreaterEqual"
      op: "GreaterEqual"
      input: "random_crop/Shape:output:0"
      input: "random_crop/size:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node_def {
      name: "random_crop/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "random_crop/All"
      op: "All"
      input: "random_crop/GreaterEqual:z:0"
      input: "random_crop/Const:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "random_crop/Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Need value.shape >= size, got "
          }
        }
      }
    }
    node_def {
      name: "random_crop/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Need value.shape >= size, got "
          }
        }
      }
    }
    node_def {
      name: "random_crop/Assert/Assert"
      op: "Assert"
      input: "random_crop/All:output:0"
      input: "random_crop/Assert/Assert/data_0:output:0"
      input: "random_crop/Shape:output:0"
      input: "random_crop/size:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
            type: DT_INT32
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 1000
        }
      }
    }
    node_def {
      name: "random_crop/control_dependency"
      op: "Identity"
      input: "random_crop/Shape:output:0"
      input: "^random_crop/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@random_crop/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "random_crop/sub"
      op: "Sub"
      input: "random_crop/control_dependency:output:0"
      input: "random_crop/size:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node_def {
      name: "random_crop/add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "random_crop/add"
      op: "AddV2"
      input: "random_crop/sub:z:0"
      input: "random_crop/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node_def {
      name: "random_crop/Shape_1"
      op: "Shape"
      input: "random_crop/control_dependency:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "random_crop/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "random_crop/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "random_crop/random_uniform"
      op: "RandomUniformInt"
      input: "random_crop/Shape_1:output:0"
      input: "random_crop/random_uniform/min:output:0"
      input: "random_crop/random_uniform/max:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tout"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "random_crop/mod"
      op: "FloorMod"
      input: "random_crop/random_uniform:output:0"
      input: "random_crop/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node_def {
      name: "random_crop"
      op: "Slice"
      input: "args_0"
      input: "random_crop/mod:z:0"
      input: "random_crop/size:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "random_crop:output:0"
      input: "^random_crop/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    control_ret {
      key: "random_crop/Assert/Assert"
      value: "random_crop/Assert/Assert"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_gif_false_51"
      input_arg {
        name: "substr_readfile"
        type: DT_STRING
      }
      output_arg {
        name: "identity_1"
        type: DT_UINT8
      }
      is_stateful: true
      control_output: "Assert/Assert"
      control_output: "Assert_1/Assert"
    }
    node_def {
      name: "Substr/pos"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Substr/len"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "Substr"
      op: "Substr"
      input: "substr_readfile"
      input: "Substr/pos:output:0"
      input: "Substr/len:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "unit"
        value {
          s: "BYTE"
        }
      }
    }
    node_def {
      name: "is_bmp/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "BM"
          }
        }
      }
    }
    node_def {
      name: "is_bmp"
      op: "Equal"
      input: "Substr:output:0"
      input: "is_bmp/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Unable to decode bytes as JPEG, PNG, GIF, or BMP"
          }
        }
      }
    }
    node_def {
      name: "Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Unable to decode bytes as JPEG, PNG, GIF, or BMP"
          }
        }
      }
    }
    node_def {
      name: "Assert/Assert"
      op: "Assert"
      input: "is_bmp:z:0"
      input: "Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "check_channels/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "check_channels/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "check_channels"
      op: "NotEqual"
      input: "check_channels/x:output:0"
      input: "check_channels/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "Assert_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Channels must be in (None, 0, 3) when decoding BMP images"
          }
        }
      }
    }
    node_def {
      name: "Assert_1/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Channels must be in (None, 0, 3) when decoding BMP images"
          }
        }
      }
    }
    node_def {
      name: "Assert_1/Assert"
      op: "Assert"
      input: "check_channels:z:0"
      input: "Assert_1/Assert/data_0:output:0"
      input: "^Assert/Assert"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "DecodeBmp"
      op: "DecodeBmp"
      input: "substr_readfile"
      input: "^Assert/Assert"
      input: "^Assert_1/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "channels"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "DecodeBmp:image:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "Identity:output:0"
      input: "^Assert/Assert"
      input: "^Assert_1/Assert"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "Assert/Assert"
      value: "Assert/Assert"
    }
    control_ret {
      key: "Assert_1/Assert"
      value: "Assert_1/Assert"
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "_make_dataset_EmadYl1Fqfs"
      output_arg {
        name: "modeldataset"
        type: DT_VARIANT
      }
      description: "Factory function for a dataset."
      is_stateful: true
    }
    node_def {
      name: "optimizations"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 3
              }
            }
            string_val: "map_and_batch_fusion"
            string_val: "noop_elimination"
            string_val: "shuffle_and_repeat_fusion"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/normalize_element/component_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "images/Page3 2.png"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "OptimizeDataset/normalize_element/component_0:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ShuffleDataset"
      op: "ShuffleDataset"
      input: "OptimizeDataset/TensorSliceDataset:handle:0"
      input: "OptimizeDataset/buffer_size:output:0"
      input: "OptimizeDataset/seed:output:0"
      input: "OptimizeDataset/seed2:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "OptimizeDataset/count"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/RepeatDataset"
      op: "RepeatDataset"
      input: "OptimizeDataset/ShuffleDataset:handle:0"
      input: "OptimizeDataset/count:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/num_parallel_calls"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 16
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "OptimizeDataset/RepeatDataset:handle:0"
      input: "OptimizeDataset/num_parallel_calls:output:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_map_read_png_99"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "preserve_cardinality"
        value {
          b: false
        }
      }
      attr {
        key: "sloppy"
        value {
          b: false
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "OptimizeDataset/MapDataset"
      op: "MapDataset"
      input: "OptimizeDataset/ParallelMapDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_map_<lambda>_122"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "preserve_cardinality"
        value {
          b: false
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "OptimizeDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 8
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/drop_remainder"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/BatchDatasetV2"
      op: "BatchDatasetV2"
      input: "OptimizeDataset/MapDataset:handle:0"
      input: "OptimizeDataset/batch_size:output:0"
      input: "OptimizeDataset/drop_remainder:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "parallel_copy"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 32
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/PrefetchDataset"
      op: "PrefetchDataset"
      input: "OptimizeDataset/BatchDatasetV2:handle:0"
      input: "OptimizeDataset/buffer_size_1:output:0"
      attr {
        key: "legacy_autotune"
        value {
          b: true
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "slack_period"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "OptimizeDataset"
      op: "OptimizeDataset"
      input: "OptimizeDataset/PrefetchDataset:handle:0"
      input: "optimizations:output:0"
      attr {
        key: "optimization_configs"
        value {
          list {
            s: "map_vectorization:use_choose_fastest:false"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "ModelDataset"
      op: "ModelDataset"
      input: "OptimizeDataset:handle:0"
      attr {
        key: "algorithm"
        value {
          i: 0
        }
      }
      attr {
        key: "cpu_budget"
        value {
          i: 0
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    ret {
      key: "modeldataset"
      value: "ModelDataset:handle:0"
    }
    attr {
      key: "_disable_call_shape_inference"
      value {
        b: true
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_map_read_png_99"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "decode_image/cond_jpeg"
    }
    node_def {
      name: "ReadFile"
      op: "ReadFile"
      input: "args_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "decode_image/Substr/pos"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "decode_image/Substr/len"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "decode_image/Substr"
      op: "Substr"
      input: "ReadFile:contents:0"
      input: "decode_image/Substr/pos:output:0"
      input: "decode_image/Substr/len:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "unit"
        value {
          s: "BYTE"
        }
      }
    }
    node_def {
      name: "decode_image/is_jpeg/Substr/pos"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "decode_image/is_jpeg/Substr/len"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "decode_image/is_jpeg/Substr"
      op: "Substr"
      input: "ReadFile:contents:0"
      input: "decode_image/is_jpeg/Substr/pos:output:0"
      input: "decode_image/is_jpeg/Substr/len:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "unit"
        value {
          s: "BYTE"
        }
      }
    }
    node_def {
      name: "decode_image/is_jpeg/Equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "\377\330\377"
          }
        }
      }
    }
    node_def {
      name: "decode_image/is_jpeg/Equal"
      op: "Equal"
      input: "decode_image/is_jpeg/Substr:output:0"
      input: "decode_image/is_jpeg/Equal/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "decode_image/cond_jpeg"
      op: "If"
      input: "decode_image/is_jpeg/Equal:z:0"
      input: "ReadFile:contents:0"
      input: "decode_image/Substr:output:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_UINT8
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "decode_image_cond_jpeg_false_21"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "decode_image_cond_jpeg_true_20"
          }
        }
      }
    }
    node_def {
      name: "decode_image/cond_jpeg/Identity"
      op: "Identity"
      input: "decode_image/cond_jpeg:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "decode_image/cond_jpeg/Identity:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "truediv/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 255.0
          }
        }
      }
    }
    node_def {
      name: "truediv"
      op: "RealDiv"
      input: "Cast:y:0"
      input: "truediv/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "truediv:z:0"
      input: "^decode_image/cond_jpeg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "decode_image/cond_jpeg"
      value: "decode_image/cond_jpeg"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_png_false_40"
      input_arg {
        name: "cond_gif_readfile"
        type: DT_STRING
      }
      input_arg {
        name: "is_gif_decode_image_substr"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_UINT8
      }
      is_stateful: true
      control_output: "cond_gif"
    }
    node_def {
      name: "is_gif/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "GIF"
          }
        }
      }
    }
    node_def {
      name: "is_gif"
      op: "Equal"
      input: "is_gif_decode_image_substr"
      input: "is_gif/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "cond_gif"
      op: "If"
      input: "is_gif:z:0"
      input: "cond_gif_readfile"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_UINT8
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "cond_gif_false_51"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "cond_gif_true_50"
          }
        }
      }
    }
    node_def {
      name: "cond_gif/Identity"
      op: "Identity"
      input: "cond_gif:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "cond_gif/Identity:output:0"
      input: "^cond_gif"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    control_ret {
      key: "cond_gif"
      value: "cond_gif"
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "cond_gif_true_50"
      input_arg {
        name: "decodegif_readfile"
        type: DT_STRING
      }
      output_arg {
        name: "identity_1"
        type: DT_UINT8
      }
      is_stateful: true
      control_output: "Assert/Assert"
    }
    node_def {
      name: "check_gif_channels/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "check_gif_channels/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "check_gif_channels"
      op: "NotEqual"
      input: "check_gif_channels/x:output:0"
      input: "check_gif_channels/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "check_gif_channels_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "check_gif_channels_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "check_gif_channels_1"
      op: "NotEqual"
      input: "check_gif_channels_1/x:output:0"
      input: "check_gif_channels_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "LogicalAnd"
      op: "LogicalAnd"
      input: "check_gif_channels:z:0"
      input: "check_gif_channels_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Channels must be in (None, 0, 3) when decoding GIF images"
          }
        }
      }
    }
    node_def {
      name: "Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Channels must be in (None, 0, 3) when decoding GIF images"
          }
        }
      }
    }
    node_def {
      name: "Assert/Assert"
      op: "Assert"
      input: "LogicalAnd:z:0"
      input: "Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "DecodeGif"
      op: "DecodeGif"
      input: "decodegif_readfile"
      input: "^Assert/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "DecodeGif:image:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "Identity:output:0"
      input: "^Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "Assert/Assert"
      value: "Assert/Assert"
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "decode_image_cond_jpeg_true_20"
      input_arg {
        name: "decodejpeg_readfile"
        type: DT_STRING
      }
      input_arg {
        name: "placeholder"
        type: DT_STRING
      }
      output_arg {
        name: "identity_1"
        type: DT_UINT8
      }
      is_stateful: true
      control_output: "Assert/Assert"
    }
    node_def {
      name: "check_jpeg_channels/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "check_jpeg_channels/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "check_jpeg_channels"
      op: "NotEqual"
      input: "check_jpeg_channels/x:output:0"
      input: "check_jpeg_channels/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Channels must be in (None, 0, 1, 3) when decoding JPEG images"
          }
        }
      }
    }
    node_def {
      name: "Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Channels must be in (None, 0, 1, 3) when decoding JPEG images"
          }
        }
      }
    }
    node_def {
      name: "Assert/Assert"
      op: "Assert"
      input: "check_jpeg_channels:z:0"
      input: "Assert/Assert/data_0:output:0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "DecodeJpeg"
      op: "DecodeJpeg"
      input: "decodejpeg_readfile"
      input: "^Assert/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "acceptable_fraction"
        value {
          f: 1.0
        }
      }
      attr {
        key: "channels"
        value {
          i: 3
        }
      }
      attr {
        key: "dct_method"
        value {
          s: ""
        }
      }
      attr {
        key: "fancy_upscaling"
        value {
          b: true
        }
      }
      attr {
        key: "ratio"
        value {
          i: 1
        }
      }
      attr {
        key: "try_recover_truncated"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "DecodeJpeg:image:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "Identity:output:0"
      input: "^Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    control_ret {
      key: "Assert/Assert"
      value: "Assert/Assert"
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
}
versions {
  producer: 134
  min_consumer: 12
}
